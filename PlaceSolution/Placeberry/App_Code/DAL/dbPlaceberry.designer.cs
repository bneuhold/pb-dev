#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Placeberry_dev")]
	public partial class dbPlaceberryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUnwantedWord(UnwantedWord instance);
    partial void UpdateUnwantedWord(UnwantedWord instance);
    partial void DeleteUnwantedWord(UnwantedWord instance);
    partial void InsertAdvertRaw(AdvertRaw instance);
    partial void UpdateAdvertRaw(AdvertRaw instance);
    partial void DeleteAdvertRaw(AdvertRaw instance);
    partial void InsertAdvertUltimateTable(AdvertUltimateTable instance);
    partial void UpdateAdvertUltimateTable(AdvertUltimateTable instance);
    partial void DeleteAdvertUltimateTable(AdvertUltimateTable instance);
    partial void InsertCandidateWord(CandidateWord instance);
    partial void UpdateCandidateWord(CandidateWord instance);
    partial void DeleteCandidateWord(CandidateWord instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertCurrencyRelation(CurrencyRelation instance);
    partial void UpdateCurrencyRelation(CurrencyRelation instance);
    partial void DeleteCurrencyRelation(CurrencyRelation instance);
    partial void InsertGeneration(Generation instance);
    partial void UpdateGeneration(Generation instance);
    partial void DeleteGeneration(Generation instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertQueryWeb(QueryWeb instance);
    partial void UpdateQueryWeb(QueryWeb instance);
    partial void DeleteQueryWeb(QueryWeb instance);
    partial void InsertSource(Source instance);
    partial void UpdateSource(Source instance);
    partial void DeleteSource(Source instance);
    partial void InserttblAdvertEN(tblAdvertEN instance);
    partial void UpdatetblAdvertEN(tblAdvertEN instance);
    partial void DeletetblAdvertEN(tblAdvertEN instance);
    partial void InsertUltimateTable(UltimateTable instance);
    partial void UpdateUltimateTable(UltimateTable instance);
    partial void DeleteUltimateTable(UltimateTable instance);
    partial void InsertUltimateTableObjectType(UltimateTableObjectType instance);
    partial void UpdateUltimateTableObjectType(UltimateTableObjectType instance);
    partial void DeleteUltimateTableObjectType(UltimateTableObjectType instance);
    partial void InsertUltimateTableRelation(UltimateTableRelation instance);
    partial void UpdateUltimateTableRelation(UltimateTableRelation instance);
    partial void DeleteUltimateTableRelation(UltimateTableRelation instance);
    partial void InsertAdvert(Advert instance);
    partial void UpdateAdvert(Advert instance);
    partial void DeleteAdvert(Advert instance);
    #endregion
		
		public dbPlaceberryDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Placeberry_CS"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbPlaceberryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPlaceberryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPlaceberryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPlaceberryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UnwantedWord> UnwantedWords
		{
			get
			{
				return this.GetTable<UnwantedWord>();
			}
		}
		
		public System.Data.Linq.Table<AdvertRaw> AdvertRaws
		{
			get
			{
				return this.GetTable<AdvertRaw>();
			}
		}
		
		public System.Data.Linq.Table<AdvertUltimateTable> AdvertUltimateTables
		{
			get
			{
				return this.GetTable<AdvertUltimateTable>();
			}
		}
		
		public System.Data.Linq.Table<CandidateWord> CandidateWords
		{
			get
			{
				return this.GetTable<CandidateWord>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyRelation> CurrencyRelations
		{
			get
			{
				return this.GetTable<CurrencyRelation>();
			}
		}
		
		public System.Data.Linq.Table<Generation> Generations
		{
			get
			{
				return this.GetTable<Generation>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<QueryWeb> QueryWebs
		{
			get
			{
				return this.GetTable<QueryWeb>();
			}
		}
		
		public System.Data.Linq.Table<Source> Sources
		{
			get
			{
				return this.GetTable<Source>();
			}
		}
		
		public System.Data.Linq.Table<tblAdvertEN> tblAdvertENs
		{
			get
			{
				return this.GetTable<tblAdvertEN>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTable> UltimateTables
		{
			get
			{
				return this.GetTable<UltimateTable>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTableObjectType> UltimateTableObjectTypes
		{
			get
			{
				return this.GetTable<UltimateTableObjectType>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTableRelation> UltimateTableRelations
		{
			get
			{
				return this.GetTable<UltimateTableRelation>();
			}
		}
		
		public System.Data.Linq.Table<Advert> Adverts
		{
			get
			{
				return this.GetTable<Advert>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAdvert")]
		public ISingleResult<GetAdvertResult> GetAdvert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdvertID", DbType="Int")] System.Nullable<int> advertID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), advertID);
			return ((ISingleResult<GetAdvertResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TestConvert")]
		public ISingleResult<TestConvertResult> TestConvert()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<TestConvertResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcessAdvertRow")]
		public int ProcessAdvertRow()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.QueryParsing")]
		public int QueryParsing([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string query, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query, languageId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.QueryParsingUltimate")]
		public int QueryParsingUltimate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string query)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchTemp")]
		public ISingleResult<SearchTempResult> SearchTemp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(2000)")] string query)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query);
			return ((ISingleResult<SearchTempResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetResults", IsComposable=true)]
		public object GetResults([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string query, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> top)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query, languageId, top).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnwantedWord")]
	public partial class UnwantedWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Regex;
		
		private System.Nullable<int> _SourceId;
		
		private bool _Active;
		
		private EntityRef<Source> _Source;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRegexChanging(string value);
    partial void OnRegexChanged();
    partial void OnSourceIdChanging(System.Nullable<int> value);
    partial void OnSourceIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public UnwantedWord()
		{
			this._Source = default(EntityRef<Source>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regex", DbType="NVarChar(500)")]
		public string Regex
		{
			get
			{
				return this._Regex;
			}
			set
			{
				if ((this._Regex != value))
				{
					this.OnRegexChanging(value);
					this.SendPropertyChanging();
					this._Regex = value;
					this.SendPropertyChanged("Regex");
					this.OnRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					if (this._Source.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Source_UnwantedWord", Storage="_Source", ThisKey="SourceId", OtherKey="Id", IsForeignKey=true)]
		public Source Source
		{
			get
			{
				return this._Source.Entity;
			}
			set
			{
				Source previousValue = this._Source.Entity;
				if (((previousValue != value) 
							|| (this._Source.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Source.Entity = null;
						previousValue.UnwantedWords.Remove(this);
					}
					this._Source.Entity = value;
					if ((value != null))
					{
						value.UnwantedWords.Add(this);
						this._SourceId = value.Id;
					}
					else
					{
						this._SourceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Source");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvertRaw")]
	public partial class AdvertRaw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GenerationId;
		
		private System.Nullable<int> _LanguageId;
		
		private string _HashCode;
		
		private char _SystemStatus;
		
		private bool _Active;
		
		private string _Source;
		
		private string _Language;
		
		private string _GroupType;
		
		private string _GroupSubType;
		
		private string _SourceCategory;
		
		private string _Title;
		
		private string _AccommType;
		
		private string _AccommSubType;
		
		private string _VacationType;
		
		private string _AdvertCode;
		
		private string _UrlLink;
		
		private string _PictureUrl;
		
		private string _Stars;
		
		private string _LocationDesc;
		
		private string _Country;
		
		private string _Region;
		
		private string _Subregion;
		
		private string _Island;
		
		private string _City;
		
		private string _PriceOld;
		
		private string _PriceFrom;
		
		private string _PriceDesc;
		
		private string _Date1;
		
		private string _Date2;
		
		private string _DateDesc;
		
		private string _DaysNum;
		
		private string _Description;
		
		private string _Activities;
		
		private string _Facilities;
		
		private string _Beach;
		
		private string _BeachDistanceM;
		
		private string _DistanceFromCentreM;
		
		private string _PetsDesc;
		
		private string _InfoDesc;
		
		private EntityRef<Generation> _Generation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGenerationIdChanging(System.Nullable<int> value);
    partial void OnGenerationIdChanged();
    partial void OnLanguageIdChanging(System.Nullable<int> value);
    partial void OnLanguageIdChanged();
    partial void OnHashCodeChanging(string value);
    partial void OnHashCodeChanged();
    partial void OnSystemStatusChanging(char value);
    partial void OnSystemStatusChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnGroupTypeChanging(string value);
    partial void OnGroupTypeChanged();
    partial void OnGroupSubTypeChanging(string value);
    partial void OnGroupSubTypeChanged();
    partial void OnSourceCategoryChanging(string value);
    partial void OnSourceCategoryChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAccommTypeChanging(string value);
    partial void OnAccommTypeChanged();
    partial void OnAccommSubTypeChanging(string value);
    partial void OnAccommSubTypeChanged();
    partial void OnVacationTypeChanging(string value);
    partial void OnVacationTypeChanged();
    partial void OnAdvertCodeChanging(string value);
    partial void OnAdvertCodeChanged();
    partial void OnUrlLinkChanging(string value);
    partial void OnUrlLinkChanged();
    partial void OnPictureUrlChanging(string value);
    partial void OnPictureUrlChanged();
    partial void OnStarsChanging(string value);
    partial void OnStarsChanged();
    partial void OnLocationDescChanging(string value);
    partial void OnLocationDescChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnSubregionChanging(string value);
    partial void OnSubregionChanged();
    partial void OnIslandChanging(string value);
    partial void OnIslandChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPriceOldChanging(string value);
    partial void OnPriceOldChanged();
    partial void OnPriceFromChanging(string value);
    partial void OnPriceFromChanged();
    partial void OnPriceDescChanging(string value);
    partial void OnPriceDescChanged();
    partial void OnDate1Changing(string value);
    partial void OnDate1Changed();
    partial void OnDate2Changing(string value);
    partial void OnDate2Changed();
    partial void OnDateDescChanging(string value);
    partial void OnDateDescChanged();
    partial void OnDaysNumChanging(string value);
    partial void OnDaysNumChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnFacilitiesChanging(string value);
    partial void OnFacilitiesChanged();
    partial void OnBeachChanging(string value);
    partial void OnBeachChanged();
    partial void OnBeachDistanceMChanging(string value);
    partial void OnBeachDistanceMChanged();
    partial void OnDistanceFromCentreMChanging(string value);
    partial void OnDistanceFromCentreMChanged();
    partial void OnPetsDescChanging(string value);
    partial void OnPetsDescChanged();
    partial void OnInfoDescChanging(string value);
    partial void OnInfoDescChanged();
    #endregion
		
		public AdvertRaw()
		{
			this._Generation = default(EntityRef<Generation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenerationId", DbType="Int")]
		public System.Nullable<int> GenerationId
		{
			get
			{
				return this._GenerationId;
			}
			set
			{
				if ((this._GenerationId != value))
				{
					if (this._Generation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenerationIdChanging(value);
					this.SendPropertyChanging();
					this._GenerationId = value;
					this.SendPropertyChanged("GenerationId");
					this.OnGenerationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int")]
		public System.Nullable<int> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashCode", DbType="VarChar(MAX)")]
		public string HashCode
		{
			get
			{
				return this._HashCode;
			}
			set
			{
				if ((this._HashCode != value))
				{
					this.OnHashCodeChanging(value);
					this.SendPropertyChanging();
					this._HashCode = value;
					this.SendPropertyChanged("HashCode");
					this.OnHashCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemStatus", DbType="Char(1) NOT NULL")]
		public char SystemStatus
		{
			get
			{
				return this._SystemStatus;
			}
			set
			{
				if ((this._SystemStatus != value))
				{
					this.OnSystemStatusChanging(value);
					this.SendPropertyChanging();
					this._SystemStatus = value;
					this.SendPropertyChanged("SystemStatus");
					this.OnSystemStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(250)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupType", DbType="NVarChar(250)")]
		public string GroupType
		{
			get
			{
				return this._GroupType;
			}
			set
			{
				if ((this._GroupType != value))
				{
					this.OnGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._GroupType = value;
					this.SendPropertyChanged("GroupType");
					this.OnGroupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupSubType", DbType="NVarChar(250)")]
		public string GroupSubType
		{
			get
			{
				return this._GroupSubType;
			}
			set
			{
				if ((this._GroupSubType != value))
				{
					this.OnGroupSubTypeChanging(value);
					this.SendPropertyChanging();
					this._GroupSubType = value;
					this.SendPropertyChanged("GroupSubType");
					this.OnGroupSubTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCategory", DbType="NVarChar(1200)")]
		public string SourceCategory
		{
			get
			{
				return this._SourceCategory;
			}
			set
			{
				if ((this._SourceCategory != value))
				{
					this.OnSourceCategoryChanging(value);
					this.SendPropertyChanging();
					this._SourceCategory = value;
					this.SendPropertyChanged("SourceCategory");
					this.OnSourceCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommType", DbType="NVarChar(250)")]
		public string AccommType
		{
			get
			{
				return this._AccommType;
			}
			set
			{
				if ((this._AccommType != value))
				{
					this.OnAccommTypeChanging(value);
					this.SendPropertyChanging();
					this._AccommType = value;
					this.SendPropertyChanged("AccommType");
					this.OnAccommTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommSubType", DbType="NVarChar(250)")]
		public string AccommSubType
		{
			get
			{
				return this._AccommSubType;
			}
			set
			{
				if ((this._AccommSubType != value))
				{
					this.OnAccommSubTypeChanging(value);
					this.SendPropertyChanging();
					this._AccommSubType = value;
					this.SendPropertyChanged("AccommSubType");
					this.OnAccommSubTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacationType", DbType="NVarChar(250)")]
		public string VacationType
		{
			get
			{
				return this._VacationType;
			}
			set
			{
				if ((this._VacationType != value))
				{
					this.OnVacationTypeChanging(value);
					this.SendPropertyChanging();
					this._VacationType = value;
					this.SendPropertyChanged("VacationType");
					this.OnVacationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertCode", DbType="NVarChar(50)")]
		public string AdvertCode
		{
			get
			{
				return this._AdvertCode;
			}
			set
			{
				if ((this._AdvertCode != value))
				{
					this.OnAdvertCodeChanging(value);
					this.SendPropertyChanging();
					this._AdvertCode = value;
					this.SendPropertyChanged("AdvertCode");
					this.OnAdvertCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLink", DbType="NVarChar(1200)")]
		public string UrlLink
		{
			get
			{
				return this._UrlLink;
			}
			set
			{
				if ((this._UrlLink != value))
				{
					this.OnUrlLinkChanging(value);
					this.SendPropertyChanging();
					this._UrlLink = value;
					this.SendPropertyChanged("UrlLink");
					this.OnUrlLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(1200)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this.OnPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureUrl = value;
					this.SendPropertyChanged("PictureUrl");
					this.OnPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stars", DbType="NVarChar(50)")]
		public string Stars
		{
			get
			{
				return this._Stars;
			}
			set
			{
				if ((this._Stars != value))
				{
					this.OnStarsChanging(value);
					this.SendPropertyChanging();
					this._Stars = value;
					this.SendPropertyChanged("Stars");
					this.OnStarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationDesc", DbType="NVarChar(MAX)")]
		public string LocationDesc
		{
			get
			{
				return this._LocationDesc;
			}
			set
			{
				if ((this._LocationDesc != value))
				{
					this.OnLocationDescChanging(value);
					this.SendPropertyChanging();
					this._LocationDesc = value;
					this.SendPropertyChanged("LocationDesc");
					this.OnLocationDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(250)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(250)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subregion", DbType="NVarChar(250)")]
		public string Subregion
		{
			get
			{
				return this._Subregion;
			}
			set
			{
				if ((this._Subregion != value))
				{
					this.OnSubregionChanging(value);
					this.SendPropertyChanging();
					this._Subregion = value;
					this.SendPropertyChanged("Subregion");
					this.OnSubregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(250)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this.OnIslandChanging(value);
					this.SendPropertyChanging();
					this._Island = value;
					this.SendPropertyChanged("Island");
					this.OnIslandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(250)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOld", DbType="NVarChar(250)")]
		public string PriceOld
		{
			get
			{
				return this._PriceOld;
			}
			set
			{
				if ((this._PriceOld != value))
				{
					this.OnPriceOldChanging(value);
					this.SendPropertyChanging();
					this._PriceOld = value;
					this.SendPropertyChanged("PriceOld");
					this.OnPriceOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFrom", DbType="NVarChar(250)")]
		public string PriceFrom
		{
			get
			{
				return this._PriceFrom;
			}
			set
			{
				if ((this._PriceFrom != value))
				{
					this.OnPriceFromChanging(value);
					this.SendPropertyChanging();
					this._PriceFrom = value;
					this.SendPropertyChanged("PriceFrom");
					this.OnPriceFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDesc", DbType="NVarChar(250)")]
		public string PriceDesc
		{
			get
			{
				return this._PriceDesc;
			}
			set
			{
				if ((this._PriceDesc != value))
				{
					this.OnPriceDescChanging(value);
					this.SendPropertyChanging();
					this._PriceDesc = value;
					this.SendPropertyChanged("PriceDesc");
					this.OnPriceDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date1", DbType="NVarChar(250)")]
		public string Date1
		{
			get
			{
				return this._Date1;
			}
			set
			{
				if ((this._Date1 != value))
				{
					this.OnDate1Changing(value);
					this.SendPropertyChanging();
					this._Date1 = value;
					this.SendPropertyChanged("Date1");
					this.OnDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date2", DbType="NVarChar(250)")]
		public string Date2
		{
			get
			{
				return this._Date2;
			}
			set
			{
				if ((this._Date2 != value))
				{
					this.OnDate2Changing(value);
					this.SendPropertyChanging();
					this._Date2 = value;
					this.SendPropertyChanged("Date2");
					this.OnDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDesc", DbType="NVarChar(500)")]
		public string DateDesc
		{
			get
			{
				return this._DateDesc;
			}
			set
			{
				if ((this._DateDesc != value))
				{
					this.OnDateDescChanging(value);
					this.SendPropertyChanging();
					this._DateDesc = value;
					this.SendPropertyChanged("DateDesc");
					this.OnDateDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysNum", DbType="NVarChar(50)")]
		public string DaysNum
		{
			get
			{
				return this._DaysNum;
			}
			set
			{
				if ((this._DaysNum != value))
				{
					this.OnDaysNumChanging(value);
					this.SendPropertyChanging();
					this._DaysNum = value;
					this.SendPropertyChanged("DaysNum");
					this.OnDaysNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(MAX)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NVarChar(MAX)")]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this.OnFacilitiesChanging(value);
					this.SendPropertyChanging();
					this._Facilities = value;
					this.SendPropertyChanged("Facilities");
					this.OnFacilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beach", DbType="NVarChar(250)")]
		public string Beach
		{
			get
			{
				return this._Beach;
			}
			set
			{
				if ((this._Beach != value))
				{
					this.OnBeachChanging(value);
					this.SendPropertyChanging();
					this._Beach = value;
					this.SendPropertyChanged("Beach");
					this.OnBeachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeachDistanceM", DbType="NVarChar(250)")]
		public string BeachDistanceM
		{
			get
			{
				return this._BeachDistanceM;
			}
			set
			{
				if ((this._BeachDistanceM != value))
				{
					this.OnBeachDistanceMChanging(value);
					this.SendPropertyChanging();
					this._BeachDistanceM = value;
					this.SendPropertyChanged("BeachDistanceM");
					this.OnBeachDistanceMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromCentreM", DbType="NVarChar(250)")]
		public string DistanceFromCentreM
		{
			get
			{
				return this._DistanceFromCentreM;
			}
			set
			{
				if ((this._DistanceFromCentreM != value))
				{
					this.OnDistanceFromCentreMChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromCentreM = value;
					this.SendPropertyChanged("DistanceFromCentreM");
					this.OnDistanceFromCentreMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsDesc", DbType="NVarChar(250)")]
		public string PetsDesc
		{
			get
			{
				return this._PetsDesc;
			}
			set
			{
				if ((this._PetsDesc != value))
				{
					this.OnPetsDescChanging(value);
					this.SendPropertyChanging();
					this._PetsDesc = value;
					this.SendPropertyChanged("PetsDesc");
					this.OnPetsDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoDesc", DbType="NVarChar(250)")]
		public string InfoDesc
		{
			get
			{
				return this._InfoDesc;
			}
			set
			{
				if ((this._InfoDesc != value))
				{
					this.OnInfoDescChanging(value);
					this.SendPropertyChanging();
					this._InfoDesc = value;
					this.SendPropertyChanged("InfoDesc");
					this.OnInfoDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Generation_AdvertRaw", Storage="_Generation", ThisKey="GenerationId", OtherKey="Id", IsForeignKey=true)]
		public Generation Generation
		{
			get
			{
				return this._Generation.Entity;
			}
			set
			{
				Generation previousValue = this._Generation.Entity;
				if (((previousValue != value) 
							|| (this._Generation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Generation.Entity = null;
						previousValue.AdvertRaws.Remove(this);
					}
					this._Generation.Entity = value;
					if ((value != null))
					{
						value.AdvertRaws.Add(this);
						this._GenerationId = value.Id;
					}
					else
					{
						this._GenerationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Generation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvertUltimateTable")]
	public partial class AdvertUltimateTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AdvertId;
		
		private int _UltimateTableId;
		
		private System.Nullable<int> _Priority;
		
		private bool _Active;
		
		private System.Nullable<int> _MatchCount;
		
		private System.Nullable<int> _MatchPercent;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
		private EntityRef<Advert> _Advert;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdvertIdChanging(int value);
    partial void OnAdvertIdChanged();
    partial void OnUltimateTableIdChanging(int value);
    partial void OnUltimateTableIdChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnMatchCountChanging(System.Nullable<int> value);
    partial void OnMatchCountChanged();
    partial void OnMatchPercentChanging(System.Nullable<int> value);
    partial void OnMatchPercentChanged();
    #endregion
		
		public AdvertUltimateTable()
		{
			this._UltimateTable = default(EntityRef<UltimateTable>);
			this._Advert = default(EntityRef<Advert>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertId", DbType="Int NOT NULL")]
		public int AdvertId
		{
			get
			{
				return this._AdvertId;
			}
			set
			{
				if ((this._AdvertId != value))
				{
					if (this._Advert.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertId = value;
					this.SendPropertyChanged("AdvertId");
					this.OnAdvertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateTableId", DbType="Int NOT NULL")]
		public int UltimateTableId
		{
			get
			{
				return this._UltimateTableId;
			}
			set
			{
				if ((this._UltimateTableId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUltimateTableIdChanging(value);
					this.SendPropertyChanging();
					this._UltimateTableId = value;
					this.SendPropertyChanged("UltimateTableId");
					this.OnUltimateTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchCount", DbType="Int")]
		public System.Nullable<int> MatchCount
		{
			get
			{
				return this._MatchCount;
			}
			set
			{
				if ((this._MatchCount != value))
				{
					this.OnMatchCountChanging(value);
					this.SendPropertyChanging();
					this._MatchCount = value;
					this.SendPropertyChanged("MatchCount");
					this.OnMatchCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchPercent", DbType="Int")]
		public System.Nullable<int> MatchPercent
		{
			get
			{
				return this._MatchPercent;
			}
			set
			{
				if ((this._MatchPercent != value))
				{
					this.OnMatchPercentChanging(value);
					this.SendPropertyChanging();
					this._MatchPercent = value;
					this.SendPropertyChanged("MatchPercent");
					this.OnMatchPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_AdvertUltimateTable", Storage="_UltimateTable", ThisKey="UltimateTableId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.AdvertUltimateTables.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.AdvertUltimateTables.Add(this);
						this._UltimateTableId = value.Id;
					}
					else
					{
						this._UltimateTableId = default(int);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advert_AdvertUltimateTable", Storage="_Advert", ThisKey="AdvertId", OtherKey="Id", IsForeignKey=true)]
		public Advert Advert
		{
			get
			{
				return this._Advert.Entity;
			}
			set
			{
				Advert previousValue = this._Advert.Entity;
				if (((previousValue != value) 
							|| (this._Advert.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advert.Entity = null;
						previousValue.AdvertUltimateTables.Remove(this);
					}
					this._Advert.Entity = value;
					if ((value != null))
					{
						value.AdvertUltimateTables.Add(this);
						this._AdvertId = value.Id;
					}
					else
					{
						this._AdvertId = default(int);
					}
					this.SendPropertyChanged("Advert");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateWord")]
	public partial class CandidateWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private System.Nullable<int> _QueryId;
		
		private System.Nullable<int> _AdvertRawId;
		
		private System.Nullable<int> _LanguageId;
		
		private bool _Active;
		
		private string _ObjectTypeCode;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnQueryIdChanging(System.Nullable<int> value);
    partial void OnQueryIdChanged();
    partial void OnAdvertRawIdChanging(System.Nullable<int> value);
    partial void OnAdvertRawIdChanged();
    partial void OnLanguageIdChanging(System.Nullable<int> value);
    partial void OnLanguageIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnObjectTypeCodeChanging(string value);
    partial void OnObjectTypeCodeChanged();
    #endregion
		
		public CandidateWord()
		{
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryId", DbType="Int")]
		public System.Nullable<int> QueryId
		{
			get
			{
				return this._QueryId;
			}
			set
			{
				if ((this._QueryId != value))
				{
					this.OnQueryIdChanging(value);
					this.SendPropertyChanging();
					this._QueryId = value;
					this.SendPropertyChanged("QueryId");
					this.OnQueryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertRawId", DbType="Int")]
		public System.Nullable<int> AdvertRawId
		{
			get
			{
				return this._AdvertRawId;
			}
			set
			{
				if ((this._AdvertRawId != value))
				{
					this.OnAdvertRawIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertRawId = value;
					this.SendPropertyChanged("AdvertRawId");
					this.OnAdvertRawIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int")]
		public System.Nullable<int> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeCode", DbType="NVarChar(10)")]
		public string ObjectTypeCode
		{
			get
			{
				return this._ObjectTypeCode;
			}
			set
			{
				if ((this._ObjectTypeCode != value))
				{
					this.OnObjectTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeCode = value;
					this.SendPropertyChanged("ObjectTypeCode");
					this.OnObjectTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CandidateWord", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CandidateWords.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CandidateWords.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Abbrevation;
		
		private string _Regex;
		
		private string _Symbol;
		
		private EntitySet<CurrencyRelation> _CurrencyRelations;
		
		private EntitySet<CurrencyRelation> _CurrencyRelations1;
		
		private EntitySet<UltimateTable> _UltimateTables;
		
		private EntitySet<Advert> _Adverts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAbbrevationChanging(string value);
    partial void OnAbbrevationChanged();
    partial void OnRegexChanging(string value);
    partial void OnRegexChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    #endregion
		
		public Currency()
		{
			this._CurrencyRelations = new EntitySet<CurrencyRelation>(new Action<CurrencyRelation>(this.attach_CurrencyRelations), new Action<CurrencyRelation>(this.detach_CurrencyRelations));
			this._CurrencyRelations1 = new EntitySet<CurrencyRelation>(new Action<CurrencyRelation>(this.attach_CurrencyRelations1), new Action<CurrencyRelation>(this.detach_CurrencyRelations1));
			this._UltimateTables = new EntitySet<UltimateTable>(new Action<UltimateTable>(this.attach_UltimateTables), new Action<UltimateTable>(this.detach_UltimateTables));
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbrevation", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Abbrevation
		{
			get
			{
				return this._Abbrevation;
			}
			set
			{
				if ((this._Abbrevation != value))
				{
					this.OnAbbrevationChanging(value);
					this.SendPropertyChanging();
					this._Abbrevation = value;
					this.SendPropertyChanged("Abbrevation");
					this.OnAbbrevationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regex", DbType="NVarChar(250)")]
		public string Regex
		{
			get
			{
				return this._Regex;
			}
			set
			{
				if ((this._Regex != value))
				{
					this.OnRegexChanging(value);
					this.SendPropertyChanging();
					this._Regex = value;
					this.SendPropertyChanged("Regex");
					this.OnRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(5)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRelation", Storage="_CurrencyRelations", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<CurrencyRelation> CurrencyRelations
		{
			get
			{
				return this._CurrencyRelations;
			}
			set
			{
				this._CurrencyRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRelation1", Storage="_CurrencyRelations1", ThisKey="Id", OtherKey="CurrencyId_2")]
		public EntitySet<CurrencyRelation> CurrencyRelations1
		{
			get
			{
				return this._CurrencyRelations1;
			}
			set
			{
				this._CurrencyRelations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_UltimateTable", Storage="_UltimateTables", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<UltimateTable> UltimateTables
		{
			get
			{
				return this._UltimateTables;
			}
			set
			{
				this._UltimateTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Advert", Storage="_Adverts", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CurrencyRelations(CurrencyRelation entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_CurrencyRelations(CurrencyRelation entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_CurrencyRelations1(CurrencyRelation entity)
		{
			this.SendPropertyChanging();
			entity.Currency1 = this;
		}
		
		private void detach_CurrencyRelations1(CurrencyRelation entity)
		{
			this.SendPropertyChanging();
			entity.Currency1 = null;
		}
		
		private void attach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyRelation")]
	public partial class CurrencyRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CurrencyId;
		
		private int _CurrencyId_2;
		
		private decimal _Value;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Currency> _Currency1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    partial void OnCurrencyId_2Changing(int value);
    partial void OnCurrencyId_2Changed();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public CurrencyRelation()
		{
			this._Currency = default(EntityRef<Currency>);
			this._Currency1 = default(EntityRef<Currency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int NOT NULL")]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId_2", DbType="Int NOT NULL")]
		public int CurrencyId_2
		{
			get
			{
				return this._CurrencyId_2;
			}
			set
			{
				if ((this._CurrencyId_2 != value))
				{
					if (this._Currency1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyId_2Changing(value);
					this.SendPropertyChanging();
					this._CurrencyId_2 = value;
					this.SendPropertyChanged("CurrencyId_2");
					this.OnCurrencyId_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(15,4) NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRelation", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.CurrencyRelations.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.CurrencyRelations.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRelation1", Storage="_Currency1", ThisKey="CurrencyId_2", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency1
		{
			get
			{
				return this._Currency1.Entity;
			}
			set
			{
				Currency previousValue = this._Currency1.Entity;
				if (((previousValue != value) 
							|| (this._Currency1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency1.Entity = null;
						previousValue.CurrencyRelations1.Remove(this);
					}
					this._Currency1.Entity = value;
					if ((value != null))
					{
						value.CurrencyRelations1.Add(this);
						this._CurrencyId_2 = value.Id;
					}
					else
					{
						this._CurrencyId_2 = default(int);
					}
					this.SendPropertyChanged("Currency1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Generation")]
	public partial class Generation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private bool _Active;
		
		private EntitySet<AdvertRaw> _AdvertRaws;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Generation()
		{
			this._AdvertRaws = new EntitySet<AdvertRaw>(new Action<AdvertRaw>(this.attach_AdvertRaws), new Action<AdvertRaw>(this.detach_AdvertRaws));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Generation_AdvertRaw", Storage="_AdvertRaws", ThisKey="Id", OtherKey="GenerationId")]
		public EntitySet<AdvertRaw> AdvertRaws
		{
			get
			{
				return this._AdvertRaws;
			}
			set
			{
				this._AdvertRaws.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdvertRaws(AdvertRaw entity)
		{
			this.SendPropertyChanging();
			entity.Generation = this;
		}
		
		private void detach_AdvertRaws(AdvertRaw entity)
		{
			this.SendPropertyChanging();
			entity.Generation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Abbrevation;
		
		private bool _Active;
		
		private EntitySet<CandidateWord> _CandidateWords;
		
		private EntitySet<UltimateTable> _UltimateTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAbbrevationChanging(string value);
    partial void OnAbbrevationChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Language()
		{
			this._CandidateWords = new EntitySet<CandidateWord>(new Action<CandidateWord>(this.attach_CandidateWords), new Action<CandidateWord>(this.detach_CandidateWords));
			this._UltimateTables = new EntitySet<UltimateTable>(new Action<UltimateTable>(this.attach_UltimateTables), new Action<UltimateTable>(this.detach_UltimateTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbrevation", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Abbrevation
		{
			get
			{
				return this._Abbrevation;
			}
			set
			{
				if ((this._Abbrevation != value))
				{
					this.OnAbbrevationChanging(value);
					this.SendPropertyChanging();
					this._Abbrevation = value;
					this.SendPropertyChanged("Abbrevation");
					this.OnAbbrevationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CandidateWord", Storage="_CandidateWords", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<CandidateWord> CandidateWords
		{
			get
			{
				return this._CandidateWords;
			}
			set
			{
				this._CandidateWords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_UltimateTable", Storage="_UltimateTables", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<UltimateTable> UltimateTables
		{
			get
			{
				return this._UltimateTables;
			}
			set
			{
				this._UltimateTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidateWords(CandidateWord entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CandidateWords(CandidateWord entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QueryWeb")]
	public partial class QueryWeb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Query;
		
		private System.DateTime _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public QueryWeb()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Source")]
	public partial class Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Url;
		
		private string _Regex;
		
		private EntitySet<UnwantedWord> _UnwantedWords;
		
		private EntitySet<Advert> _Adverts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnRegexChanging(string value);
    partial void OnRegexChanged();
    #endregion
		
		public Source()
		{
			this._UnwantedWords = new EntitySet<UnwantedWord>(new Action<UnwantedWord>(this.attach_UnwantedWords), new Action<UnwantedWord>(this.detach_UnwantedWords));
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(50)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regex", DbType="NVarChar(500)")]
		public string Regex
		{
			get
			{
				return this._Regex;
			}
			set
			{
				if ((this._Regex != value))
				{
					this.OnRegexChanging(value);
					this.SendPropertyChanging();
					this._Regex = value;
					this.SendPropertyChanged("Regex");
					this.OnRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Source_UnwantedWord", Storage="_UnwantedWords", ThisKey="Id", OtherKey="SourceId")]
		public EntitySet<UnwantedWord> UnwantedWords
		{
			get
			{
				return this._UnwantedWords;
			}
			set
			{
				this._UnwantedWords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Source_Advert", Storage="_Adverts", ThisKey="Id", OtherKey="SourceId")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnwantedWords(UnwantedWord entity)
		{
			this.SendPropertyChanging();
			entity.Source = this;
		}
		
		private void detach_UnwantedWords(UnwantedWord entity)
		{
			this.SendPropertyChanging();
			entity.Source = null;
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Source = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Source = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAdvertEN")]
	public partial class tblAdvertEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdvertID;
		
		private string _AdvertCode;
		
		private string _AccommType;
		
		private string _AccommSubType;
		
		private System.Nullable<int> _Stars;
		
		private string _VacationType;
		
		private string _Title;
		
		private string _Description;
		
		private string _Keywords;
		
		private string _URLLink;
		
		private string _Source;
		
		private string _SourceCategory;
		
		private System.Nullable<decimal> _PriceFromPersonDayEUR;
		
		private System.Nullable<decimal> _PriceOldPersonDayEUR;
		
		private System.Nullable<int> _NumDays;
		
		private string _Activities;
		
		private string _Facilities;
		
		private string _Beach;
		
		private System.Nullable<int> _BeachDistanceM;
		
		private System.Nullable<int> _DistanceFromCenterM;
		
		private string _Country;
		
		private string _City;
		
		private string _Region;
		
		private string _Subregion;
		
		private string _Island;
		
		private System.Nullable<bool> _PetsAllowed;
		
		private string _PetsSpec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdvertIDChanging(int value);
    partial void OnAdvertIDChanged();
    partial void OnAdvertCodeChanging(string value);
    partial void OnAdvertCodeChanged();
    partial void OnAccommTypeChanging(string value);
    partial void OnAccommTypeChanged();
    partial void OnAccommSubTypeChanging(string value);
    partial void OnAccommSubTypeChanged();
    partial void OnStarsChanging(System.Nullable<int> value);
    partial void OnStarsChanged();
    partial void OnVacationTypeChanging(string value);
    partial void OnVacationTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnURLLinkChanging(string value);
    partial void OnURLLinkChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnSourceCategoryChanging(string value);
    partial void OnSourceCategoryChanged();
    partial void OnPriceFromPersonDayEURChanging(System.Nullable<decimal> value);
    partial void OnPriceFromPersonDayEURChanged();
    partial void OnPriceOldPersonDayEURChanging(System.Nullable<decimal> value);
    partial void OnPriceOldPersonDayEURChanged();
    partial void OnNumDaysChanging(System.Nullable<int> value);
    partial void OnNumDaysChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnFacilitiesChanging(string value);
    partial void OnFacilitiesChanged();
    partial void OnBeachChanging(string value);
    partial void OnBeachChanged();
    partial void OnBeachDistanceMChanging(System.Nullable<int> value);
    partial void OnBeachDistanceMChanged();
    partial void OnDistanceFromCenterMChanging(System.Nullable<int> value);
    partial void OnDistanceFromCenterMChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnSubregionChanging(string value);
    partial void OnSubregionChanged();
    partial void OnIslandChanging(string value);
    partial void OnIslandChanged();
    partial void OnPetsAllowedChanging(System.Nullable<bool> value);
    partial void OnPetsAllowedChanged();
    partial void OnPetsSpecChanging(string value);
    partial void OnPetsSpecChanged();
    #endregion
		
		public tblAdvertEN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdvertID
		{
			get
			{
				return this._AdvertID;
			}
			set
			{
				if ((this._AdvertID != value))
				{
					this.OnAdvertIDChanging(value);
					this.SendPropertyChanging();
					this._AdvertID = value;
					this.SendPropertyChanged("AdvertID");
					this.OnAdvertIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertCode", DbType="NVarChar(255)")]
		public string AdvertCode
		{
			get
			{
				return this._AdvertCode;
			}
			set
			{
				if ((this._AdvertCode != value))
				{
					this.OnAdvertCodeChanging(value);
					this.SendPropertyChanging();
					this._AdvertCode = value;
					this.SendPropertyChanged("AdvertCode");
					this.OnAdvertCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommType", DbType="NVarChar(255)")]
		public string AccommType
		{
			get
			{
				return this._AccommType;
			}
			set
			{
				if ((this._AccommType != value))
				{
					this.OnAccommTypeChanging(value);
					this.SendPropertyChanging();
					this._AccommType = value;
					this.SendPropertyChanged("AccommType");
					this.OnAccommTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommSubType", DbType="NVarChar(255)")]
		public string AccommSubType
		{
			get
			{
				return this._AccommSubType;
			}
			set
			{
				if ((this._AccommSubType != value))
				{
					this.OnAccommSubTypeChanging(value);
					this.SendPropertyChanging();
					this._AccommSubType = value;
					this.SendPropertyChanged("AccommSubType");
					this.OnAccommSubTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stars", DbType="Int")]
		public System.Nullable<int> Stars
		{
			get
			{
				return this._Stars;
			}
			set
			{
				if ((this._Stars != value))
				{
					this.OnStarsChanging(value);
					this.SendPropertyChanging();
					this._Stars = value;
					this.SendPropertyChanged("Stars");
					this.OnStarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacationType", DbType="NVarChar(255)")]
		public string VacationType
		{
			get
			{
				return this._VacationType;
			}
			set
			{
				if ((this._VacationType != value))
				{
					this.OnVacationTypeChanging(value);
					this.SendPropertyChanging();
					this._VacationType = value;
					this.SendPropertyChanged("VacationType");
					this.OnVacationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(255)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLLink", DbType="VarChar(300)")]
		public string URLLink
		{
			get
			{
				return this._URLLink;
			}
			set
			{
				if ((this._URLLink != value))
				{
					this.OnURLLinkChanging(value);
					this.SendPropertyChanging();
					this._URLLink = value;
					this.SendPropertyChanged("URLLink");
					this.OnURLLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(255)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCategory", DbType="NVarChar(255)")]
		public string SourceCategory
		{
			get
			{
				return this._SourceCategory;
			}
			set
			{
				if ((this._SourceCategory != value))
				{
					this.OnSourceCategoryChanging(value);
					this.SendPropertyChanging();
					this._SourceCategory = value;
					this.SendPropertyChanged("SourceCategory");
					this.OnSourceCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFromPersonDayEUR", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PriceFromPersonDayEUR
		{
			get
			{
				return this._PriceFromPersonDayEUR;
			}
			set
			{
				if ((this._PriceFromPersonDayEUR != value))
				{
					this.OnPriceFromPersonDayEURChanging(value);
					this.SendPropertyChanging();
					this._PriceFromPersonDayEUR = value;
					this.SendPropertyChanged("PriceFromPersonDayEUR");
					this.OnPriceFromPersonDayEURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOldPersonDayEUR", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PriceOldPersonDayEUR
		{
			get
			{
				return this._PriceOldPersonDayEUR;
			}
			set
			{
				if ((this._PriceOldPersonDayEUR != value))
				{
					this.OnPriceOldPersonDayEURChanging(value);
					this.SendPropertyChanging();
					this._PriceOldPersonDayEUR = value;
					this.SendPropertyChanged("PriceOldPersonDayEUR");
					this.OnPriceOldPersonDayEURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDays", DbType="Int")]
		public System.Nullable<int> NumDays
		{
			get
			{
				return this._NumDays;
			}
			set
			{
				if ((this._NumDays != value))
				{
					this.OnNumDaysChanging(value);
					this.SendPropertyChanging();
					this._NumDays = value;
					this.SendPropertyChanged("NumDays");
					this.OnNumDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(4000)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NVarChar(4000)")]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this.OnFacilitiesChanging(value);
					this.SendPropertyChanging();
					this._Facilities = value;
					this.SendPropertyChanged("Facilities");
					this.OnFacilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beach", DbType="NVarChar(255)")]
		public string Beach
		{
			get
			{
				return this._Beach;
			}
			set
			{
				if ((this._Beach != value))
				{
					this.OnBeachChanging(value);
					this.SendPropertyChanging();
					this._Beach = value;
					this.SendPropertyChanged("Beach");
					this.OnBeachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeachDistanceM", DbType="Int")]
		public System.Nullable<int> BeachDistanceM
		{
			get
			{
				return this._BeachDistanceM;
			}
			set
			{
				if ((this._BeachDistanceM != value))
				{
					this.OnBeachDistanceMChanging(value);
					this.SendPropertyChanging();
					this._BeachDistanceM = value;
					this.SendPropertyChanged("BeachDistanceM");
					this.OnBeachDistanceMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromCenterM", DbType="Int")]
		public System.Nullable<int> DistanceFromCenterM
		{
			get
			{
				return this._DistanceFromCenterM;
			}
			set
			{
				if ((this._DistanceFromCenterM != value))
				{
					this.OnDistanceFromCenterMChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromCenterM = value;
					this.SendPropertyChanged("DistanceFromCenterM");
					this.OnDistanceFromCenterMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(255)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subregion", DbType="NVarChar(255)")]
		public string Subregion
		{
			get
			{
				return this._Subregion;
			}
			set
			{
				if ((this._Subregion != value))
				{
					this.OnSubregionChanging(value);
					this.SendPropertyChanging();
					this._Subregion = value;
					this.SendPropertyChanged("Subregion");
					this.OnSubregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(255)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this.OnIslandChanging(value);
					this.SendPropertyChanging();
					this._Island = value;
					this.SendPropertyChanged("Island");
					this.OnIslandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsAllowed", DbType="Bit")]
		public System.Nullable<bool> PetsAllowed
		{
			get
			{
				return this._PetsAllowed;
			}
			set
			{
				if ((this._PetsAllowed != value))
				{
					this.OnPetsAllowedChanging(value);
					this.SendPropertyChanging();
					this._PetsAllowed = value;
					this.SendPropertyChanged("PetsAllowed");
					this.OnPetsAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsSpec", DbType="NVarChar(255)")]
		public string PetsSpec
		{
			get
			{
				return this._PetsSpec;
			}
			set
			{
				if ((this._PetsSpec != value))
				{
					this.OnPetsSpecChanging(value);
					this.SendPropertyChanging();
					this._PetsSpec = value;
					this.SendPropertyChanged("PetsSpec");
					this.OnPetsSpecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTable")]
	public partial class UltimateTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _RegexExpression;
		
		private string _RegexExpressionExtended;
		
		private int _ObjectTypeId;
		
		private bool _IsIgnored;
		
		private System.Nullable<int> _LanguageId;
		
		private System.Nullable<int> _CurrencyId;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _CapturingValue;
		
		private string _CapturingOperator;
		
		private bool _Active;
		
		private EntitySet<AdvertUltimateTable> _AdvertUltimateTables;
		
		private EntitySet<UltimateTable> _UltimateTables;
		
		private EntitySet<UltimateTableRelation> _UltimateTableRelations;
		
		private EntitySet<UltimateTableRelation> _UltimateTableRelations1;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<UltimateTable> _UltimateTable1;
		
		private EntityRef<UltimateTableObjectType> _UltimateTableObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRegexExpressionChanging(string value);
    partial void OnRegexExpressionChanged();
    partial void OnRegexExpressionExtendedChanging(string value);
    partial void OnRegexExpressionExtendedChanged();
    partial void OnObjectTypeIdChanging(int value);
    partial void OnObjectTypeIdChanged();
    partial void OnIsIgnoredChanging(bool value);
    partial void OnIsIgnoredChanged();
    partial void OnLanguageIdChanging(System.Nullable<int> value);
    partial void OnLanguageIdChanged();
    partial void OnCurrencyIdChanging(System.Nullable<int> value);
    partial void OnCurrencyIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnCapturingValueChanging(System.Nullable<int> value);
    partial void OnCapturingValueChanged();
    partial void OnCapturingOperatorChanging(string value);
    partial void OnCapturingOperatorChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public UltimateTable()
		{
			this._AdvertUltimateTables = new EntitySet<AdvertUltimateTable>(new Action<AdvertUltimateTable>(this.attach_AdvertUltimateTables), new Action<AdvertUltimateTable>(this.detach_AdvertUltimateTables));
			this._UltimateTables = new EntitySet<UltimateTable>(new Action<UltimateTable>(this.attach_UltimateTables), new Action<UltimateTable>(this.detach_UltimateTables));
			this._UltimateTableRelations = new EntitySet<UltimateTableRelation>(new Action<UltimateTableRelation>(this.attach_UltimateTableRelations), new Action<UltimateTableRelation>(this.detach_UltimateTableRelations));
			this._UltimateTableRelations1 = new EntitySet<UltimateTableRelation>(new Action<UltimateTableRelation>(this.attach_UltimateTableRelations1), new Action<UltimateTableRelation>(this.detach_UltimateTableRelations1));
			this._Currency = default(EntityRef<Currency>);
			this._Language = default(EntityRef<Language>);
			this._UltimateTable1 = default(EntityRef<UltimateTable>);
			this._UltimateTableObjectType = default(EntityRef<UltimateTableObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegexExpression", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string RegexExpression
		{
			get
			{
				return this._RegexExpression;
			}
			set
			{
				if ((this._RegexExpression != value))
				{
					this.OnRegexExpressionChanging(value);
					this.SendPropertyChanging();
					this._RegexExpression = value;
					this.SendPropertyChanged("RegexExpression");
					this.OnRegexExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegexExpressionExtended", DbType="NVarChar(MAX)")]
		public string RegexExpressionExtended
		{
			get
			{
				return this._RegexExpressionExtended;
			}
			set
			{
				if ((this._RegexExpressionExtended != value))
				{
					this.OnRegexExpressionExtendedChanging(value);
					this.SendPropertyChanging();
					this._RegexExpressionExtended = value;
					this.SendPropertyChanged("RegexExpressionExtended");
					this.OnRegexExpressionExtendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeId", DbType="Int NOT NULL")]
		public int ObjectTypeId
		{
			get
			{
				return this._ObjectTypeId;
			}
			set
			{
				if ((this._ObjectTypeId != value))
				{
					if (this._UltimateTableObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeId = value;
					this.SendPropertyChanged("ObjectTypeId");
					this.OnObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIgnored", DbType="Bit NOT NULL")]
		public bool IsIgnored
		{
			get
			{
				return this._IsIgnored;
			}
			set
			{
				if ((this._IsIgnored != value))
				{
					this.OnIsIgnoredChanging(value);
					this.SendPropertyChanging();
					this._IsIgnored = value;
					this.SendPropertyChanged("IsIgnored");
					this.OnIsIgnoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int")]
		public System.Nullable<int> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int")]
		public System.Nullable<int> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._UltimateTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapturingValue", DbType="Int")]
		public System.Nullable<int> CapturingValue
		{
			get
			{
				return this._CapturingValue;
			}
			set
			{
				if ((this._CapturingValue != value))
				{
					this.OnCapturingValueChanging(value);
					this.SendPropertyChanging();
					this._CapturingValue = value;
					this.SendPropertyChanged("CapturingValue");
					this.OnCapturingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapturingOperator", DbType="VarChar(50)")]
		public string CapturingOperator
		{
			get
			{
				return this._CapturingOperator;
			}
			set
			{
				if ((this._CapturingOperator != value))
				{
					this.OnCapturingOperatorChanging(value);
					this.SendPropertyChanging();
					this._CapturingOperator = value;
					this.SendPropertyChanged("CapturingOperator");
					this.OnCapturingOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_AdvertUltimateTable", Storage="_AdvertUltimateTables", ThisKey="Id", OtherKey="UltimateTableId")]
		public EntitySet<AdvertUltimateTable> AdvertUltimateTables
		{
			get
			{
				return this._AdvertUltimateTables;
			}
			set
			{
				this._AdvertUltimateTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTable", Storage="_UltimateTables", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<UltimateTable> UltimateTables
		{
			get
			{
				return this._UltimateTables;
			}
			set
			{
				this._UltimateTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation", Storage="_UltimateTableRelations", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<UltimateTableRelation> UltimateTableRelations
		{
			get
			{
				return this._UltimateTableRelations;
			}
			set
			{
				this._UltimateTableRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation1", Storage="_UltimateTableRelations1", ThisKey="Id", OtherKey="ChildId")]
		public EntitySet<UltimateTableRelation> UltimateTableRelations1
		{
			get
			{
				return this._UltimateTableRelations1;
			}
			set
			{
				this._UltimateTableRelations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_UltimateTable", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.UltimateTables.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.UltimateTables.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_UltimateTable", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.UltimateTables.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.UltimateTables.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTable", Storage="_UltimateTable1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable1
		{
			get
			{
				return this._UltimateTable1.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable1.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable1.Entity = null;
						previousValue.UltimateTables.Remove(this);
					}
					this._UltimateTable1.Entity = value;
					if ((value != null))
					{
						value.UltimateTables.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UltimateTable1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTableObjectType_UltimateTable", Storage="_UltimateTableObjectType", ThisKey="ObjectTypeId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTableObjectType UltimateTableObjectType
		{
			get
			{
				return this._UltimateTableObjectType.Entity;
			}
			set
			{
				UltimateTableObjectType previousValue = this._UltimateTableObjectType.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTableObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTableObjectType.Entity = null;
						previousValue.UltimateTables.Remove(this);
					}
					this._UltimateTableObjectType.Entity = value;
					if ((value != null))
					{
						value.UltimateTables.Add(this);
						this._ObjectTypeId = value.Id;
					}
					else
					{
						this._ObjectTypeId = default(int);
					}
					this.SendPropertyChanged("UltimateTableObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdvertUltimateTables(AdvertUltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_AdvertUltimateTables(AdvertUltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = this;
		}
		
		private void detach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = null;
		}
		
		private void attach_UltimateTableRelations(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_UltimateTableRelations(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_UltimateTableRelations1(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = this;
		}
		
		private void detach_UltimateTableRelations1(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTableObjectType")]
	public partial class UltimateTableObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _Code;
		
		private System.Nullable<int> _Priority;
		
		private EntitySet<UltimateTable> _UltimateTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    #endregion
		
		public UltimateTableObjectType()
		{
			this._UltimateTables = new EntitySet<UltimateTable>(new Action<UltimateTable>(this.attach_UltimateTables), new Action<UltimateTable>(this.detach_UltimateTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTableObjectType_UltimateTable", Storage="_UltimateTables", ThisKey="Id", OtherKey="ObjectTypeId")]
		public EntitySet<UltimateTable> UltimateTables
		{
			get
			{
				return this._UltimateTables;
			}
			set
			{
				this._UltimateTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTableObjectType = this;
		}
		
		private void detach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTableObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTableRelation")]
	public partial class UltimateTableRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ParentId;
		
		private int _ChildId;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<char> _Type;
		
		private bool _Active;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
		private EntityRef<UltimateTable> _UltimateTable1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnChildIdChanging(int value);
    partial void OnChildIdChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnTypeChanging(System.Nullable<char> value);
    partial void OnTypeChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public UltimateTableRelation()
		{
			this._UltimateTable = default(EntityRef<UltimateTable>);
			this._UltimateTable1 = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildId", DbType="Int NOT NULL")]
		public int ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					if (this._UltimateTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChildIdChanging(value);
					this.SendPropertyChanging();
					this._ChildId = value;
					this.SendPropertyChanged("ChildId");
					this.OnChildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(1)")]
		public System.Nullable<char> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation", Storage="_UltimateTable", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.UltimateTableRelations.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.UltimateTableRelations.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(int);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation1", Storage="_UltimateTable1", ThisKey="ChildId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable1
		{
			get
			{
				return this._UltimateTable1.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable1.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable1.Entity = null;
						previousValue.UltimateTableRelations1.Remove(this);
					}
					this._UltimateTable1.Entity = value;
					if ((value != null))
					{
						value.UltimateTableRelations1.Add(this);
						this._ChildId = value.Id;
					}
					else
					{
						this._ChildId = default(int);
					}
					this.SendPropertyChanged("UltimateTable1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advert")]
	public partial class Advert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccommodationType;
		
		private string _Title;
		
		private string _Description;
		
		private string _Country;
		
		private string _City;
		
		private string _Island;
		
		private string _Region;
		
		private string _LocationDesc;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _PriceOld;
		
		private string _PriceDesc;
		
		private System.Nullable<int> _CurrencyId;
		
		private System.Nullable<int> _SourceId;
		
		private System.Nullable<int> _LanguageId;
		
		private string _Url;
		
		private string _PictureUrl;
		
		private string _HashCode;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private string _DateDesc;
		
		private string _Activities;
		
		private string _Facilities;
		
		private string _PetsDesc;
		
		private System.Nullable<int> _AdvertRawId;
		
		private System.Nullable<int> _MatchedWordsCount;
		
		private System.Nullable<System.DateTime> _DateAdvertCreated;
		
		private System.Nullable<System.DateTime> _DateUrlChecked;
		
		private int _BadUrlCnt;
		
		private bool _Active;
		
		private bool _AccommodationAdvert;
		
		private EntitySet<AdvertUltimateTable> _AdvertUltimateTables;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Source> _Source;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccommodationTypeChanging(string value);
    partial void OnAccommodationTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnIslandChanging(string value);
    partial void OnIslandChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnLocationDescChanging(string value);
    partial void OnLocationDescChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnPriceOldChanging(System.Nullable<decimal> value);
    partial void OnPriceOldChanged();
    partial void OnPriceDescChanging(string value);
    partial void OnPriceDescChanged();
    partial void OnCurrencyIdChanging(System.Nullable<int> value);
    partial void OnCurrencyIdChanged();
    partial void OnSourceIdChanging(System.Nullable<int> value);
    partial void OnSourceIdChanged();
    partial void OnLanguageIdChanging(System.Nullable<int> value);
    partial void OnLanguageIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnPictureUrlChanging(string value);
    partial void OnPictureUrlChanged();
    partial void OnHashCodeChanging(string value);
    partial void OnHashCodeChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnDateDescChanging(string value);
    partial void OnDateDescChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnFacilitiesChanging(string value);
    partial void OnFacilitiesChanged();
    partial void OnPetsDescChanging(string value);
    partial void OnPetsDescChanged();
    partial void OnAdvertRawIdChanging(System.Nullable<int> value);
    partial void OnAdvertRawIdChanged();
    partial void OnMatchedWordsCountChanging(System.Nullable<int> value);
    partial void OnMatchedWordsCountChanged();
    partial void OnDateAdvertCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAdvertCreatedChanged();
    partial void OnDateUrlCheckedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUrlCheckedChanged();
    partial void OnBadUrlCntChanging(int value);
    partial void OnBadUrlCntChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnAccommodationAdvertChanging(bool value);
    partial void OnAccommodationAdvertChanged();
    #endregion
		
		public Advert()
		{
			this._AdvertUltimateTables = new EntitySet<AdvertUltimateTable>(new Action<AdvertUltimateTable>(this.attach_AdvertUltimateTables), new Action<AdvertUltimateTable>(this.detach_AdvertUltimateTables));
			this._Currency = default(EntityRef<Currency>);
			this._Source = default(EntityRef<Source>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationType", DbType="NVarChar(150)")]
		public string AccommodationType
		{
			get
			{
				return this._AccommodationType;
			}
			set
			{
				if ((this._AccommodationType != value))
				{
					this.OnAccommodationTypeChanging(value);
					this.SendPropertyChanging();
					this._AccommodationType = value;
					this.SendPropertyChanged("AccommodationType");
					this.OnAccommodationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(150)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(150)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(150)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this.OnIslandChanging(value);
					this.SendPropertyChanging();
					this._Island = value;
					this.SendPropertyChanged("Island");
					this.OnIslandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(150)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationDesc", DbType="NVarChar(500)")]
		public string LocationDesc
		{
			get
			{
				return this._LocationDesc;
			}
			set
			{
				if ((this._LocationDesc != value))
				{
					this.OnLocationDescChanging(value);
					this.SendPropertyChanging();
					this._LocationDesc = value;
					this.SendPropertyChanged("LocationDesc");
					this.OnLocationDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOld", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> PriceOld
		{
			get
			{
				return this._PriceOld;
			}
			set
			{
				if ((this._PriceOld != value))
				{
					this.OnPriceOldChanging(value);
					this.SendPropertyChanging();
					this._PriceOld = value;
					this.SendPropertyChanged("PriceOld");
					this.OnPriceOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDesc", DbType="NVarChar(150)")]
		public string PriceDesc
		{
			get
			{
				return this._PriceDesc;
			}
			set
			{
				if ((this._PriceDesc != value))
				{
					this.OnPriceDescChanging(value);
					this.SendPropertyChanging();
					this._PriceDesc = value;
					this.SendPropertyChanged("PriceDesc");
					this.OnPriceDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int")]
		public System.Nullable<int> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					if (this._Source.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int")]
		public System.Nullable<int> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(1200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(1200)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this.OnPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureUrl = value;
					this.SendPropertyChanged("PictureUrl");
					this.OnPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashCode", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HashCode
		{
			get
			{
				return this._HashCode;
			}
			set
			{
				if ((this._HashCode != value))
				{
					this.OnHashCodeChanging(value);
					this.SendPropertyChanging();
					this._HashCode = value;
					this.SendPropertyChanged("HashCode");
					this.OnHashCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDesc", DbType="NVarChar(250)")]
		public string DateDesc
		{
			get
			{
				return this._DateDesc;
			}
			set
			{
				if ((this._DateDesc != value))
				{
					this.OnDateDescChanging(value);
					this.SendPropertyChanging();
					this._DateDesc = value;
					this.SendPropertyChanged("DateDesc");
					this.OnDateDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(1000)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NVarChar(1000)")]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this.OnFacilitiesChanging(value);
					this.SendPropertyChanging();
					this._Facilities = value;
					this.SendPropertyChanged("Facilities");
					this.OnFacilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsDesc", DbType="NVarChar(500)")]
		public string PetsDesc
		{
			get
			{
				return this._PetsDesc;
			}
			set
			{
				if ((this._PetsDesc != value))
				{
					this.OnPetsDescChanging(value);
					this.SendPropertyChanging();
					this._PetsDesc = value;
					this.SendPropertyChanged("PetsDesc");
					this.OnPetsDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertRawId", DbType="Int")]
		public System.Nullable<int> AdvertRawId
		{
			get
			{
				return this._AdvertRawId;
			}
			set
			{
				if ((this._AdvertRawId != value))
				{
					this.OnAdvertRawIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertRawId = value;
					this.SendPropertyChanged("AdvertRawId");
					this.OnAdvertRawIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchedWordsCount", DbType="Int")]
		public System.Nullable<int> MatchedWordsCount
		{
			get
			{
				return this._MatchedWordsCount;
			}
			set
			{
				if ((this._MatchedWordsCount != value))
				{
					this.OnMatchedWordsCountChanging(value);
					this.SendPropertyChanging();
					this._MatchedWordsCount = value;
					this.SendPropertyChanged("MatchedWordsCount");
					this.OnMatchedWordsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdvertCreated", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateAdvertCreated
		{
			get
			{
				return this._DateAdvertCreated;
			}
			set
			{
				if ((this._DateAdvertCreated != value))
				{
					this.OnDateAdvertCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateAdvertCreated = value;
					this.SendPropertyChanged("DateAdvertCreated");
					this.OnDateAdvertCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUrlChecked", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateUrlChecked
		{
			get
			{
				return this._DateUrlChecked;
			}
			set
			{
				if ((this._DateUrlChecked != value))
				{
					this.OnDateUrlCheckedChanging(value);
					this.SendPropertyChanging();
					this._DateUrlChecked = value;
					this.SendPropertyChanged("DateUrlChecked");
					this.OnDateUrlCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadUrlCnt", DbType="Int NOT NULL")]
		public int BadUrlCnt
		{
			get
			{
				return this._BadUrlCnt;
			}
			set
			{
				if ((this._BadUrlCnt != value))
				{
					this.OnBadUrlCntChanging(value);
					this.SendPropertyChanging();
					this._BadUrlCnt = value;
					this.SendPropertyChanged("BadUrlCnt");
					this.OnBadUrlCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationAdvert", DbType="Bit NOT NULL")]
		public bool AccommodationAdvert
		{
			get
			{
				return this._AccommodationAdvert;
			}
			set
			{
				if ((this._AccommodationAdvert != value))
				{
					this.OnAccommodationAdvertChanging(value);
					this.SendPropertyChanging();
					this._AccommodationAdvert = value;
					this.SendPropertyChanged("AccommodationAdvert");
					this.OnAccommodationAdvertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advert_AdvertUltimateTable", Storage="_AdvertUltimateTables", ThisKey="Id", OtherKey="AdvertId")]
		public EntitySet<AdvertUltimateTable> AdvertUltimateTables
		{
			get
			{
				return this._AdvertUltimateTables;
			}
			set
			{
				this._AdvertUltimateTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Advert", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Source_Advert", Storage="_Source", ThisKey="SourceId", OtherKey="Id", IsForeignKey=true)]
		public Source Source
		{
			get
			{
				return this._Source.Entity;
			}
			set
			{
				Source previousValue = this._Source.Entity;
				if (((previousValue != value) 
							|| (this._Source.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Source.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._Source.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._SourceId = value.Id;
					}
					else
					{
						this._SourceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Source");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdvertUltimateTables(AdvertUltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.Advert = this;
		}
		
		private void detach_AdvertUltimateTables(AdvertUltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.Advert = null;
		}
	}
	
	public partial class GetAdvertResult
	{
		
		private int _AdvertID;
		
		private string _AccommType;
		
		private string _AccommSubType;
		
		private string _VacationType;
		
		private System.Nullable<int> _Stars;
		
		private string _Title;
		
		private string _Beach;
		
		private string _Facilities;
		
		private string _Activities;
		
		private string _Country;
		
		private string _City;
		
		private string _Region;
		
		private string _Subregion;
		
		private string _Island;
		
		private string _PetsSpec;
		
		private string _URLLink;
		
		private string _Source;
		
		private System.Nullable<decimal> _PriceFromPersonDayEUR;
		
		private System.Nullable<decimal> _PriceOldPersonDayEUR;
		
		private System.Nullable<decimal> _PriceChngPerc;
		
		public GetAdvertResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertID", DbType="Int NOT NULL")]
		public int AdvertID
		{
			get
			{
				return this._AdvertID;
			}
			set
			{
				if ((this._AdvertID != value))
				{
					this._AdvertID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommType", DbType="NVarChar(255)")]
		public string AccommType
		{
			get
			{
				return this._AccommType;
			}
			set
			{
				if ((this._AccommType != value))
				{
					this._AccommType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommSubType", DbType="NVarChar(255)")]
		public string AccommSubType
		{
			get
			{
				return this._AccommSubType;
			}
			set
			{
				if ((this._AccommSubType != value))
				{
					this._AccommSubType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacationType", DbType="NVarChar(255)")]
		public string VacationType
		{
			get
			{
				return this._VacationType;
			}
			set
			{
				if ((this._VacationType != value))
				{
					this._VacationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stars", DbType="Int")]
		public System.Nullable<int> Stars
		{
			get
			{
				return this._Stars;
			}
			set
			{
				if ((this._Stars != value))
				{
					this._Stars = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beach", DbType="NVarChar(255)")]
		public string Beach
		{
			get
			{
				return this._Beach;
			}
			set
			{
				if ((this._Beach != value))
				{
					this._Beach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NVarChar(4000)")]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this._Facilities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(4000)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this._Activities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(255)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subregion", DbType="NVarChar(255)")]
		public string Subregion
		{
			get
			{
				return this._Subregion;
			}
			set
			{
				if ((this._Subregion != value))
				{
					this._Subregion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(255)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this._Island = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsSpec", DbType="NVarChar(255)")]
		public string PetsSpec
		{
			get
			{
				return this._PetsSpec;
			}
			set
			{
				if ((this._PetsSpec != value))
				{
					this._PetsSpec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLLink", DbType="VarChar(300)")]
		public string URLLink
		{
			get
			{
				return this._URLLink;
			}
			set
			{
				if ((this._URLLink != value))
				{
					this._URLLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(255)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFromPersonDayEUR", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> PriceFromPersonDayEUR
		{
			get
			{
				return this._PriceFromPersonDayEUR;
			}
			set
			{
				if ((this._PriceFromPersonDayEUR != value))
				{
					this._PriceFromPersonDayEUR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOldPersonDayEUR", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> PriceOldPersonDayEUR
		{
			get
			{
				return this._PriceOldPersonDayEUR;
			}
			set
			{
				if ((this._PriceOldPersonDayEUR != value))
				{
					this._PriceOldPersonDayEUR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceChngPerc", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> PriceChngPerc
		{
			get
			{
				return this._PriceChngPerc;
			}
			set
			{
				if ((this._PriceChngPerc != value))
				{
					this._PriceChngPerc = value;
				}
			}
		}
	}
	
	public partial class TestConvertResult
	{
		
		private System.Nullable<System.DateTime> _NewTestDateTime;
		
		public TestConvertResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTestDateTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NewTestDateTime
		{
			get
			{
				return this._NewTestDateTime;
			}
			set
			{
				if ((this._NewTestDateTime != value))
				{
					this._NewTestDateTime = value;
				}
			}
		}
	}
	
	public partial class SearchTempResult
	{
		
		private int _AdvertID;
		
		private string _AccommType;
		
		private string _AccommSubType;
		
		private string _VacationType;
		
		private string _Title;
		
		private string _Beach;
		
		private string _Facilities;
		
		private string _Activities;
		
		private string _Country;
		
		private string _City;
		
		private string _Region;
		
		private string _Subregion;
		
		private string _Island;
		
		private string _PetsSpec;
		
		public SearchTempResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertID", DbType="Int NOT NULL")]
		public int AdvertID
		{
			get
			{
				return this._AdvertID;
			}
			set
			{
				if ((this._AdvertID != value))
				{
					this._AdvertID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommType", DbType="NVarChar(255)")]
		public string AccommType
		{
			get
			{
				return this._AccommType;
			}
			set
			{
				if ((this._AccommType != value))
				{
					this._AccommType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommSubType", DbType="NVarChar(255)")]
		public string AccommSubType
		{
			get
			{
				return this._AccommSubType;
			}
			set
			{
				if ((this._AccommSubType != value))
				{
					this._AccommSubType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacationType", DbType="NVarChar(255)")]
		public string VacationType
		{
			get
			{
				return this._VacationType;
			}
			set
			{
				if ((this._VacationType != value))
				{
					this._VacationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beach", DbType="NVarChar(255)")]
		public string Beach
		{
			get
			{
				return this._Beach;
			}
			set
			{
				if ((this._Beach != value))
				{
					this._Beach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NVarChar(4000)")]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this._Facilities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(4000)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this._Activities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(255)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subregion", DbType="NVarChar(255)")]
		public string Subregion
		{
			get
			{
				return this._Subregion;
			}
			set
			{
				if ((this._Subregion != value))
				{
					this._Subregion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(255)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this._Island = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsSpec", DbType="NVarChar(255)")]
		public string PetsSpec
		{
			get
			{
				return this._PetsSpec;
			}
			set
			{
				if ((this._PetsSpec != value))
				{
					this._PetsSpec = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
