//------------------------------------------------------------------------------
// <autogenerated>
//     Date:                20110705
//     Time:                16:36 
//     CodeSmith Version:   5.0.0.0
//     Template created by:	Vedran Kaldi (vedran@vkaldi.com)
//
//     Ovaj fajl je autogeneriran i ne smije se mijenjati!
//     
//     Wrapper klasa za storicu GetAdvertRaw
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Runtime.Serialization;
using IsolationLevel = System.Transactions.IsolationLevel;
using System.Transactions;

namespace Placeberry.DAL
{
    /// <summary>
    /// Wrapper oko procedure GetAdvertRaw.
    /// Za izvrsavanje koristiti Execute metodu.
    /// </summary>
    public static partial class GetAdvertRaw
    {
        /// <summary>
        /// Preko ove metode se izvrsava storica GetAdvertRaw.
        /// SqlDataAdapter.Fill varijanta
        /// Tablica 1 (Id int , GenerationId int , LanguageId int , HashCode varchar(2147483647) , SystemStatus char(1) , Active bit , Source nvarchar(250) , Language nvarchar(50) , GroupType nvarchar(250) , GroupSubType nvarchar(250) , SourceCategory nvarchar(1200) , Title nvarchar(250) , AccommType nvarchar(250) , AccommSubType nvarchar(250) , VacationType nvarchar(250) , AdvertCode nvarchar(50) , UrlLink nvarchar(1200) , PictureUrl nvarchar(1200) , Stars nvarchar(50) , LocationDesc nvarchar(2147483647) , Country nvarchar(250) , Region nvarchar(250) , Subregion nvarchar(250) , Island nvarchar(250) , City nvarchar(250) , PriceOld nvarchar(250) , PriceFrom nvarchar(250) , PriceDesc nvarchar(250) , Date1 nvarchar(250) , Date2 nvarchar(250) , DateDesc nvarchar(500) , DaysNum nvarchar(50) , Description nvarchar(2147483647) , Activities nvarchar(2147483647) , Facilities nvarchar(2147483647) , Beach nvarchar(250) , BeachDistanceM nvarchar(250) , DistanceFromCentreM nvarchar(250) , PetsDesc nvarchar(250) , InfoDesc nvarchar(250) , )
        /// </summary>
        /// <returns>Strong-typed lista koja predstavlja podatke koje je storica vratila.</returns>
        /// <param name="Id">int </param>
        /// <param name="userId">uniqueidentifier </param>
        public static List<GetAdvertRaw.Ret> Execute(System.Int32? Id, System.Guid? userId)
        {
            DateTime startTime = DateTime.Now;

            string cnnStr = autogenerated_Common_dblibrary.GetConnectionString();
            System.Transactions.TransactionOptions opt = new System.Transactions.TransactionOptions();
            opt.IsolationLevel = GetIsolationLevel();
            System.Transactions.TransactionScope scope = new System.Transactions.TransactionScope(scopeOption, opt);
            using (scope)
            {
                using (SqlConnection cnn = new SqlConnection(cnnStr))
                {
                    SqlCommand cmd = new SqlCommand("GetAdvertRaw", cnn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    if (commandTimeout > -1)
                    {
                        cmd.CommandTimeout = commandTimeout;
                    }


                    SqlParameter paramId = cmd.Parameters.Add("@Id", SqlDbType.Int);
                    if (Id != null) paramId.Value = Id;
                    else paramId.Value = DBNull.Value;

                    SqlParameter paramuserId = cmd.Parameters.Add("@userId", SqlDbType.UniqueIdentifier);
                    if (userId != null) paramuserId.Value = userId;
                    else paramuserId.Value = DBNull.Value;

                    List<Ret> retVal = new List<Ret>();
                    cnn.Open();
                    SqlDataReader reader = cmd.ExecuteReader();
                    while (reader.Read())
                    {
                        object tmp;
                        Ret rv = new Ret();
                        tmp = reader["Id"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Id = (System.Int32)tmp;
                        tmp = reader["GenerationId"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.GenerationId = (System.Int32?)tmp;
                        tmp = reader["LanguageId"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.LanguageId = (System.Int32?)tmp;
                        tmp = reader["HashCode"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.HashCode = (System.String)tmp;
                        tmp = reader["SystemStatus"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.SystemStatus = (System.String)tmp;
                        tmp = reader["Active"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Active = (System.Boolean)tmp;
                        tmp = reader["Source"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Source = (System.String)tmp;
                        tmp = reader["Language"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Language = (System.String)tmp;
                        tmp = reader["GroupType"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.GroupType = (System.String)tmp;
                        tmp = reader["GroupSubType"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.GroupSubType = (System.String)tmp;
                        tmp = reader["SourceCategory"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.SourceCategory = (System.String)tmp;
                        tmp = reader["Title"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Title = (System.String)tmp;
                        tmp = reader["AccommType"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.AccommType = (System.String)tmp;
                        tmp = reader["AccommSubType"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.AccommSubType = (System.String)tmp;
                        tmp = reader["VacationType"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.VacationType = (System.String)tmp;
                        tmp = reader["AdvertCode"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.AdvertCode = (System.String)tmp;
                        tmp = reader["UrlLink"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.UrlLink = (System.String)tmp;
                        tmp = reader["PictureUrl"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.PictureUrl = (System.String)tmp;
                        tmp = reader["Stars"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Stars = (System.String)tmp;
                        tmp = reader["LocationDesc"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.LocationDesc = (System.String)tmp;
                        tmp = reader["Country"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Country = (System.String)tmp;
                        tmp = reader["Region"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Region = (System.String)tmp;
                        tmp = reader["Subregion"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Subregion = (System.String)tmp;
                        tmp = reader["Island"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Island = (System.String)tmp;
                        tmp = reader["City"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.City = (System.String)tmp;
                        tmp = reader["PriceOld"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.PriceOld = (System.String)tmp;
                        tmp = reader["PriceFrom"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.PriceFrom = (System.String)tmp;
                        tmp = reader["PriceDesc"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.PriceDesc = (System.String)tmp;
                        tmp = reader["Date1"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Date1 = (System.String)tmp;
                        tmp = reader["Date2"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Date2 = (System.String)tmp;
                        tmp = reader["DateDesc"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.DateDesc = (System.String)tmp;
                        tmp = reader["DaysNum"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.DaysNum = (System.String)tmp;
                        tmp = reader["Description"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Description = (System.String)tmp;
                        tmp = reader["Activities"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Activities = (System.String)tmp;
                        tmp = reader["Facilities"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Facilities = (System.String)tmp;
                        tmp = reader["Beach"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.Beach = (System.String)tmp;
                        tmp = reader["BeachDistanceM"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.BeachDistanceM = (System.String)tmp;
                        tmp = reader["DistanceFromCentreM"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.DistanceFromCentreM = (System.String)tmp;
                        tmp = reader["PetsDesc"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.PetsDesc = (System.String)tmp;
                        tmp = reader["InfoDesc"];
                        if (tmp == DBNull.Value) tmp = null;
                        rv.InfoDesc = (System.String)tmp;
                        retVal.Add(rv);
                    }
                    reader.Close();
                    scope.Complete();

                    DateTime endTime = DateTime.Now;
                    if (autogenerated_Common_dblibrary.EnableProfiling
                        && autogenerated_Common_dblibrary.StoredProcedureEnd != null)
                    {
                        autogenerated_Common_dblibrary.StoredProcedureEnd("GetAdvertRaw", endTime.Subtract(startTime).TotalMilliseconds);
                    }

                    return retVal;
                }
            }
        }

        #region async
        /// <summary>
        /// Preko ove metode se pokrece GetAdvertRaw, ali asinkrono.
        /// Metodi se predaje delegat (callback) koji ce se pozvati kada se storica izvrsi.
        /// Unutar callback metode, potrebno je pozvati EndExecute da bi se dobio rezultat storice (ukoliko je doslo do greske, pozivanje EndExecute dize taj exception).
        /// </summary>
        public static IAsyncResult BeginExecute(System.Int32? Id, System.Guid? userId, AsyncCallback callback, object state)
        {
            ExecuteDelegate delegat = Execute;
            AsyncState asyncState = new AsyncState();
            asyncState.delegat = delegat;
            asyncState.state = state;
            return delegat.BeginInvoke(Id, userId, callback, asyncState);
        }
        /// <summary>
        /// result.AsyncState je <see cref="AsyncState"/> klasa, pa je potrebno castati u taj tip da bi do?li do vrijednosti koju smo poslali u <see cref="BeginExecute"/> metodu.
        /// </summary>
        /// <param name="result"></param>
        /// <returns></returns>
        public static List<GetAdvertRaw.Ret> EndExecute(IAsyncResult result)
        {
            if (result != null)
            {
                // cekamo dok se ne zavrsi async operacija (ako je korisnik pozvao BeginExecute i EndExecute jedno iza drugog)
                result.AsyncWaitHandle.WaitOne();

                if (result.AsyncState != null && result.AsyncState is AsyncState)
                {
                    AsyncState state = (AsyncState)result.AsyncState;
                    // zovemo endinvoke i vracamo rezultat
                    return state.delegat.EndInvoke(result);
                }
                else
                {
                    // result nije dobiven iz BeginExecute metode nego od negdje drugdje i nema sve sto bi trebao imati
                    throw new ArgumentException("Parametar result nije dobiven iz BeginExecute metode!", "result");
                }
            }
            else
            {
                throw new ArgumentNullException("result", "Parametar result ne smije biti null.");
            }
        }
        internal delegate List<GetAdvertRaw.Ret> ExecuteDelegate(System.Int32? Id, System.Guid? userId);
        public class AsyncState
        {
            internal ExecuteDelegate delegat;
            public object state;
        }
        #endregion
        #region transaction options
        private static IsolationLevel isolation = IsolationLevel.Unspecified;
        /// <summary>
        /// Dohvacanje nivoa izolacije transakcija.
        /// Ako se zeli overrajdati globalno ponasanje, potrebno je u partial klasi u statickom konstruktoru podesiti <see cref="isolation"/>.
        /// </summary>
        /// <returns></returns>
        private static IsolationLevel GetIsolationLevel()
        {
            if (isolation == IsolationLevel.Unspecified)
            {
                return autogenerated_Common_dblibrary.GetIsolationLevel();
            }
            else
            {
                return isolation;
            }
        }

        /// <summary>
        /// Oznaka da li je potrebna transakcija?
        /// Ako transakcija nije potrebna, ovo postaviti na <see cref="TransactionScopeOption.Suppress"/> u statickom konstruktoru u partial definiciji.
        /// Za select storice (koje pocinju sa 'ps') je default <see cref="TransactionScopeOption.Suppress"/> a za sve ostale <see cref="TransactionScopeOption.Required"/>
        /// </summary>
        private static TransactionScopeOption scopeOption = TransactionScopeOption.Required;
        #endregion
        #region command timeout
        /// <summary>
        /// Dohvacanje timeouta storice (SqlCommand.CommandTimeout) - u sekundama.
        /// Defaultna vrijednost vraca -1, sto znaci da se uzima sto god je defaultno za SqlCommand.CommandTimeout.
        /// 0 je beskonacno.
        /// </summary>
        private static int commandTimeout = -1;
        #endregion
        #region return values
        [Serializable]
        public class Ret
        {
            private System.Int32 _Id;
            /// <summary>
            /// int 
            /// </summary>
            public System.Int32 Id
            {
                get
                {
                    return _Id;
                }
                set
                {
                    _Id = value;
                }
            }
            private System.Int32? _GenerationId;
            /// <summary>
            /// int 
            /// </summary>
            public System.Int32? GenerationId
            {
                get
                {
                    return _GenerationId;
                }
                set
                {
                    _GenerationId = value;
                }
            }
            private System.Int32? _LanguageId;
            /// <summary>
            /// int 
            /// </summary>
            public System.Int32? LanguageId
            {
                get
                {
                    return _LanguageId;
                }
                set
                {
                    _LanguageId = value;
                }
            }
            private System.String _HashCode;
            /// <summary>
            /// varchar(2147483647) 
            /// </summary>
            public System.String HashCode
            {
                get
                {
                    return _HashCode;
                }
                set
                {
                    _HashCode = value;
                }
            }
            private System.String _SystemStatus;
            /// <summary>
            /// char(1) 
            /// </summary>
            public System.String SystemStatus
            {
                get
                {
                    return _SystemStatus;
                }
                set
                {
                    _SystemStatus = value;
                }
            }
            private System.Boolean _Active;
            /// <summary>
            /// bit 
            /// </summary>
            public System.Boolean Active
            {
                get
                {
                    return _Active;
                }
                set
                {
                    _Active = value;
                }
            }
            private System.String _Source;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Source
            {
                get
                {
                    return _Source;
                }
                set
                {
                    _Source = value;
                }
            }
            private System.String _Language;
            /// <summary>
            /// nvarchar(50) 
            /// </summary>
            public System.String Language
            {
                get
                {
                    return _Language;
                }
                set
                {
                    _Language = value;
                }
            }
            private System.String _GroupType;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String GroupType
            {
                get
                {
                    return _GroupType;
                }
                set
                {
                    _GroupType = value;
                }
            }
            private System.String _GroupSubType;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String GroupSubType
            {
                get
                {
                    return _GroupSubType;
                }
                set
                {
                    _GroupSubType = value;
                }
            }
            private System.String _SourceCategory;
            /// <summary>
            /// nvarchar(1200) 
            /// </summary>
            public System.String SourceCategory
            {
                get
                {
                    return _SourceCategory;
                }
                set
                {
                    _SourceCategory = value;
                }
            }
            private System.String _Title;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Title
            {
                get
                {
                    return _Title;
                }
                set
                {
                    _Title = value;
                }
            }
            private System.String _AccommType;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String AccommType
            {
                get
                {
                    return _AccommType;
                }
                set
                {
                    _AccommType = value;
                }
            }
            private System.String _AccommSubType;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String AccommSubType
            {
                get
                {
                    return _AccommSubType;
                }
                set
                {
                    _AccommSubType = value;
                }
            }
            private System.String _VacationType;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String VacationType
            {
                get
                {
                    return _VacationType;
                }
                set
                {
                    _VacationType = value;
                }
            }
            private System.String _AdvertCode;
            /// <summary>
            /// nvarchar(50) 
            /// </summary>
            public System.String AdvertCode
            {
                get
                {
                    return _AdvertCode;
                }
                set
                {
                    _AdvertCode = value;
                }
            }
            private System.String _UrlLink;
            /// <summary>
            /// nvarchar(1200) 
            /// </summary>
            public System.String UrlLink
            {
                get
                {
                    return _UrlLink;
                }
                set
                {
                    _UrlLink = value;
                }
            }
            private System.String _PictureUrl;
            /// <summary>
            /// nvarchar(1200) 
            /// </summary>
            public System.String PictureUrl
            {
                get
                {
                    return _PictureUrl;
                }
                set
                {
                    _PictureUrl = value;
                }
            }
            private System.String _Stars;
            /// <summary>
            /// nvarchar(50) 
            /// </summary>
            public System.String Stars
            {
                get
                {
                    return _Stars;
                }
                set
                {
                    _Stars = value;
                }
            }
            private System.String _LocationDesc;
            /// <summary>
            /// nvarchar(2147483647) 
            /// </summary>
            public System.String LocationDesc
            {
                get
                {
                    return _LocationDesc;
                }
                set
                {
                    _LocationDesc = value;
                }
            }
            private System.String _Country;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Country
            {
                get
                {
                    return _Country;
                }
                set
                {
                    _Country = value;
                }
            }
            private System.String _Region;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Region
            {
                get
                {
                    return _Region;
                }
                set
                {
                    _Region = value;
                }
            }
            private System.String _Subregion;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Subregion
            {
                get
                {
                    return _Subregion;
                }
                set
                {
                    _Subregion = value;
                }
            }
            private System.String _Island;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Island
            {
                get
                {
                    return _Island;
                }
                set
                {
                    _Island = value;
                }
            }
            private System.String _City;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String City
            {
                get
                {
                    return _City;
                }
                set
                {
                    _City = value;
                }
            }
            private System.String _PriceOld;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String PriceOld
            {
                get
                {
                    return _PriceOld;
                }
                set
                {
                    _PriceOld = value;
                }
            }
            private System.String _PriceFrom;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String PriceFrom
            {
                get
                {
                    return _PriceFrom;
                }
                set
                {
                    _PriceFrom = value;
                }
            }
            private System.String _PriceDesc;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String PriceDesc
            {
                get
                {
                    return _PriceDesc;
                }
                set
                {
                    _PriceDesc = value;
                }
            }
            private System.String _Date1;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Date1
            {
                get
                {
                    return _Date1;
                }
                set
                {
                    _Date1 = value;
                }
            }
            private System.String _Date2;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Date2
            {
                get
                {
                    return _Date2;
                }
                set
                {
                    _Date2 = value;
                }
            }
            private System.String _DateDesc;
            /// <summary>
            /// nvarchar(500) 
            /// </summary>
            public System.String DateDesc
            {
                get
                {
                    return _DateDesc;
                }
                set
                {
                    _DateDesc = value;
                }
            }
            private System.String _DaysNum;
            /// <summary>
            /// nvarchar(50) 
            /// </summary>
            public System.String DaysNum
            {
                get
                {
                    return _DaysNum;
                }
                set
                {
                    _DaysNum = value;
                }
            }
            private System.String _Description;
            /// <summary>
            /// nvarchar(2147483647) 
            /// </summary>
            public System.String Description
            {
                get
                {
                    return _Description;
                }
                set
                {
                    _Description = value;
                }
            }
            private System.String _Activities;
            /// <summary>
            /// nvarchar(2147483647) 
            /// </summary>
            public System.String Activities
            {
                get
                {
                    return _Activities;
                }
                set
                {
                    _Activities = value;
                }
            }
            private System.String _Facilities;
            /// <summary>
            /// nvarchar(2147483647) 
            /// </summary>
            public System.String Facilities
            {
                get
                {
                    return _Facilities;
                }
                set
                {
                    _Facilities = value;
                }
            }
            private System.String _Beach;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String Beach
            {
                get
                {
                    return _Beach;
                }
                set
                {
                    _Beach = value;
                }
            }
            private System.String _BeachDistanceM;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String BeachDistanceM
            {
                get
                {
                    return _BeachDistanceM;
                }
                set
                {
                    _BeachDistanceM = value;
                }
            }
            private System.String _DistanceFromCentreM;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String DistanceFromCentreM
            {
                get
                {
                    return _DistanceFromCentreM;
                }
                set
                {
                    _DistanceFromCentreM = value;
                }
            }
            private System.String _PetsDesc;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String PetsDesc
            {
                get
                {
                    return _PetsDesc;
                }
                set
                {
                    _PetsDesc = value;
                }
            }
            private System.String _InfoDesc;
            /// <summary>
            /// nvarchar(250) 
            /// </summary>
            public System.String InfoDesc
            {
                get
                {
                    return _InfoDesc;
                }
                set
                {
                    _InfoDesc = value;
                }
            }
        }
        #endregion
    }
}
