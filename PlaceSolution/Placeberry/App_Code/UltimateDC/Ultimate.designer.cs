#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UltimateDC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Placeberry_dev")]
	public partial class UltimateDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertAccommodationImage(AccommodationImage instance);
    partial void UpdateAccommodationImage(AccommodationImage instance);
    partial void DeleteAccommodationImage(AccommodationImage instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertAccommodationCity(AccommodationCity instance);
    partial void UpdateAccommodationCity(AccommodationCity instance);
    partial void DeleteAccommodationCity(AccommodationCity instance);
    partial void InsertAccommodationDescription(AccommodationDescription instance);
    partial void UpdateAccommodationDescription(AccommodationDescription instance);
    partial void DeleteAccommodationDescription(AccommodationDescription instance);
    partial void InsertAccommodationPrice(AccommodationPrice instance);
    partial void UpdateAccommodationPrice(AccommodationPrice instance);
    partial void DeleteAccommodationPrice(AccommodationPrice instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void InsertPlaceberryUser(PlaceberryUser instance);
    partial void UpdatePlaceberryUser(PlaceberryUser instance);
    partial void DeletePlaceberryUser(PlaceberryUser instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void InsertUltimateTableRelation(UltimateTableRelation instance);
    partial void UpdateUltimateTableRelation(UltimateTableRelation instance);
    partial void DeleteUltimateTableRelation(UltimateTableRelation instance);
    partial void InsertUltimateTableTranslation(UltimateTableTranslation instance);
    partial void UpdateUltimateTableTranslation(UltimateTableTranslation instance);
    partial void DeleteUltimateTableTranslation(UltimateTableTranslation instance);
    partial void InsertPopularQuery(PopularQuery instance);
    partial void UpdatePopularQuery(PopularQuery instance);
    partial void DeletePopularQuery(PopularQuery instance);
    partial void InsertUltimateTableObjectType(UltimateTableObjectType instance);
    partial void UpdateUltimateTableObjectType(UltimateTableObjectType instance);
    partial void DeleteUltimateTableObjectType(UltimateTableObjectType instance);
    partial void InsertRegexLanguageRule(RegexLanguageRule instance);
    partial void UpdateRegexLanguageRule(RegexLanguageRule instance);
    partial void DeleteRegexLanguageRule(RegexLanguageRule instance);
    partial void InsertAgencyDescription(AgencyDescription instance);
    partial void UpdateAgencyDescription(AgencyDescription instance);
    partial void DeleteAgencyDescription(AgencyDescription instance);
    partial void InsertAdvert(Advert instance);
    partial void UpdateAdvert(Advert instance);
    partial void DeleteAdvert(Advert instance);
    partial void InsertCarrierLine(CarrierLine instance);
    partial void UpdateCarrierLine(CarrierLine instance);
    partial void DeleteCarrierLine(CarrierLine instance);
    partial void InsertCarrierLineSeason(CarrierLineSeason instance);
    partial void UpdateCarrierLineSeason(CarrierLineSeason instance);
    partial void DeleteCarrierLineSeason(CarrierLineSeason instance);
    partial void InsertCarrierLineTimeTable(CarrierLineTimeTable instance);
    partial void UpdateCarrierLineTimeTable(CarrierLineTimeTable instance);
    partial void DeleteCarrierLineTimeTable(CarrierLineTimeTable instance);
    partial void InsertUltimateTable(UltimateTable instance);
    partial void UpdateUltimateTable(UltimateTable instance);
    partial void DeleteUltimateTable(UltimateTable instance);
    partial void InsertUltimateTableInfo(UltimateTableInfo instance);
    partial void UpdateUltimateTableInfo(UltimateTableInfo instance);
    partial void DeleteUltimateTableInfo(UltimateTableInfo instance);
    partial void InsertAgency(Agency instance);
    partial void UpdateAgency(Agency instance);
    partial void DeleteAgency(Agency instance);
    partial void InsertUltimateTableUrlTag(UltimateTableUrlTag instance);
    partial void UpdateUltimateTableUrlTag(UltimateTableUrlTag instance);
    partial void DeleteUltimateTableUrlTag(UltimateTableUrlTag instance);
    partial void InsertAgencyUrlTag(AgencyUrlTag instance);
    partial void UpdateAgencyUrlTag(AgencyUrlTag instance);
    partial void DeleteAgencyUrlTag(AgencyUrlTag instance);
    partial void InsertAccommodationUrlTag(AccommodationUrlTag instance);
    partial void UpdateAccommodationUrlTag(AccommodationUrlTag instance);
    partial void DeleteAccommodationUrlTag(AccommodationUrlTag instance);
    partial void InsertAccommodation(Accommodation instance);
    partial void UpdateAccommodation(Accommodation instance);
    partial void DeleteAccommodation(Accommodation instance);
    #endregion
		
		public UltimateDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Placeberry_CS"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UltimateDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UltimateDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UltimateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UltimateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<AccommodationImage> AccommodationImages
		{
			get
			{
				return this.GetTable<AccommodationImage>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<AccommodationCity> AccommodationCities
		{
			get
			{
				return this.GetTable<AccommodationCity>();
			}
		}
		
		public System.Data.Linq.Table<AccommodationDescription> AccommodationDescriptions
		{
			get
			{
				return this.GetTable<AccommodationDescription>();
			}
		}
		
		public System.Data.Linq.Table<AccommodationPrice> AccommodationPrices
		{
			get
			{
				return this.GetTable<AccommodationPrice>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<PlaceberryUser> PlaceberryUsers
		{
			get
			{
				return this.GetTable<PlaceberryUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTableRelation> UltimateTableRelations
		{
			get
			{
				return this.GetTable<UltimateTableRelation>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTableTranslation> UltimateTableTranslations
		{
			get
			{
				return this.GetTable<UltimateTableTranslation>();
			}
		}
		
		public System.Data.Linq.Table<PopularQuery> PopularQueries
		{
			get
			{
				return this.GetTable<PopularQuery>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTableObjectType> UltimateTableObjectTypes
		{
			get
			{
				return this.GetTable<UltimateTableObjectType>();
			}
		}
		
		public System.Data.Linq.Table<RegexLanguageRule> RegexLanguageRules
		{
			get
			{
				return this.GetTable<RegexLanguageRule>();
			}
		}
		
		public System.Data.Linq.Table<AgencyDescription> AgencyDescriptions
		{
			get
			{
				return this.GetTable<AgencyDescription>();
			}
		}
		
		public System.Data.Linq.Table<Advert> Adverts
		{
			get
			{
				return this.GetTable<Advert>();
			}
		}
		
		public System.Data.Linq.Table<CarrierLine> CarrierLines
		{
			get
			{
				return this.GetTable<CarrierLine>();
			}
		}
		
		public System.Data.Linq.Table<CarrierLineSeason> CarrierLineSeasons
		{
			get
			{
				return this.GetTable<CarrierLineSeason>();
			}
		}
		
		public System.Data.Linq.Table<CarrierLineTimeTable> CarrierLineTimeTables
		{
			get
			{
				return this.GetTable<CarrierLineTimeTable>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTable> UltimateTables
		{
			get
			{
				return this.GetTable<UltimateTable>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTableInfo> UltimateTableInfos
		{
			get
			{
				return this.GetTable<UltimateTableInfo>();
			}
		}
		
		public System.Data.Linq.Table<Agency> Agencies
		{
			get
			{
				return this.GetTable<Agency>();
			}
		}
		
		public System.Data.Linq.Table<vw_FormatedAdvertListing> vw_FormatedAdvertListings
		{
			get
			{
				return this.GetTable<vw_FormatedAdvertListing>();
			}
		}
		
		public System.Data.Linq.Table<UltimateTableUrlTag> UltimateTableUrlTags
		{
			get
			{
				return this.GetTable<UltimateTableUrlTag>();
			}
		}
		
		public System.Data.Linq.Table<AgencyUrlTag> AgencyUrlTags
		{
			get
			{
				return this.GetTable<AgencyUrlTag>();
			}
		}
		
		public System.Data.Linq.Table<AccommodationUrlTag> AccommodationUrlTags
		{
			get
			{
				return this.GetTable<AccommodationUrlTag>();
			}
		}
		
		public System.Data.Linq.Table<Accommodation> Accommodations
		{
			get
			{
				return this.GetTable<Accommodation>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCountryFromIP")]
		public int GetCountryFromIP([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IP", DbType="NVarChar(15)")] string iP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(2)")] ref string country)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iP, country);
			country = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAutoRegex")]
		public int GetAutoRegex([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string term, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] ref string regex)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), term, languageId, regex);
			regex = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetParentCities")]
		public ISingleResult<GetParentCitiesResult> GetParentCities([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> countryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), countryId, languageId);
			return ((ISingleResult<GetParentCitiesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetParentChildsByType")]
		public ISingleResult<GetParentChildsByTypeResult> GetParentChildsByType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> parentId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> childTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentId, childTypeId, languageId);
			return ((ISingleResult<GetParentChildsByTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAdvert")]
		public ISingleResult<GetAdvertResult> GetAdvert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdvertID", DbType="Int")] System.Nullable<int> advertID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), advertID);
			return ((ISingleResult<GetAdvertResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetParsedQuery")]
		public ISingleResult<GetParsedQueryResult> GetParsedQuery([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string query, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query, languageId);
			return ((ISingleResult<GetParsedQueryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcessAccommodationAdvert")]
		public ISingleResult<ProcessAccommodationAdvertResult> ProcessAccommodationAdvert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccommodationId", DbType="Int")] System.Nullable<int> accommodationId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accommodationId);
			return ((ISingleResult<ProcessAccommodationAdvertResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetParents")]
		public ISingleResult<GetParentsResult> GetParents([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string childTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> childId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), childTitle, childId, languageId);
			return ((ISingleResult<GetParentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAgencyAdverts")]
		public ISingleResult<GetAgencyAdvertsResult> GetAgencyAdverts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> agencyId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> languageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agencyId, languageId);
			return ((ISingleResult<GetAgencyAdvertsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Abbrevation;
		
		private bool _Active;
		
		private string _Regex;
		
		private EntitySet<AccommodationDescription> _AccommodationDescriptions;
		
		private EntitySet<UltimateTableTranslation> _UltimateTableTranslations;
		
		private EntitySet<PopularQuery> _PopularQueries;
		
		private EntitySet<RegexLanguageRule> _RegexLanguageRules;
		
		private EntitySet<AgencyDescription> _AgencyDescriptions;
		
		private EntitySet<Agency> _Agencies;
		
		private EntitySet<UltimateTableUrlTag> _UltimateTableUrlTags;
		
		private EntitySet<AccommodationUrlTag> _AccommodationUrlTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAbbrevationChanging(string value);
    partial void OnAbbrevationChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnRegexChanging(string value);
    partial void OnRegexChanged();
    #endregion
		
		public Language()
		{
			this._AccommodationDescriptions = new EntitySet<AccommodationDescription>(new Action<AccommodationDescription>(this.attach_AccommodationDescriptions), new Action<AccommodationDescription>(this.detach_AccommodationDescriptions));
			this._UltimateTableTranslations = new EntitySet<UltimateTableTranslation>(new Action<UltimateTableTranslation>(this.attach_UltimateTableTranslations), new Action<UltimateTableTranslation>(this.detach_UltimateTableTranslations));
			this._PopularQueries = new EntitySet<PopularQuery>(new Action<PopularQuery>(this.attach_PopularQueries), new Action<PopularQuery>(this.detach_PopularQueries));
			this._RegexLanguageRules = new EntitySet<RegexLanguageRule>(new Action<RegexLanguageRule>(this.attach_RegexLanguageRules), new Action<RegexLanguageRule>(this.detach_RegexLanguageRules));
			this._AgencyDescriptions = new EntitySet<AgencyDescription>(new Action<AgencyDescription>(this.attach_AgencyDescriptions), new Action<AgencyDescription>(this.detach_AgencyDescriptions));
			this._Agencies = new EntitySet<Agency>(new Action<Agency>(this.attach_Agencies), new Action<Agency>(this.detach_Agencies));
			this._UltimateTableUrlTags = new EntitySet<UltimateTableUrlTag>(new Action<UltimateTableUrlTag>(this.attach_UltimateTableUrlTags), new Action<UltimateTableUrlTag>(this.detach_UltimateTableUrlTags));
			this._AccommodationUrlTags = new EntitySet<AccommodationUrlTag>(new Action<AccommodationUrlTag>(this.attach_AccommodationUrlTags), new Action<AccommodationUrlTag>(this.detach_AccommodationUrlTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbrevation", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Abbrevation
		{
			get
			{
				return this._Abbrevation;
			}
			set
			{
				if ((this._Abbrevation != value))
				{
					this.OnAbbrevationChanging(value);
					this.SendPropertyChanging();
					this._Abbrevation = value;
					this.SendPropertyChanged("Abbrevation");
					this.OnAbbrevationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regex", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string Regex
		{
			get
			{
				return this._Regex;
			}
			set
			{
				if ((this._Regex != value))
				{
					this.OnRegexChanging(value);
					this.SendPropertyChanging();
					this._Regex = value;
					this.SendPropertyChanged("Regex");
					this.OnRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AccommodationDescription", Storage="_AccommodationDescriptions", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<AccommodationDescription> AccommodationDescriptions
		{
			get
			{
				return this._AccommodationDescriptions;
			}
			set
			{
				this._AccommodationDescriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_UltimateTableTranslation", Storage="_UltimateTableTranslations", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<UltimateTableTranslation> UltimateTableTranslations
		{
			get
			{
				return this._UltimateTableTranslations;
			}
			set
			{
				this._UltimateTableTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_PopularQuery", Storage="_PopularQueries", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<PopularQuery> PopularQueries
		{
			get
			{
				return this._PopularQueries;
			}
			set
			{
				this._PopularQueries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_RegexLanguageRule", Storage="_RegexLanguageRules", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<RegexLanguageRule> RegexLanguageRules
		{
			get
			{
				return this._RegexLanguageRules;
			}
			set
			{
				this._RegexLanguageRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AgencyDescription", Storage="_AgencyDescriptions", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<AgencyDescription> AgencyDescriptions
		{
			get
			{
				return this._AgencyDescriptions;
			}
			set
			{
				this._AgencyDescriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Agency", Storage="_Agencies", ThisKey="Id", OtherKey="LangaugeId")]
		public EntitySet<Agency> Agencies
		{
			get
			{
				return this._Agencies;
			}
			set
			{
				this._Agencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_UltimateTableUrlTag", Storage="_UltimateTableUrlTags", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<UltimateTableUrlTag> UltimateTableUrlTags
		{
			get
			{
				return this._UltimateTableUrlTags;
			}
			set
			{
				this._UltimateTableUrlTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AccommodationUrlTag", Storage="_AccommodationUrlTags", ThisKey="Id", OtherKey="LanguageId")]
		public EntitySet<AccommodationUrlTag> AccommodationUrlTags
		{
			get
			{
				return this._AccommodationUrlTags;
			}
			set
			{
				this._AccommodationUrlTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccommodationDescriptions(AccommodationDescription entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_AccommodationDescriptions(AccommodationDescription entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_UltimateTableTranslations(UltimateTableTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_UltimateTableTranslations(UltimateTableTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_PopularQueries(PopularQuery entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_PopularQueries(PopularQuery entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_RegexLanguageRules(RegexLanguageRule entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_RegexLanguageRules(RegexLanguageRule entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_AgencyDescriptions(AgencyDescription entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_AgencyDescriptions(AgencyDescription entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Agencies(Agency entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Agencies(Agency entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_UltimateTableUrlTags(UltimateTableUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_UltimateTableUrlTags(UltimateTableUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_AccommodationUrlTags(AccommodationUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_AccommodationUrlTags(AccommodationUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Src;
		
		private string _Alt;
		
		private string _Title;
		
		private string _Description;
		
		private EntitySet<AccommodationImage> _AccommodationImages;
		
		private EntitySet<Agency> _Agencies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSrcChanging(string value);
    partial void OnSrcChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Image()
		{
			this._AccommodationImages = new EntitySet<AccommodationImage>(new Action<AccommodationImage>(this.attach_AccommodationImages), new Action<AccommodationImage>(this.detach_AccommodationImages));
			this._Agencies = new EntitySet<Agency>(new Action<Agency>(this.attach_Agencies), new Action<Agency>(this.detach_Agencies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Src", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Src
		{
			get
			{
				return this._Src;
			}
			set
			{
				if ((this._Src != value))
				{
					this.OnSrcChanging(value);
					this.SendPropertyChanging();
					this._Src = value;
					this.SendPropertyChanged("Src");
					this.OnSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this.OnAltChanging(value);
					this.SendPropertyChanging();
					this._Alt = value;
					this.SendPropertyChanged("Alt");
					this.OnAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_AccommodationImage", Storage="_AccommodationImages", ThisKey="Id", OtherKey="ImageId")]
		public EntitySet<AccommodationImage> AccommodationImages
		{
			get
			{
				return this._AccommodationImages;
			}
			set
			{
				this._AccommodationImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_Agency", Storage="_Agencies", ThisKey="Id", OtherKey="LogoId")]
		public EntitySet<Agency> Agencies
		{
			get
			{
				return this._Agencies;
			}
			set
			{
				this._Agencies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccommodationImages(AccommodationImage entity)
		{
			this.SendPropertyChanging();
			entity.Image = this;
		}
		
		private void detach_AccommodationImages(AccommodationImage entity)
		{
			this.SendPropertyChanging();
			entity.Image = null;
		}
		
		private void attach_Agencies(Agency entity)
		{
			this.SendPropertyChanging();
			entity.Image = this;
		}
		
		private void detach_Agencies(Agency entity)
		{
			this.SendPropertyChanging();
			entity.Image = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccommodationImages")]
	public partial class AccommodationImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccommodationId;
		
		private int _ImageId;
		
		private EntityRef<Image> _Image;
		
		private EntityRef<Accommodation> _Accommodation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccommodationIdChanging(int value);
    partial void OnAccommodationIdChanged();
    partial void OnImageIdChanging(int value);
    partial void OnImageIdChanged();
    #endregion
		
		public AccommodationImage()
		{
			this._Image = default(EntityRef<Image>);
			this._Accommodation = default(EntityRef<Accommodation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					if (this._Accommodation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccommodationIdChanging(value);
					this.SendPropertyChanging();
					this._AccommodationId = value;
					this.SendPropertyChanged("AccommodationId");
					this.OnAccommodationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_AccommodationImage", Storage="_Image", ThisKey="ImageId", OtherKey="Id", IsForeignKey=true)]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.AccommodationImages.Remove(this);
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.AccommodationImages.Add(this);
						this._ImageId = value.Id;
					}
					else
					{
						this._ImageId = default(int);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationImage", Storage="_Accommodation", ThisKey="AccommodationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Accommodation Accommodation
		{
			get
			{
				return this._Accommodation.Entity;
			}
			set
			{
				Accommodation previousValue = this._Accommodation.Entity;
				if (((previousValue != value) 
							|| (this._Accommodation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accommodation.Entity = null;
						previousValue.AccommodationImages.Remove(this);
					}
					this._Accommodation.Entity = value;
					if ((value != null))
					{
						value.AccommodationImages.Add(this);
						this._AccommodationId = value.Id;
					}
					else
					{
						this._AccommodationId = default(int);
					}
					this.SendPropertyChanged("Accommodation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Abbrevation;
		
		private string _Regex;
		
		private string _Symbol;
		
		private EntitySet<AccommodationPrice> _AccommodationPrices;
		
		private EntitySet<Advert> _Adverts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAbbrevationChanging(string value);
    partial void OnAbbrevationChanged();
    partial void OnRegexChanging(string value);
    partial void OnRegexChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    #endregion
		
		public Currency()
		{
			this._AccommodationPrices = new EntitySet<AccommodationPrice>(new Action<AccommodationPrice>(this.attach_AccommodationPrices), new Action<AccommodationPrice>(this.detach_AccommodationPrices));
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbrevation", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Abbrevation
		{
			get
			{
				return this._Abbrevation;
			}
			set
			{
				if ((this._Abbrevation != value))
				{
					this.OnAbbrevationChanging(value);
					this.SendPropertyChanging();
					this._Abbrevation = value;
					this.SendPropertyChanged("Abbrevation");
					this.OnAbbrevationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regex", DbType="NVarChar(250)")]
		public string Regex
		{
			get
			{
				return this._Regex;
			}
			set
			{
				if ((this._Regex != value))
				{
					this.OnRegexChanging(value);
					this.SendPropertyChanging();
					this._Regex = value;
					this.SendPropertyChanged("Regex");
					this.OnRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(5)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_AccommodationPrice", Storage="_AccommodationPrices", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<AccommodationPrice> AccommodationPrices
		{
			get
			{
				return this._AccommodationPrices;
			}
			set
			{
				this._AccommodationPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Advert", Storage="_Adverts", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccommodationPrices(AccommodationPrice entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_AccommodationPrices(AccommodationPrice entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccommodationCity")]
	public partial class AccommodationCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Country;
		
		private string _Region;
		
		private string _Subregion;
		
		private string _City;
		
		private bool _PendingApproval;
		
		private System.Nullable<int> _UltimateTableId;
		
		private string _Island;
		
		private EntitySet<Accommodation> _Accommodations;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnSubregionChanging(string value);
    partial void OnSubregionChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPendingApprovalChanging(bool value);
    partial void OnPendingApprovalChanged();
    partial void OnUltimateTableIdChanging(System.Nullable<int> value);
    partial void OnUltimateTableIdChanged();
    partial void OnIslandChanging(string value);
    partial void OnIslandChanged();
    #endregion
		
		public AccommodationCity()
		{
			this._Accommodations = new EntitySet<Accommodation>(new Action<Accommodation>(this.attach_Accommodations), new Action<Accommodation>(this.detach_Accommodations));
			this._UltimateTable = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subregion", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Subregion
		{
			get
			{
				return this._Subregion;
			}
			set
			{
				if ((this._Subregion != value))
				{
					this.OnSubregionChanging(value);
					this.SendPropertyChanging();
					this._Subregion = value;
					this.SendPropertyChanged("Subregion");
					this.OnSubregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingApproval", DbType="Bit NOT NULL")]
		public bool PendingApproval
		{
			get
			{
				return this._PendingApproval;
			}
			set
			{
				if ((this._PendingApproval != value))
				{
					this.OnPendingApprovalChanging(value);
					this.SendPropertyChanging();
					this._PendingApproval = value;
					this.SendPropertyChanged("PendingApproval");
					this.OnPendingApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateTableId", DbType="Int")]
		public System.Nullable<int> UltimateTableId
		{
			get
			{
				return this._UltimateTableId;
			}
			set
			{
				if ((this._UltimateTableId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUltimateTableIdChanging(value);
					this.SendPropertyChanging();
					this._UltimateTableId = value;
					this.SendPropertyChanged("UltimateTableId");
					this.OnUltimateTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this.OnIslandChanging(value);
					this.SendPropertyChanging();
					this._Island = value;
					this.SendPropertyChanged("Island");
					this.OnIslandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccommodationCity_Accommodation", Storage="_Accommodations", ThisKey="Id", OtherKey="AccommodationCityId")]
		public EntitySet<Accommodation> Accommodations
		{
			get
			{
				return this._Accommodations;
			}
			set
			{
				this._Accommodations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_AccommodationCity", Storage="_UltimateTable", ThisKey="UltimateTableId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.AccommodationCities.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.AccommodationCities.Add(this);
						this._UltimateTableId = value.Id;
					}
					else
					{
						this._UltimateTableId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accommodations(Accommodation entity)
		{
			this.SendPropertyChanging();
			entity.AccommodationCity = this;
		}
		
		private void detach_Accommodations(Accommodation entity)
		{
			this.SendPropertyChanging();
			entity.AccommodationCity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccommodationDescription")]
	public partial class AccommodationDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccommodationId;
		
		private int _LanguageId;
		
		private string _Description;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Accommodation> _Accommodation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccommodationIdChanging(int value);
    partial void OnAccommodationIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AccommodationDescription()
		{
			this._Language = default(EntityRef<Language>);
			this._Accommodation = default(EntityRef<Accommodation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					if (this._Accommodation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccommodationIdChanging(value);
					this.SendPropertyChanging();
					this._AccommodationId = value;
					this.SendPropertyChanged("AccommodationId");
					this.OnAccommodationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AccommodationDescription", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.AccommodationDescriptions.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.AccommodationDescriptions.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationDescription", Storage="_Accommodation", ThisKey="AccommodationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Accommodation Accommodation
		{
			get
			{
				return this._Accommodation.Entity;
			}
			set
			{
				Accommodation previousValue = this._Accommodation.Entity;
				if (((previousValue != value) 
							|| (this._Accommodation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accommodation.Entity = null;
						previousValue.AccommodationDescriptions.Remove(this);
					}
					this._Accommodation.Entity = value;
					if ((value != null))
					{
						value.AccommodationDescriptions.Add(this);
						this._AccommodationId = value.Id;
					}
					else
					{
						this._AccommodationId = default(int);
					}
					this.SendPropertyChanged("Accommodation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccommodationPrice")]
	public partial class AccommodationPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AccommodationId;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Name;
		
		private decimal _Value;
		
		private int _CurrencyId;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Accommodation> _Accommodation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccommodationIdChanging(int value);
    partial void OnAccommodationIdChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    #endregion
		
		public AccommodationPrice()
		{
			this._Currency = default(EntityRef<Currency>);
			this._Accommodation = default(EntityRef<Accommodation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int NOT NULL")]
		public int AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					if (this._Accommodation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccommodationIdChanging(value);
					this.SendPropertyChanging();
					this._AccommodationId = value;
					this.SendPropertyChanged("AccommodationId");
					this.OnAccommodationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="Date")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(15,2) NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int NOT NULL")]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_AccommodationPrice", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.AccommodationPrices.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.AccommodationPrices.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationPrice", Storage="_Accommodation", ThisKey="AccommodationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Accommodation Accommodation
		{
			get
			{
				return this._Accommodation.Entity;
			}
			set
			{
				Accommodation previousValue = this._Accommodation.Entity;
				if (((previousValue != value) 
							|| (this._Accommodation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accommodation.Entity = null;
						previousValue.AccommodationPrices.Remove(this);
					}
					this._Accommodation.Entity = value;
					if ((value != null))
					{
						value.AccommodationPrices.Add(this);
						this._AccommodationId = value.Id;
					}
					else
					{
						this._AccommodationId = default(int);
					}
					this.SendPropertyChanged("Accommodation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlaceberryUser")]
	public partial class PlaceberryUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Country;
		
		private string _City;
		
		private string _Street;
		
		private System.Nullable<System.Guid> _ActivationKey;
		
		private System.Nullable<System.Guid> _ResetPasswordKey;
		
		private EntitySet<Agency> _Agencies;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnActivationKeyChanging(System.Nullable<System.Guid> value);
    partial void OnActivationKeyChanged();
    partial void OnResetPasswordKeyChanging(System.Nullable<System.Guid> value);
    partial void OnResetPasswordKeyChanged();
    #endregion
		
		public PlaceberryUser()
		{
			this._Agencies = new EntitySet<Agency>(new Action<Agency>(this.attach_Agencies), new Action<Agency>(this.detach_Agencies));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ActivationKey
		{
			get
			{
				return this._ActivationKey;
			}
			set
			{
				if ((this._ActivationKey != value))
				{
					this.OnActivationKeyChanging(value);
					this.SendPropertyChanging();
					this._ActivationKey = value;
					this.SendPropertyChanged("ActivationKey");
					this.OnActivationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetPasswordKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResetPasswordKey
		{
			get
			{
				return this._ResetPasswordKey;
			}
			set
			{
				if ((this._ResetPasswordKey != value))
				{
					this.OnResetPasswordKeyChanging(value);
					this.SendPropertyChanging();
					this._ResetPasswordKey = value;
					this.SendPropertyChanged("ResetPasswordKey");
					this.OnResetPasswordKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceberryUser_Agency", Storage="_Agencies", ThisKey="UserId", OtherKey="ManagerId")]
		public EntitySet<Agency> Agencies
		{
			get
			{
				return this._Agencies;
			}
			set
			{
				this._Agencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_PlaceberryUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.PlaceberryUser = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.PlaceberryUser = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agencies(Agency entity)
		{
			this.SendPropertyChanging();
			entity.PlaceberryUser = this;
		}
		
		private void detach_Agencies(Agency entity)
		{
			this.SendPropertyChanging();
			entity.PlaceberryUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<PlaceberryUser> _PlaceberryUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._PlaceberryUser = default(EntityRef<PlaceberryUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_PlaceberryUser", Storage="_PlaceberryUser", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public PlaceberryUser PlaceberryUser
		{
			get
			{
				return this._PlaceberryUser.Entity;
			}
			set
			{
				PlaceberryUser previousValue = this._PlaceberryUser.Entity;
				if (((previousValue != value) 
							|| (this._PlaceberryUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlaceberryUser.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._PlaceberryUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("PlaceberryUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTableRelation")]
	public partial class UltimateTableRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ParentId;
		
		private int _ChildId;
		
		private System.Nullable<int> _Priority;
		
		private string _Type;
		
		private bool _Active;
		
		private EntityRef<UltimateTable> _Parent;
		
		private EntityRef<UltimateTable> _Child;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnChildIdChanging(int value);
    partial void OnChildIdChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public UltimateTableRelation()
		{
			this._Parent = default(EntityRef<UltimateTable>);
			this._Child = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildId", DbType="Int NOT NULL")]
		public int ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					if (this._Child.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChildIdChanging(value);
					this.SendPropertyChanging();
					this._ChildId = value;
					this.SendPropertyChanged("ChildId");
					this.OnChildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation", Storage="_Parent", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				UltimateTable previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.UltimateTableRelations.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.UltimateTableRelations.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(int);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation1", Storage="_Child", ThisKey="ChildId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable Child
		{
			get
			{
				return this._Child.Entity;
			}
			set
			{
				UltimateTable previousValue = this._Child.Entity;
				if (((previousValue != value) 
							|| (this._Child.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Child.Entity = null;
						previousValue.UltimateTableRelations1.Remove(this);
					}
					this._Child.Entity = value;
					if ((value != null))
					{
						value.UltimateTableRelations1.Add(this);
						this._ChildId = value.Id;
					}
					else
					{
						this._ChildId = default(int);
					}
					this.SendPropertyChanged("Child");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTableTranslation")]
	public partial class UltimateTableTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UltimateTableId;
		
		private int _LanguageId;
		
		private string _Title;
		
		private string _Regex;
		
		private bool _Active;
		
		private string _IgnoreRegex;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUltimateTableIdChanging(int value);
    partial void OnUltimateTableIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRegexChanging(string value);
    partial void OnRegexChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnIgnoreRegexChanging(string value);
    partial void OnIgnoreRegexChanged();
    #endregion
		
		public UltimateTableTranslation()
		{
			this._Language = default(EntityRef<Language>);
			this._UltimateTable = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateTableId", DbType="Int NOT NULL")]
		public int UltimateTableId
		{
			get
			{
				return this._UltimateTableId;
			}
			set
			{
				if ((this._UltimateTableId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUltimateTableIdChanging(value);
					this.SendPropertyChanging();
					this._UltimateTableId = value;
					this.SendPropertyChanged("UltimateTableId");
					this.OnUltimateTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regex", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string Regex
		{
			get
			{
				return this._Regex;
			}
			set
			{
				if ((this._Regex != value))
				{
					this.OnRegexChanging(value);
					this.SendPropertyChanging();
					this._Regex = value;
					this.SendPropertyChanged("Regex");
					this.OnRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnoreRegex", DbType="NVarChar(1500)")]
		public string IgnoreRegex
		{
			get
			{
				return this._IgnoreRegex;
			}
			set
			{
				if ((this._IgnoreRegex != value))
				{
					this.OnIgnoreRegexChanging(value);
					this.SendPropertyChanging();
					this._IgnoreRegex = value;
					this.SendPropertyChanged("IgnoreRegex");
					this.OnIgnoreRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_UltimateTableTranslation", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.UltimateTableTranslations.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.UltimateTableTranslations.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableTranslation", Storage="_UltimateTable", ThisKey="UltimateTableId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.UltimateTableTranslations.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.UltimateTableTranslations.Add(this);
						this._UltimateTableId = value.Id;
					}
					else
					{
						this._UltimateTableId = default(int);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PopularQueries")]
	public partial class PopularQuery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LanguageId;
		
		private string _Query;
		
		private System.Nullable<int> _Priority;
		
		private bool _Active;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PopularQuery()
		{
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_PopularQuery", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.PopularQueries.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.PopularQueries.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTableObjectType")]
	public partial class UltimateTableObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _Code;
		
		private System.Nullable<int> _Priority;
		
		private string _GroupCode;
		
		private EntitySet<UltimateTable> _UltimateTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnGroupCodeChanging(string value);
    partial void OnGroupCodeChanged();
    #endregion
		
		public UltimateTableObjectType()
		{
			this._UltimateTables = new EntitySet<UltimateTable>(new Action<UltimateTable>(this.attach_UltimateTables), new Action<UltimateTable>(this.detach_UltimateTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="NVarChar(10)")]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTableObjectType_UltimateTable", Storage="_UltimateTables", ThisKey="Id", OtherKey="ObjectTypeId")]
		public EntitySet<UltimateTable> UltimateTables
		{
			get
			{
				return this._UltimateTables;
			}
			set
			{
				this._UltimateTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTableObjectType = this;
		}
		
		private void detach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTableObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegexLanguageRules")]
	public partial class RegexLanguageRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _RegexExpression;
		
		private string _ReplaceWith;
		
		private System.Nullable<int> _LanguageId;
		
		private System.Nullable<int> _Priority;
		
		private string _Description;
		
		private bool _Ignore;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRegexExpressionChanging(string value);
    partial void OnRegexExpressionChanged();
    partial void OnReplaceWithChanging(string value);
    partial void OnReplaceWithChanged();
    partial void OnLanguageIdChanging(System.Nullable<int> value);
    partial void OnLanguageIdChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIgnoreChanging(bool value);
    partial void OnIgnoreChanged();
    #endregion
		
		public RegexLanguageRule()
		{
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegexExpression", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RegexExpression
		{
			get
			{
				return this._RegexExpression;
			}
			set
			{
				if ((this._RegexExpression != value))
				{
					this.OnRegexExpressionChanging(value);
					this.SendPropertyChanging();
					this._RegexExpression = value;
					this.SendPropertyChanged("RegexExpression");
					this.OnRegexExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplaceWith", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ReplaceWith
		{
			get
			{
				return this._ReplaceWith;
			}
			set
			{
				if ((this._ReplaceWith != value))
				{
					this.OnReplaceWithChanging(value);
					this.SendPropertyChanging();
					this._ReplaceWith = value;
					this.SendPropertyChanged("ReplaceWith");
					this.OnReplaceWithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int")]
		public System.Nullable<int> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ignore", DbType="Bit NOT NULL")]
		public bool Ignore
		{
			get
			{
				return this._Ignore;
			}
			set
			{
				if ((this._Ignore != value))
				{
					this.OnIgnoreChanging(value);
					this.SendPropertyChanging();
					this._Ignore = value;
					this.SendPropertyChanged("Ignore");
					this.OnIgnoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_RegexLanguageRule", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.RegexLanguageRules.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.RegexLanguageRules.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgencyDescription")]
	public partial class AgencyDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgencyId;
		
		private int _LanguageId;
		
		private string _Description;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Agency> _Agency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgencyIdChanging(int value);
    partial void OnAgencyIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AgencyDescription()
		{
			this._Language = default(EntityRef<Language>);
			this._Agency = default(EntityRef<Agency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					if (this._Agency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AgencyDescription", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.AgencyDescriptions.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.AgencyDescriptions.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_AgencyDescription", Storage="_Agency", ThisKey="AgencyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Agency Agency
		{
			get
			{
				return this._Agency.Entity;
			}
			set
			{
				Agency previousValue = this._Agency.Entity;
				if (((previousValue != value) 
							|| (this._Agency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agency.Entity = null;
						previousValue.AgencyDescriptions.Remove(this);
					}
					this._Agency.Entity = value;
					if ((value != null))
					{
						value.AgencyDescriptions.Add(this);
						this._AgencyId = value.Id;
					}
					else
					{
						this._AgencyId = default(int);
					}
					this.SendPropertyChanged("Agency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advert")]
	public partial class Advert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccommodationType;
		
		private string _Title;
		
		private string _Description;
		
		private string _Country;
		
		private string _Region;
		
		private string _Island;
		
		private string _City;
		
		private string _Address;
		
		private string _ContactInfo;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private string _LocationDesc;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _PriceTo;
		
		private System.Nullable<decimal> _PriceOld;
		
		private string _PriceDesc;
		
		private System.Nullable<int> _CurrencyId;
		
		private System.Nullable<int> _SourceId;
		
		private int _LanguageId;
		
		private string _Url;
		
		private string _PictureUrl;
		
		private string _HashCode;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private string _DateDesc;
		
		private string _Activities;
		
		private string _Facilities;
		
		private string _PetsDesc;
		
		private System.Nullable<int> _AdvertRawId;
		
		private System.Nullable<int> _MatchedWordsCount;
		
		private System.Nullable<System.DateTime> _DateAdvertCreated;
		
		private System.Nullable<System.DateTime> _DateUrlChecked;
		
		private int _BadUrlCnt;
		
		private bool _Active;
		
		private bool _PlaceberryAdvert;
		
		private System.Nullable<int> _CapacityMin;
		
		private System.Nullable<int> _CapacityMax;
		
		private System.Nullable<int> _AgencyId;
		
		private System.Nullable<int> _AccommodationId;
		
		private System.Nullable<int> _AccommodationTypeId;
		
		private System.Nullable<int> _AdvertInfoId;
		
		private string _AgencyName;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
		private EntityRef<UltimateTable> _AdvertInfo;
		
		private EntityRef<Agency> _Agency;
		
		private EntityRef<Accommodation> _Accommodation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccommodationTypeChanging(string value);
    partial void OnAccommodationTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnIslandChanging(string value);
    partial void OnIslandChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactInfoChanging(string value);
    partial void OnContactInfoChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnLocationDescChanging(string value);
    partial void OnLocationDescChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnPriceToChanging(System.Nullable<decimal> value);
    partial void OnPriceToChanged();
    partial void OnPriceOldChanging(System.Nullable<decimal> value);
    partial void OnPriceOldChanged();
    partial void OnPriceDescChanging(string value);
    partial void OnPriceDescChanged();
    partial void OnCurrencyIdChanging(System.Nullable<int> value);
    partial void OnCurrencyIdChanged();
    partial void OnSourceIdChanging(System.Nullable<int> value);
    partial void OnSourceIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnPictureUrlChanging(string value);
    partial void OnPictureUrlChanged();
    partial void OnHashCodeChanging(string value);
    partial void OnHashCodeChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnDateDescChanging(string value);
    partial void OnDateDescChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnFacilitiesChanging(string value);
    partial void OnFacilitiesChanged();
    partial void OnPetsDescChanging(string value);
    partial void OnPetsDescChanged();
    partial void OnAdvertRawIdChanging(System.Nullable<int> value);
    partial void OnAdvertRawIdChanged();
    partial void OnMatchedWordsCountChanging(System.Nullable<int> value);
    partial void OnMatchedWordsCountChanged();
    partial void OnDateAdvertCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAdvertCreatedChanged();
    partial void OnDateUrlCheckedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUrlCheckedChanged();
    partial void OnBadUrlCntChanging(int value);
    partial void OnBadUrlCntChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnPlaceberryAdvertChanging(bool value);
    partial void OnPlaceberryAdvertChanged();
    partial void OnCapacityMinChanging(System.Nullable<int> value);
    partial void OnCapacityMinChanged();
    partial void OnCapacityMaxChanging(System.Nullable<int> value);
    partial void OnCapacityMaxChanged();
    partial void OnAgencyIdChanging(System.Nullable<int> value);
    partial void OnAgencyIdChanged();
    partial void OnAccommodationIdChanging(System.Nullable<int> value);
    partial void OnAccommodationIdChanged();
    partial void OnAccommodationTypeIdChanging(System.Nullable<int> value);
    partial void OnAccommodationTypeIdChanged();
    partial void OnAdvertInfoIdChanging(System.Nullable<int> value);
    partial void OnAdvertInfoIdChanged();
    partial void OnAgencyNameChanging(string value);
    partial void OnAgencyNameChanged();
    #endregion
		
		public Advert()
		{
			this._Currency = default(EntityRef<Currency>);
			this._UltimateTable = default(EntityRef<UltimateTable>);
			this._AdvertInfo = default(EntityRef<UltimateTable>);
			this._Agency = default(EntityRef<Agency>);
			this._Accommodation = default(EntityRef<Accommodation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationType", DbType="NVarChar(150)")]
		public string AccommodationType
		{
			get
			{
				return this._AccommodationType;
			}
			set
			{
				if ((this._AccommodationType != value))
				{
					this.OnAccommodationTypeChanging(value);
					this.SendPropertyChanging();
					this._AccommodationType = value;
					this.SendPropertyChanged("AccommodationType");
					this.OnAccommodationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(150)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(150)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(150)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this.OnIslandChanging(value);
					this.SendPropertyChanging();
					this._Island = value;
					this.SendPropertyChanged("Island");
					this.OnIslandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(150)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactInfo", DbType="NVarChar(150)")]
		public string ContactInfo
		{
			get
			{
				return this._ContactInfo;
			}
			set
			{
				if ((this._ContactInfo != value))
				{
					this.OnContactInfoChanging(value);
					this.SendPropertyChanging();
					this._ContactInfo = value;
					this.SendPropertyChanged("ContactInfo");
					this.OnContactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationDesc", DbType="NVarChar(500)")]
		public string LocationDesc
		{
			get
			{
				return this._LocationDesc;
			}
			set
			{
				if ((this._LocationDesc != value))
				{
					this.OnLocationDescChanging(value);
					this.SendPropertyChanging();
					this._LocationDesc = value;
					this.SendPropertyChanged("LocationDesc");
					this.OnLocationDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTo", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> PriceTo
		{
			get
			{
				return this._PriceTo;
			}
			set
			{
				if ((this._PriceTo != value))
				{
					this.OnPriceToChanging(value);
					this.SendPropertyChanging();
					this._PriceTo = value;
					this.SendPropertyChanged("PriceTo");
					this.OnPriceToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOld", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> PriceOld
		{
			get
			{
				return this._PriceOld;
			}
			set
			{
				if ((this._PriceOld != value))
				{
					this.OnPriceOldChanging(value);
					this.SendPropertyChanging();
					this._PriceOld = value;
					this.SendPropertyChanged("PriceOld");
					this.OnPriceOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDesc", DbType="NVarChar(150)")]
		public string PriceDesc
		{
			get
			{
				return this._PriceDesc;
			}
			set
			{
				if ((this._PriceDesc != value))
				{
					this.OnPriceDescChanging(value);
					this.SendPropertyChanging();
					this._PriceDesc = value;
					this.SendPropertyChanged("PriceDesc");
					this.OnPriceDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int")]
		public System.Nullable<int> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(1200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(1200)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this.OnPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureUrl = value;
					this.SendPropertyChanged("PictureUrl");
					this.OnPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashCode", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HashCode
		{
			get
			{
				return this._HashCode;
			}
			set
			{
				if ((this._HashCode != value))
				{
					this.OnHashCodeChanging(value);
					this.SendPropertyChanging();
					this._HashCode = value;
					this.SendPropertyChanged("HashCode");
					this.OnHashCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDesc", DbType="NVarChar(250)")]
		public string DateDesc
		{
			get
			{
				return this._DateDesc;
			}
			set
			{
				if ((this._DateDesc != value))
				{
					this.OnDateDescChanging(value);
					this.SendPropertyChanging();
					this._DateDesc = value;
					this.SendPropertyChanged("DateDesc");
					this.OnDateDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(1000)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NVarChar(1000)")]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this.OnFacilitiesChanging(value);
					this.SendPropertyChanging();
					this._Facilities = value;
					this.SendPropertyChanged("Facilities");
					this.OnFacilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsDesc", DbType="NVarChar(500)")]
		public string PetsDesc
		{
			get
			{
				return this._PetsDesc;
			}
			set
			{
				if ((this._PetsDesc != value))
				{
					this.OnPetsDescChanging(value);
					this.SendPropertyChanging();
					this._PetsDesc = value;
					this.SendPropertyChanged("PetsDesc");
					this.OnPetsDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertRawId", DbType="Int")]
		public System.Nullable<int> AdvertRawId
		{
			get
			{
				return this._AdvertRawId;
			}
			set
			{
				if ((this._AdvertRawId != value))
				{
					this.OnAdvertRawIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertRawId = value;
					this.SendPropertyChanged("AdvertRawId");
					this.OnAdvertRawIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchedWordsCount", DbType="Int")]
		public System.Nullable<int> MatchedWordsCount
		{
			get
			{
				return this._MatchedWordsCount;
			}
			set
			{
				if ((this._MatchedWordsCount != value))
				{
					this.OnMatchedWordsCountChanging(value);
					this.SendPropertyChanging();
					this._MatchedWordsCount = value;
					this.SendPropertyChanged("MatchedWordsCount");
					this.OnMatchedWordsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdvertCreated", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateAdvertCreated
		{
			get
			{
				return this._DateAdvertCreated;
			}
			set
			{
				if ((this._DateAdvertCreated != value))
				{
					this.OnDateAdvertCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateAdvertCreated = value;
					this.SendPropertyChanged("DateAdvertCreated");
					this.OnDateAdvertCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUrlChecked", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateUrlChecked
		{
			get
			{
				return this._DateUrlChecked;
			}
			set
			{
				if ((this._DateUrlChecked != value))
				{
					this.OnDateUrlCheckedChanging(value);
					this.SendPropertyChanging();
					this._DateUrlChecked = value;
					this.SendPropertyChanged("DateUrlChecked");
					this.OnDateUrlCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadUrlCnt", DbType="Int NOT NULL")]
		public int BadUrlCnt
		{
			get
			{
				return this._BadUrlCnt;
			}
			set
			{
				if ((this._BadUrlCnt != value))
				{
					this.OnBadUrlCntChanging(value);
					this.SendPropertyChanging();
					this._BadUrlCnt = value;
					this.SendPropertyChanged("BadUrlCnt");
					this.OnBadUrlCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceberryAdvert", DbType="Bit NOT NULL")]
		public bool PlaceberryAdvert
		{
			get
			{
				return this._PlaceberryAdvert;
			}
			set
			{
				if ((this._PlaceberryAdvert != value))
				{
					this.OnPlaceberryAdvertChanging(value);
					this.SendPropertyChanging();
					this._PlaceberryAdvert = value;
					this.SendPropertyChanged("PlaceberryAdvert");
					this.OnPlaceberryAdvertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMin", DbType="Int")]
		public System.Nullable<int> CapacityMin
		{
			get
			{
				return this._CapacityMin;
			}
			set
			{
				if ((this._CapacityMin != value))
				{
					this.OnCapacityMinChanging(value);
					this.SendPropertyChanging();
					this._CapacityMin = value;
					this.SendPropertyChanged("CapacityMin");
					this.OnCapacityMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMax", DbType="Int")]
		public System.Nullable<int> CapacityMax
		{
			get
			{
				return this._CapacityMax;
			}
			set
			{
				if ((this._CapacityMax != value))
				{
					this.OnCapacityMaxChanging(value);
					this.SendPropertyChanging();
					this._CapacityMax = value;
					this.SendPropertyChanged("CapacityMax");
					this.OnCapacityMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int")]
		public System.Nullable<int> AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					if (this._Agency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int")]
		public System.Nullable<int> AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					if (this._Accommodation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccommodationIdChanging(value);
					this.SendPropertyChanging();
					this._AccommodationId = value;
					this.SendPropertyChanged("AccommodationId");
					this.OnAccommodationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationTypeId", DbType="Int")]
		public System.Nullable<int> AccommodationTypeId
		{
			get
			{
				return this._AccommodationTypeId;
			}
			set
			{
				if ((this._AccommodationTypeId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccommodationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccommodationTypeId = value;
					this.SendPropertyChanged("AccommodationTypeId");
					this.OnAccommodationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertInfoId", DbType="Int")]
		public System.Nullable<int> AdvertInfoId
		{
			get
			{
				return this._AdvertInfoId;
			}
			set
			{
				if ((this._AdvertInfoId != value))
				{
					if (this._AdvertInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertInfoIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertInfoId = value;
					this.SendPropertyChanged("AdvertInfoId");
					this.OnAdvertInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyName", DbType="NVarChar(250)")]
		public string AgencyName
		{
			get
			{
				return this._AgencyName;
			}
			set
			{
				if ((this._AgencyName != value))
				{
					this.OnAgencyNameChanging(value);
					this.SendPropertyChanging();
					this._AgencyName = value;
					this.SendPropertyChanged("AgencyName");
					this.OnAgencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Advert", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_Advert", Storage="_UltimateTable", ThisKey="AccommodationTypeId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._AccommodationTypeId = value.Id;
					}
					else
					{
						this._AccommodationTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_Advert1", Storage="_AdvertInfo", ThisKey="AdvertInfoId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable AdvertInfo
		{
			get
			{
				return this._AdvertInfo.Entity;
			}
			set
			{
				UltimateTable previousValue = this._AdvertInfo.Entity;
				if (((previousValue != value) 
							|| (this._AdvertInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdvertInfo.Entity = null;
						previousValue.Adverts1.Remove(this);
					}
					this._AdvertInfo.Entity = value;
					if ((value != null))
					{
						value.Adverts1.Add(this);
						this._AdvertInfoId = value.Id;
					}
					else
					{
						this._AdvertInfoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AdvertInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_Advert", Storage="_Agency", ThisKey="AgencyId", OtherKey="Id", IsForeignKey=true)]
		public Agency Agency
		{
			get
			{
				return this._Agency.Entity;
			}
			set
			{
				Agency previousValue = this._Agency.Entity;
				if (((previousValue != value) 
							|| (this._Agency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agency.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._Agency.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._AgencyId = value.Id;
					}
					else
					{
						this._AgencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Agency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_Advert", Storage="_Accommodation", ThisKey="AccommodationId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Accommodation Accommodation
		{
			get
			{
				return this._Accommodation.Entity;
			}
			set
			{
				Accommodation previousValue = this._Accommodation.Entity;
				if (((previousValue != value) 
							|| (this._Accommodation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accommodation.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._Accommodation.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._AccommodationId = value.Id;
					}
					else
					{
						this._AccommodationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Accommodation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarrierLine")]
	public partial class CarrierLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private System.Nullable<int> _AgencyId;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<CarrierLineSeason> _CarrierLineSeasons;
		
		private EntityRef<Agency> _Agency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAgencyIdChanging(System.Nullable<int> value);
    partial void OnAgencyIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CarrierLine()
		{
			this._CarrierLineSeasons = new EntitySet<CarrierLineSeason>(new Action<CarrierLineSeason>(this.attach_CarrierLineSeasons), new Action<CarrierLineSeason>(this.detach_CarrierLineSeasons));
			this._Agency = default(EntityRef<Agency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int")]
		public System.Nullable<int> AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					if (this._Agency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierLine_CarrierLineSeason", Storage="_CarrierLineSeasons", ThisKey="Id", OtherKey="CarrierLineId")]
		public EntitySet<CarrierLineSeason> CarrierLineSeasons
		{
			get
			{
				return this._CarrierLineSeasons;
			}
			set
			{
				this._CarrierLineSeasons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_CarrierLine", Storage="_Agency", ThisKey="AgencyId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Agency Agency
		{
			get
			{
				return this._Agency.Entity;
			}
			set
			{
				Agency previousValue = this._Agency.Entity;
				if (((previousValue != value) 
							|| (this._Agency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agency.Entity = null;
						previousValue.CarrierLines.Remove(this);
					}
					this._Agency.Entity = value;
					if ((value != null))
					{
						value.CarrierLines.Add(this);
						this._AgencyId = value.Id;
					}
					else
					{
						this._AgencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Agency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarrierLineSeasons(CarrierLineSeason entity)
		{
			this.SendPropertyChanging();
			entity.CarrierLine = this;
		}
		
		private void detach_CarrierLineSeasons(CarrierLineSeason entity)
		{
			this.SendPropertyChanging();
			entity.CarrierLine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarrierLineSeason")]
	public partial class CarrierLineSeason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CarrierLineId;
		
		private string _Title;
		
		private System.DateTime _DateStart;
		
		private System.DateTime _DateEnd;
		
		private string _Description;
		
		private bool _Active;
		
		private int _Priority;
		
		private EntitySet<CarrierLineTimeTable> _CarrierLineTimeTables;
		
		private EntityRef<CarrierLine> _CarrierLine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCarrierLineIdChanging(int value);
    partial void OnCarrierLineIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public CarrierLineSeason()
		{
			this._CarrierLineTimeTables = new EntitySet<CarrierLineTimeTable>(new Action<CarrierLineTimeTable>(this.attach_CarrierLineTimeTables), new Action<CarrierLineTimeTable>(this.detach_CarrierLineTimeTables));
			this._CarrierLine = default(EntityRef<CarrierLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierLineId", DbType="Int NOT NULL")]
		public int CarrierLineId
		{
			get
			{
				return this._CarrierLineId;
			}
			set
			{
				if ((this._CarrierLineId != value))
				{
					if (this._CarrierLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarrierLineIdChanging(value);
					this.SendPropertyChanging();
					this._CarrierLineId = value;
					this.SendPropertyChanged("CarrierLineId");
					this.OnCarrierLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="Date NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierLineSeason_CarrierLineTimeTable", Storage="_CarrierLineTimeTables", ThisKey="Id", OtherKey="CarrierLineSeasonId")]
		public EntitySet<CarrierLineTimeTable> CarrierLineTimeTables
		{
			get
			{
				return this._CarrierLineTimeTables;
			}
			set
			{
				this._CarrierLineTimeTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierLine_CarrierLineSeason", Storage="_CarrierLine", ThisKey="CarrierLineId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CarrierLine CarrierLine
		{
			get
			{
				return this._CarrierLine.Entity;
			}
			set
			{
				CarrierLine previousValue = this._CarrierLine.Entity;
				if (((previousValue != value) 
							|| (this._CarrierLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarrierLine.Entity = null;
						previousValue.CarrierLineSeasons.Remove(this);
					}
					this._CarrierLine.Entity = value;
					if ((value != null))
					{
						value.CarrierLineSeasons.Add(this);
						this._CarrierLineId = value.Id;
					}
					else
					{
						this._CarrierLineId = default(int);
					}
					this.SendPropertyChanged("CarrierLine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarrierLineTimeTables(CarrierLineTimeTable entity)
		{
			this.SendPropertyChanging();
			entity.CarrierLineSeason = this;
		}
		
		private void detach_CarrierLineTimeTables(CarrierLineTimeTable entity)
		{
			this.SendPropertyChanging();
			entity.CarrierLineSeason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarrierLineTimeTable")]
	public partial class CarrierLineTimeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CarrierLineSeasonId;
		
		private string _PlaceFrom;
		
		private string _PlaceTo;
		
		private System.Nullable<int> _PlaceFromId;
		
		private System.Nullable<int> _PlaceToId;
		
		private System.Nullable<System.TimeSpan> _TimeDeparture;
		
		private System.Nullable<System.TimeSpan> _TimeArrival;
		
		private System.Nullable<int> _TimeFixedMinutes;
		
		private bool _Active;
		
		private bool _DaysAll;
		
		private bool _DayMonday;
		
		private bool _DayTuesday;
		
		private bool _DayWednesday;
		
		private bool _DayThursday;
		
		private bool _DayFriday;
		
		private bool _DaySaturday;
		
		private bool _DaySunday;
		
		private EntityRef<CarrierLineSeason> _CarrierLineSeason;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
		private EntityRef<UltimateTable> _UltimateTable1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCarrierLineSeasonIdChanging(int value);
    partial void OnCarrierLineSeasonIdChanged();
    partial void OnPlaceFromChanging(string value);
    partial void OnPlaceFromChanged();
    partial void OnPlaceToChanging(string value);
    partial void OnPlaceToChanged();
    partial void OnPlaceFromIdChanging(System.Nullable<int> value);
    partial void OnPlaceFromIdChanged();
    partial void OnPlaceToIdChanging(System.Nullable<int> value);
    partial void OnPlaceToIdChanged();
    partial void OnTimeDepartureChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeDepartureChanged();
    partial void OnTimeArrivalChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeArrivalChanged();
    partial void OnTimeFixedMinutesChanging(System.Nullable<int> value);
    partial void OnTimeFixedMinutesChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDaysAllChanging(bool value);
    partial void OnDaysAllChanged();
    partial void OnDayMondayChanging(bool value);
    partial void OnDayMondayChanged();
    partial void OnDayTuesdayChanging(bool value);
    partial void OnDayTuesdayChanged();
    partial void OnDayWednesdayChanging(bool value);
    partial void OnDayWednesdayChanged();
    partial void OnDayThursdayChanging(bool value);
    partial void OnDayThursdayChanged();
    partial void OnDayFridayChanging(bool value);
    partial void OnDayFridayChanged();
    partial void OnDaySaturdayChanging(bool value);
    partial void OnDaySaturdayChanged();
    partial void OnDaySundayChanging(bool value);
    partial void OnDaySundayChanged();
    #endregion
		
		public CarrierLineTimeTable()
		{
			this._CarrierLineSeason = default(EntityRef<CarrierLineSeason>);
			this._UltimateTable = default(EntityRef<UltimateTable>);
			this._UltimateTable1 = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierLineSeasonId", DbType="Int NOT NULL")]
		public int CarrierLineSeasonId
		{
			get
			{
				return this._CarrierLineSeasonId;
			}
			set
			{
				if ((this._CarrierLineSeasonId != value))
				{
					if (this._CarrierLineSeason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarrierLineSeasonIdChanging(value);
					this.SendPropertyChanging();
					this._CarrierLineSeasonId = value;
					this.SendPropertyChanged("CarrierLineSeasonId");
					this.OnCarrierLineSeasonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceFrom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PlaceFrom
		{
			get
			{
				return this._PlaceFrom;
			}
			set
			{
				if ((this._PlaceFrom != value))
				{
					this.OnPlaceFromChanging(value);
					this.SendPropertyChanging();
					this._PlaceFrom = value;
					this.SendPropertyChanged("PlaceFrom");
					this.OnPlaceFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceTo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PlaceTo
		{
			get
			{
				return this._PlaceTo;
			}
			set
			{
				if ((this._PlaceTo != value))
				{
					this.OnPlaceToChanging(value);
					this.SendPropertyChanging();
					this._PlaceTo = value;
					this.SendPropertyChanged("PlaceTo");
					this.OnPlaceToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceFromId", DbType="Int")]
		public System.Nullable<int> PlaceFromId
		{
			get
			{
				return this._PlaceFromId;
			}
			set
			{
				if ((this._PlaceFromId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceFromIdChanging(value);
					this.SendPropertyChanging();
					this._PlaceFromId = value;
					this.SendPropertyChanged("PlaceFromId");
					this.OnPlaceFromIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceToId", DbType="Int")]
		public System.Nullable<int> PlaceToId
		{
			get
			{
				return this._PlaceToId;
			}
			set
			{
				if ((this._PlaceToId != value))
				{
					if (this._UltimateTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceToIdChanging(value);
					this.SendPropertyChanging();
					this._PlaceToId = value;
					this.SendPropertyChanged("PlaceToId");
					this.OnPlaceToIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDeparture", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeDeparture
		{
			get
			{
				return this._TimeDeparture;
			}
			set
			{
				if ((this._TimeDeparture != value))
				{
					this.OnTimeDepartureChanging(value);
					this.SendPropertyChanging();
					this._TimeDeparture = value;
					this.SendPropertyChanged("TimeDeparture");
					this.OnTimeDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeArrival", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeArrival
		{
			get
			{
				return this._TimeArrival;
			}
			set
			{
				if ((this._TimeArrival != value))
				{
					this.OnTimeArrivalChanging(value);
					this.SendPropertyChanging();
					this._TimeArrival = value;
					this.SendPropertyChanged("TimeArrival");
					this.OnTimeArrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFixedMinutes", DbType="Int")]
		public System.Nullable<int> TimeFixedMinutes
		{
			get
			{
				return this._TimeFixedMinutes;
			}
			set
			{
				if ((this._TimeFixedMinutes != value))
				{
					this.OnTimeFixedMinutesChanging(value);
					this.SendPropertyChanging();
					this._TimeFixedMinutes = value;
					this.SendPropertyChanged("TimeFixedMinutes");
					this.OnTimeFixedMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysAll", DbType="Bit NOT NULL")]
		public bool DaysAll
		{
			get
			{
				return this._DaysAll;
			}
			set
			{
				if ((this._DaysAll != value))
				{
					this.OnDaysAllChanging(value);
					this.SendPropertyChanging();
					this._DaysAll = value;
					this.SendPropertyChanged("DaysAll");
					this.OnDaysAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayMonday", DbType="Bit NOT NULL")]
		public bool DayMonday
		{
			get
			{
				return this._DayMonday;
			}
			set
			{
				if ((this._DayMonday != value))
				{
					this.OnDayMondayChanging(value);
					this.SendPropertyChanging();
					this._DayMonday = value;
					this.SendPropertyChanged("DayMonday");
					this.OnDayMondayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayTuesday", DbType="Bit NOT NULL")]
		public bool DayTuesday
		{
			get
			{
				return this._DayTuesday;
			}
			set
			{
				if ((this._DayTuesday != value))
				{
					this.OnDayTuesdayChanging(value);
					this.SendPropertyChanging();
					this._DayTuesday = value;
					this.SendPropertyChanged("DayTuesday");
					this.OnDayTuesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayWednesday", DbType="Bit NOT NULL")]
		public bool DayWednesday
		{
			get
			{
				return this._DayWednesday;
			}
			set
			{
				if ((this._DayWednesday != value))
				{
					this.OnDayWednesdayChanging(value);
					this.SendPropertyChanging();
					this._DayWednesday = value;
					this.SendPropertyChanged("DayWednesday");
					this.OnDayWednesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayThursday", DbType="Bit NOT NULL")]
		public bool DayThursday
		{
			get
			{
				return this._DayThursday;
			}
			set
			{
				if ((this._DayThursday != value))
				{
					this.OnDayThursdayChanging(value);
					this.SendPropertyChanging();
					this._DayThursday = value;
					this.SendPropertyChanged("DayThursday");
					this.OnDayThursdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayFriday", DbType="Bit NOT NULL")]
		public bool DayFriday
		{
			get
			{
				return this._DayFriday;
			}
			set
			{
				if ((this._DayFriday != value))
				{
					this.OnDayFridayChanging(value);
					this.SendPropertyChanging();
					this._DayFriday = value;
					this.SendPropertyChanged("DayFriday");
					this.OnDayFridayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaySaturday", DbType="Bit NOT NULL")]
		public bool DaySaturday
		{
			get
			{
				return this._DaySaturday;
			}
			set
			{
				if ((this._DaySaturday != value))
				{
					this.OnDaySaturdayChanging(value);
					this.SendPropertyChanging();
					this._DaySaturday = value;
					this.SendPropertyChanged("DaySaturday");
					this.OnDaySaturdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaySunday", DbType="Bit NOT NULL")]
		public bool DaySunday
		{
			get
			{
				return this._DaySunday;
			}
			set
			{
				if ((this._DaySunday != value))
				{
					this.OnDaySundayChanging(value);
					this.SendPropertyChanging();
					this._DaySunday = value;
					this.SendPropertyChanged("DaySunday");
					this.OnDaySundayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierLineSeason_CarrierLineTimeTable", Storage="_CarrierLineSeason", ThisKey="CarrierLineSeasonId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CarrierLineSeason CarrierLineSeason
		{
			get
			{
				return this._CarrierLineSeason.Entity;
			}
			set
			{
				CarrierLineSeason previousValue = this._CarrierLineSeason.Entity;
				if (((previousValue != value) 
							|| (this._CarrierLineSeason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarrierLineSeason.Entity = null;
						previousValue.CarrierLineTimeTables.Remove(this);
					}
					this._CarrierLineSeason.Entity = value;
					if ((value != null))
					{
						value.CarrierLineTimeTables.Add(this);
						this._CarrierLineSeasonId = value.Id;
					}
					else
					{
						this._CarrierLineSeasonId = default(int);
					}
					this.SendPropertyChanged("CarrierLineSeason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_CarrierLineTimeTable", Storage="_UltimateTable", ThisKey="PlaceFromId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.CarrierLineTimeTables.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.CarrierLineTimeTables.Add(this);
						this._PlaceFromId = value.Id;
					}
					else
					{
						this._PlaceFromId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_CarrierLineTimeTable1", Storage="_UltimateTable1", ThisKey="PlaceToId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable1
		{
			get
			{
				return this._UltimateTable1.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable1.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable1.Entity = null;
						previousValue.CarrierLineTimeTables1.Remove(this);
					}
					this._UltimateTable1.Entity = value;
					if ((value != null))
					{
						value.CarrierLineTimeTables1.Add(this);
						this._PlaceToId = value.Id;
					}
					else
					{
						this._PlaceToId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UltimateTable1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTable")]
	public partial class UltimateTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _RegexExpression;
		
		private string _RegexExpressionExtended;
		
		private string _IgnoreRegex;
		
		private int _ObjectTypeId;
		
		private bool _IsIgnored;
		
		private System.Nullable<int> _LanguageId;
		
		private System.Nullable<int> _CurrencyId;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _CapturingValue;
		
		private string _CapturingOperator;
		
		private bool _Active;
		
		private string _Accuweather;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private EntitySet<AccommodationCity> _AccommodationCities;
		
		private EntitySet<UltimateTableRelation> _UltimateTableRelations;
		
		private EntitySet<UltimateTableRelation> _UltimateTableRelations1;
		
		private EntitySet<UltimateTableTranslation> _UltimateTableTranslations;
		
		private EntitySet<Advert> _Adverts;
		
		private EntitySet<Advert> _Adverts1;
		
		private EntitySet<CarrierLineTimeTable> _CarrierLineTimeTables;
		
		private EntitySet<CarrierLineTimeTable> _CarrierLineTimeTables1;
		
		private EntitySet<UltimateTable> _UltimateTables;
		
		private EntitySet<UltimateTableInfo> _UltimateTableInfos;
		
		private EntitySet<UltimateTableUrlTag> _UltimateTableUrlTags;
		
		private EntitySet<Accommodation> _Accommodations;
		
		private EntityRef<UltimateTable> _UltimateTable1;
		
		private EntityRef<UltimateTableObjectType> _UltimateTableObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRegexExpressionChanging(string value);
    partial void OnRegexExpressionChanged();
    partial void OnRegexExpressionExtendedChanging(string value);
    partial void OnRegexExpressionExtendedChanged();
    partial void OnIgnoreRegexChanging(string value);
    partial void OnIgnoreRegexChanged();
    partial void OnObjectTypeIdChanging(int value);
    partial void OnObjectTypeIdChanged();
    partial void OnIsIgnoredChanging(bool value);
    partial void OnIsIgnoredChanged();
    partial void OnLanguageIdChanging(System.Nullable<int> value);
    partial void OnLanguageIdChanged();
    partial void OnCurrencyIdChanging(System.Nullable<int> value);
    partial void OnCurrencyIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnCapturingValueChanging(System.Nullable<int> value);
    partial void OnCapturingValueChanged();
    partial void OnCapturingOperatorChanging(string value);
    partial void OnCapturingOperatorChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnAccuweatherChanging(string value);
    partial void OnAccuweatherChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    #endregion
		
		public UltimateTable()
		{
			this._AccommodationCities = new EntitySet<AccommodationCity>(new Action<AccommodationCity>(this.attach_AccommodationCities), new Action<AccommodationCity>(this.detach_AccommodationCities));
			this._UltimateTableRelations = new EntitySet<UltimateTableRelation>(new Action<UltimateTableRelation>(this.attach_UltimateTableRelations), new Action<UltimateTableRelation>(this.detach_UltimateTableRelations));
			this._UltimateTableRelations1 = new EntitySet<UltimateTableRelation>(new Action<UltimateTableRelation>(this.attach_UltimateTableRelations1), new Action<UltimateTableRelation>(this.detach_UltimateTableRelations1));
			this._UltimateTableTranslations = new EntitySet<UltimateTableTranslation>(new Action<UltimateTableTranslation>(this.attach_UltimateTableTranslations), new Action<UltimateTableTranslation>(this.detach_UltimateTableTranslations));
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			this._Adverts1 = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts1), new Action<Advert>(this.detach_Adverts1));
			this._CarrierLineTimeTables = new EntitySet<CarrierLineTimeTable>(new Action<CarrierLineTimeTable>(this.attach_CarrierLineTimeTables), new Action<CarrierLineTimeTable>(this.detach_CarrierLineTimeTables));
			this._CarrierLineTimeTables1 = new EntitySet<CarrierLineTimeTable>(new Action<CarrierLineTimeTable>(this.attach_CarrierLineTimeTables1), new Action<CarrierLineTimeTable>(this.detach_CarrierLineTimeTables1));
			this._UltimateTables = new EntitySet<UltimateTable>(new Action<UltimateTable>(this.attach_UltimateTables), new Action<UltimateTable>(this.detach_UltimateTables));
			this._UltimateTableInfos = new EntitySet<UltimateTableInfo>(new Action<UltimateTableInfo>(this.attach_UltimateTableInfos), new Action<UltimateTableInfo>(this.detach_UltimateTableInfos));
			this._UltimateTableUrlTags = new EntitySet<UltimateTableUrlTag>(new Action<UltimateTableUrlTag>(this.attach_UltimateTableUrlTags), new Action<UltimateTableUrlTag>(this.detach_UltimateTableUrlTags));
			this._Accommodations = new EntitySet<Accommodation>(new Action<Accommodation>(this.attach_Accommodations), new Action<Accommodation>(this.detach_Accommodations));
			this._UltimateTable1 = default(EntityRef<UltimateTable>);
			this._UltimateTableObjectType = default(EntityRef<UltimateTableObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegexExpression", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string RegexExpression
		{
			get
			{
				return this._RegexExpression;
			}
			set
			{
				if ((this._RegexExpression != value))
				{
					this.OnRegexExpressionChanging(value);
					this.SendPropertyChanging();
					this._RegexExpression = value;
					this.SendPropertyChanged("RegexExpression");
					this.OnRegexExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegexExpressionExtended", DbType="NVarChar(MAX)")]
		public string RegexExpressionExtended
		{
			get
			{
				return this._RegexExpressionExtended;
			}
			set
			{
				if ((this._RegexExpressionExtended != value))
				{
					this.OnRegexExpressionExtendedChanging(value);
					this.SendPropertyChanging();
					this._RegexExpressionExtended = value;
					this.SendPropertyChanged("RegexExpressionExtended");
					this.OnRegexExpressionExtendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnoreRegex", DbType="NVarChar(1500)")]
		public string IgnoreRegex
		{
			get
			{
				return this._IgnoreRegex;
			}
			set
			{
				if ((this._IgnoreRegex != value))
				{
					this.OnIgnoreRegexChanging(value);
					this.SendPropertyChanging();
					this._IgnoreRegex = value;
					this.SendPropertyChanged("IgnoreRegex");
					this.OnIgnoreRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeId", DbType="Int NOT NULL")]
		public int ObjectTypeId
		{
			get
			{
				return this._ObjectTypeId;
			}
			set
			{
				if ((this._ObjectTypeId != value))
				{
					if (this._UltimateTableObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeId = value;
					this.SendPropertyChanged("ObjectTypeId");
					this.OnObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIgnored", DbType="Bit NOT NULL")]
		public bool IsIgnored
		{
			get
			{
				return this._IsIgnored;
			}
			set
			{
				if ((this._IsIgnored != value))
				{
					this.OnIsIgnoredChanging(value);
					this.SendPropertyChanging();
					this._IsIgnored = value;
					this.SendPropertyChanged("IsIgnored");
					this.OnIsIgnoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int")]
		public System.Nullable<int> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int")]
		public System.Nullable<int> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._UltimateTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapturingValue", DbType="Int")]
		public System.Nullable<int> CapturingValue
		{
			get
			{
				return this._CapturingValue;
			}
			set
			{
				if ((this._CapturingValue != value))
				{
					this.OnCapturingValueChanging(value);
					this.SendPropertyChanging();
					this._CapturingValue = value;
					this.SendPropertyChanged("CapturingValue");
					this.OnCapturingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapturingOperator", DbType="VarChar(50)")]
		public string CapturingOperator
		{
			get
			{
				return this._CapturingOperator;
			}
			set
			{
				if ((this._CapturingOperator != value))
				{
					this.OnCapturingOperatorChanging(value);
					this.SendPropertyChanging();
					this._CapturingOperator = value;
					this.SendPropertyChanged("CapturingOperator");
					this.OnCapturingOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accuweather", DbType="NVarChar(1500)")]
		public string Accuweather
		{
			get
			{
				return this._Accuweather;
			}
			set
			{
				if ((this._Accuweather != value))
				{
					this.OnAccuweatherChanging(value);
					this.SendPropertyChanging();
					this._Accuweather = value;
					this.SendPropertyChanged("Accuweather");
					this.OnAccuweatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_AccommodationCity", Storage="_AccommodationCities", ThisKey="Id", OtherKey="UltimateTableId")]
		public EntitySet<AccommodationCity> AccommodationCities
		{
			get
			{
				return this._AccommodationCities;
			}
			set
			{
				this._AccommodationCities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation", Storage="_UltimateTableRelations", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<UltimateTableRelation> UltimateTableRelations
		{
			get
			{
				return this._UltimateTableRelations;
			}
			set
			{
				this._UltimateTableRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableRelation1", Storage="_UltimateTableRelations1", ThisKey="Id", OtherKey="ChildId")]
		public EntitySet<UltimateTableRelation> UltimateTableRelations1
		{
			get
			{
				return this._UltimateTableRelations1;
			}
			set
			{
				this._UltimateTableRelations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableTranslation", Storage="_UltimateTableTranslations", ThisKey="Id", OtherKey="UltimateTableId")]
		public EntitySet<UltimateTableTranslation> UltimateTableTranslations
		{
			get
			{
				return this._UltimateTableTranslations;
			}
			set
			{
				this._UltimateTableTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_Advert", Storage="_Adverts", ThisKey="Id", OtherKey="AccommodationTypeId")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_Advert1", Storage="_Adverts1", ThisKey="Id", OtherKey="AdvertInfoId")]
		public EntitySet<Advert> Adverts1
		{
			get
			{
				return this._Adverts1;
			}
			set
			{
				this._Adverts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_CarrierLineTimeTable", Storage="_CarrierLineTimeTables", ThisKey="Id", OtherKey="PlaceFromId")]
		public EntitySet<CarrierLineTimeTable> CarrierLineTimeTables
		{
			get
			{
				return this._CarrierLineTimeTables;
			}
			set
			{
				this._CarrierLineTimeTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_CarrierLineTimeTable1", Storage="_CarrierLineTimeTables1", ThisKey="Id", OtherKey="PlaceToId")]
		public EntitySet<CarrierLineTimeTable> CarrierLineTimeTables1
		{
			get
			{
				return this._CarrierLineTimeTables1;
			}
			set
			{
				this._CarrierLineTimeTables1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTable", Storage="_UltimateTables", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<UltimateTable> UltimateTables
		{
			get
			{
				return this._UltimateTables;
			}
			set
			{
				this._UltimateTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableInfo", Storage="_UltimateTableInfos", ThisKey="Id", OtherKey="UltimateTableId")]
		public EntitySet<UltimateTableInfo> UltimateTableInfos
		{
			get
			{
				return this._UltimateTableInfos;
			}
			set
			{
				this._UltimateTableInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableUrlTag", Storage="_UltimateTableUrlTags", ThisKey="Id", OtherKey="UltimateTableId")]
		public EntitySet<UltimateTableUrlTag> UltimateTableUrlTags
		{
			get
			{
				return this._UltimateTableUrlTags;
			}
			set
			{
				this._UltimateTableUrlTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_Accommodation", Storage="_Accommodations", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<Accommodation> Accommodations
		{
			get
			{
				return this._Accommodations;
			}
			set
			{
				this._Accommodations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTable", Storage="_UltimateTable1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable1
		{
			get
			{
				return this._UltimateTable1.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable1.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable1.Entity = null;
						previousValue.UltimateTables.Remove(this);
					}
					this._UltimateTable1.Entity = value;
					if ((value != null))
					{
						value.UltimateTables.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UltimateTable1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTableObjectType_UltimateTable", Storage="_UltimateTableObjectType", ThisKey="ObjectTypeId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTableObjectType UltimateTableObjectType
		{
			get
			{
				return this._UltimateTableObjectType.Entity;
			}
			set
			{
				UltimateTableObjectType previousValue = this._UltimateTableObjectType.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTableObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTableObjectType.Entity = null;
						previousValue.UltimateTables.Remove(this);
					}
					this._UltimateTableObjectType.Entity = value;
					if ((value != null))
					{
						value.UltimateTables.Add(this);
						this._ObjectTypeId = value.Id;
					}
					else
					{
						this._ObjectTypeId = default(int);
					}
					this.SendPropertyChanged("UltimateTableObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccommodationCities(AccommodationCity entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_AccommodationCities(AccommodationCity entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_UltimateTableRelations(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_UltimateTableRelations(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_UltimateTableRelations1(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.Child = this;
		}
		
		private void detach_UltimateTableRelations1(UltimateTableRelation entity)
		{
			this.SendPropertyChanging();
			entity.Child = null;
		}
		
		private void attach_UltimateTableTranslations(UltimateTableTranslation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_UltimateTableTranslations(UltimateTableTranslation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_Adverts1(Advert entity)
		{
			this.SendPropertyChanging();
			entity.AdvertInfo = this;
		}
		
		private void detach_Adverts1(Advert entity)
		{
			this.SendPropertyChanging();
			entity.AdvertInfo = null;
		}
		
		private void attach_CarrierLineTimeTables(CarrierLineTimeTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_CarrierLineTimeTables(CarrierLineTimeTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_CarrierLineTimeTables1(CarrierLineTimeTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = this;
		}
		
		private void detach_CarrierLineTimeTables1(CarrierLineTimeTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = null;
		}
		
		private void attach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = this;
		}
		
		private void detach_UltimateTables(UltimateTable entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable1 = null;
		}
		
		private void attach_UltimateTableInfos(UltimateTableInfo entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_UltimateTableInfos(UltimateTableInfo entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_UltimateTableUrlTags(UltimateTableUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_UltimateTableUrlTags(UltimateTableUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
		
		private void attach_Accommodations(Accommodation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = this;
		}
		
		private void detach_Accommodations(Accommodation entity)
		{
			this.SendPropertyChanging();
			entity.UltimateTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTableInfo")]
	public partial class UltimateTableInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UltimateTableId;
		
		private int _LanguageId;
		
		private string _WikiLink;
		
		private string _WikiDescription;
		
		private string _Info;
		
		private string _QueryMessage;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUltimateTableIdChanging(int value);
    partial void OnUltimateTableIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnWikiLinkChanging(string value);
    partial void OnWikiLinkChanged();
    partial void OnWikiDescriptionChanging(string value);
    partial void OnWikiDescriptionChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnQueryMessageChanging(string value);
    partial void OnQueryMessageChanged();
    #endregion
		
		public UltimateTableInfo()
		{
			this._UltimateTable = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateTableId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UltimateTableId
		{
			get
			{
				return this._UltimateTableId;
			}
			set
			{
				if ((this._UltimateTableId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUltimateTableIdChanging(value);
					this.SendPropertyChanging();
					this._UltimateTableId = value;
					this.SendPropertyChanged("UltimateTableId");
					this.OnUltimateTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WikiLink", DbType="NVarChar(250)")]
		public string WikiLink
		{
			get
			{
				return this._WikiLink;
			}
			set
			{
				if ((this._WikiLink != value))
				{
					this.OnWikiLinkChanging(value);
					this.SendPropertyChanging();
					this._WikiLink = value;
					this.SendPropertyChanged("WikiLink");
					this.OnWikiLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WikiDescription", DbType="NVarChar(MAX)")]
		public string WikiDescription
		{
			get
			{
				return this._WikiDescription;
			}
			set
			{
				if ((this._WikiDescription != value))
				{
					this.OnWikiDescriptionChanging(value);
					this.SendPropertyChanging();
					this._WikiDescription = value;
					this.SendPropertyChanged("WikiDescription");
					this.OnWikiDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="NVarChar(MAX)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryMessage", DbType="NVarChar(MAX)")]
		public string QueryMessage
		{
			get
			{
				return this._QueryMessage;
			}
			set
			{
				if ((this._QueryMessage != value))
				{
					this.OnQueryMessageChanging(value);
					this.SendPropertyChanging();
					this._QueryMessage = value;
					this.SendPropertyChanged("QueryMessage");
					this.OnQueryMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableInfo", Storage="_UltimateTable", ThisKey="UltimateTableId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.UltimateTableInfos.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.UltimateTableInfos.Add(this);
						this._UltimateTableId = value.Id;
					}
					else
					{
						this._UltimateTableId = default(int);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agency")]
	public partial class Agency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Country;
		
		private string _City;
		
		private string _Address;
		
		private string _ContactPhone;
		
		private string _ContactEmail;
		
		private System.Nullable<int> _LogoId;
		
		private string _UrlWebsite;
		
		private System.Nullable<System.Guid> _ManagerId;
		
		private bool _Private;
		
		private int _LangaugeId;
		
		private int _Priority;
		
		private EntitySet<AgencyDescription> _AgencyDescriptions;
		
		private EntitySet<Advert> _Adverts;
		
		private EntitySet<CarrierLine> _CarrierLines;
		
		private EntitySet<AgencyUrlTag> _AgencyUrlTags;
		
		private EntitySet<AccommodationUrlTag> _AccommodationUrlTags;
		
		private EntitySet<Accommodation> _Accommodations;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<PlaceberryUser> _PlaceberryUser;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnLogoIdChanging(System.Nullable<int> value);
    partial void OnLogoIdChanged();
    partial void OnUrlWebsiteChanging(string value);
    partial void OnUrlWebsiteChanged();
    partial void OnManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnManagerIdChanged();
    partial void OnPrivateChanging(bool value);
    partial void OnPrivateChanged();
    partial void OnLangaugeIdChanging(int value);
    partial void OnLangaugeIdChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public Agency()
		{
			this._AgencyDescriptions = new EntitySet<AgencyDescription>(new Action<AgencyDescription>(this.attach_AgencyDescriptions), new Action<AgencyDescription>(this.detach_AgencyDescriptions));
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			this._CarrierLines = new EntitySet<CarrierLine>(new Action<CarrierLine>(this.attach_CarrierLines), new Action<CarrierLine>(this.detach_CarrierLines));
			this._AgencyUrlTags = new EntitySet<AgencyUrlTag>(new Action<AgencyUrlTag>(this.attach_AgencyUrlTags), new Action<AgencyUrlTag>(this.detach_AgencyUrlTags));
			this._AccommodationUrlTags = new EntitySet<AccommodationUrlTag>(new Action<AccommodationUrlTag>(this.attach_AccommodationUrlTags), new Action<AccommodationUrlTag>(this.detach_AccommodationUrlTags));
			this._Accommodations = new EntitySet<Accommodation>(new Action<Accommodation>(this.attach_Accommodations), new Action<Accommodation>(this.detach_Accommodations));
			this._Language = default(EntityRef<Language>);
			this._PlaceberryUser = default(EntityRef<PlaceberryUser>);
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(250)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(250)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoId", DbType="Int")]
		public System.Nullable<int> LogoId
		{
			get
			{
				return this._LogoId;
			}
			set
			{
				if ((this._LogoId != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogoIdChanging(value);
					this.SendPropertyChanging();
					this._LogoId = value;
					this.SendPropertyChanged("LogoId");
					this.OnLogoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlWebsite", DbType="NVarChar(250)")]
		public string UrlWebsite
		{
			get
			{
				return this._UrlWebsite;
			}
			set
			{
				if ((this._UrlWebsite != value))
				{
					this.OnUrlWebsiteChanging(value);
					this.SendPropertyChanging();
					this._UrlWebsite = value;
					this.SendPropertyChanged("UrlWebsite");
					this.OnUrlWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._PlaceberryUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Private", DbType="Bit NOT NULL")]
		public bool Private
		{
			get
			{
				return this._Private;
			}
			set
			{
				if ((this._Private != value))
				{
					this.OnPrivateChanging(value);
					this.SendPropertyChanging();
					this._Private = value;
					this.SendPropertyChanged("Private");
					this.OnPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangaugeId", DbType="Int NOT NULL")]
		public int LangaugeId
		{
			get
			{
				return this._LangaugeId;
			}
			set
			{
				if ((this._LangaugeId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangaugeIdChanging(value);
					this.SendPropertyChanging();
					this._LangaugeId = value;
					this.SendPropertyChanged("LangaugeId");
					this.OnLangaugeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_AgencyDescription", Storage="_AgencyDescriptions", ThisKey="Id", OtherKey="AgencyId")]
		public EntitySet<AgencyDescription> AgencyDescriptions
		{
			get
			{
				return this._AgencyDescriptions;
			}
			set
			{
				this._AgencyDescriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_Advert", Storage="_Adverts", ThisKey="Id", OtherKey="AgencyId")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_CarrierLine", Storage="_CarrierLines", ThisKey="Id", OtherKey="AgencyId")]
		public EntitySet<CarrierLine> CarrierLines
		{
			get
			{
				return this._CarrierLines;
			}
			set
			{
				this._CarrierLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_AgencyUrlTag", Storage="_AgencyUrlTags", ThisKey="Id", OtherKey="AgencyId")]
		public EntitySet<AgencyUrlTag> AgencyUrlTags
		{
			get
			{
				return this._AgencyUrlTags;
			}
			set
			{
				this._AgencyUrlTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_AccommodationUrlTag", Storage="_AccommodationUrlTags", ThisKey="Id", OtherKey="AgencyId")]
		public EntitySet<AccommodationUrlTag> AccommodationUrlTags
		{
			get
			{
				return this._AccommodationUrlTags;
			}
			set
			{
				this._AccommodationUrlTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_Accommodation", Storage="_Accommodations", ThisKey="Id", OtherKey="AgencyId")]
		public EntitySet<Accommodation> Accommodations
		{
			get
			{
				return this._Accommodations;
			}
			set
			{
				this._Accommodations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Agency", Storage="_Language", ThisKey="LangaugeId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Agencies.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Agencies.Add(this);
						this._LangaugeId = value.Id;
					}
					else
					{
						this._LangaugeId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceberryUser_Agency", Storage="_PlaceberryUser", ThisKey="ManagerId", OtherKey="UserId", IsForeignKey=true, DeleteRule="SET NULL")]
		public PlaceberryUser PlaceberryUser
		{
			get
			{
				return this._PlaceberryUser.Entity;
			}
			set
			{
				PlaceberryUser previousValue = this._PlaceberryUser.Entity;
				if (((previousValue != value) 
							|| (this._PlaceberryUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlaceberryUser.Entity = null;
						previousValue.Agencies.Remove(this);
					}
					this._PlaceberryUser.Entity = value;
					if ((value != null))
					{
						value.Agencies.Add(this);
						this._ManagerId = value.UserId;
					}
					else
					{
						this._ManagerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PlaceberryUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_Agency", Storage="_Image", ThisKey="LogoId", OtherKey="Id", IsForeignKey=true)]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Agencies.Remove(this);
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Agencies.Add(this);
						this._LogoId = value.Id;
					}
					else
					{
						this._LogoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AgencyDescriptions(AgencyDescription entity)
		{
			this.SendPropertyChanging();
			entity.Agency = this;
		}
		
		private void detach_AgencyDescriptions(AgencyDescription entity)
		{
			this.SendPropertyChanging();
			entity.Agency = null;
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Agency = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Agency = null;
		}
		
		private void attach_CarrierLines(CarrierLine entity)
		{
			this.SendPropertyChanging();
			entity.Agency = this;
		}
		
		private void detach_CarrierLines(CarrierLine entity)
		{
			this.SendPropertyChanging();
			entity.Agency = null;
		}
		
		private void attach_AgencyUrlTags(AgencyUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Agency = this;
		}
		
		private void detach_AgencyUrlTags(AgencyUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Agency = null;
		}
		
		private void attach_AccommodationUrlTags(AccommodationUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Agency = this;
		}
		
		private void detach_AccommodationUrlTags(AccommodationUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Agency = null;
		}
		
		private void attach_Accommodations(Accommodation entity)
		{
			this.SendPropertyChanging();
			entity.Agency = this;
		}
		
		private void detach_Accommodations(Accommodation entity)
		{
			this.SendPropertyChanging();
			entity.Agency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_FormatedAdvertListing")]
	public partial class vw_FormatedAdvertListing
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _AccommType;
		
		private bool _PlaceberryAdvert;
		
		private System.Nullable<int> _AgencyId;
		
		private string _AgencyName;
		
		private System.Nullable<int> _AccommodationId;
		
		private System.Nullable<int> _AdvertInfoId;
		
		private System.Nullable<int> _CapacityMin;
		
		private System.Nullable<int> _CapacityMax;
		
		private string _Description;
		
		private int _NeedsTranslation;
		
		private int _LanguageId;
		
		private string _PictureUrl;
		
		private decimal _Price;
		
		private decimal _PriceOld;
		
		private string _Country;
		
		private string _Region;
		
		private string _Island;
		
		private string _City;
		
		private System.Nullable<int> _CurrencyId;
		
		private System.Nullable<int> _AdvertRawId;
		
		private string _SourceTitle;
		
		private string _SourceUrl;
		
		private string _CurrencySymbol;
		
		private System.Nullable<decimal> _PriceBaseCurrency;
		
		private System.Nullable<System.DateTime> _DateAdvertCreated;
		
		public vw_FormatedAdvertListing()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommType", DbType="NVarChar(250)")]
		public string AccommType
		{
			get
			{
				return this._AccommType;
			}
			set
			{
				if ((this._AccommType != value))
				{
					this._AccommType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceberryAdvert", DbType="Bit NOT NULL")]
		public bool PlaceberryAdvert
		{
			get
			{
				return this._PlaceberryAdvert;
			}
			set
			{
				if ((this._PlaceberryAdvert != value))
				{
					this._PlaceberryAdvert = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int")]
		public System.Nullable<int> AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					this._AgencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyName", DbType="NVarChar(250)")]
		public string AgencyName
		{
			get
			{
				return this._AgencyName;
			}
			set
			{
				if ((this._AgencyName != value))
				{
					this._AgencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int")]
		public System.Nullable<int> AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					this._AccommodationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertInfoId", DbType="Int")]
		public System.Nullable<int> AdvertInfoId
		{
			get
			{
				return this._AdvertInfoId;
			}
			set
			{
				if ((this._AdvertInfoId != value))
				{
					this._AdvertInfoId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMin", DbType="Int")]
		public System.Nullable<int> CapacityMin
		{
			get
			{
				return this._CapacityMin;
			}
			set
			{
				if ((this._CapacityMin != value))
				{
					this._CapacityMin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMax", DbType="Int")]
		public System.Nullable<int> CapacityMax
		{
			get
			{
				return this._CapacityMax;
			}
			set
			{
				if ((this._CapacityMax != value))
				{
					this._CapacityMax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsTranslation", DbType="Int NOT NULL")]
		public int NeedsTranslation
		{
			get
			{
				return this._NeedsTranslation;
			}
			set
			{
				if ((this._NeedsTranslation != value))
				{
					this._NeedsTranslation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this._LanguageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(1200)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this._PictureUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(15,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOld", DbType="Decimal(15,2) NOT NULL")]
		public decimal PriceOld
		{
			get
			{
				return this._PriceOld;
			}
			set
			{
				if ((this._PriceOld != value))
				{
					this._PriceOld = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(150)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(150)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(150)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this._Island = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(150)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int")]
		public System.Nullable<int> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					this._CurrencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertRawId", DbType="Int")]
		public System.Nullable<int> AdvertRawId
		{
			get
			{
				return this._AdvertRawId;
			}
			set
			{
				if ((this._AdvertRawId != value))
				{
					this._AdvertRawId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SourceTitle
		{
			get
			{
				return this._SourceTitle;
			}
			set
			{
				if ((this._SourceTitle != value))
				{
					this._SourceTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceUrl", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SourceUrl
		{
			get
			{
				return this._SourceUrl;
			}
			set
			{
				if ((this._SourceUrl != value))
				{
					this._SourceUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySymbol", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string CurrencySymbol
		{
			get
			{
				return this._CurrencySymbol;
			}
			set
			{
				if ((this._CurrencySymbol != value))
				{
					this._CurrencySymbol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBaseCurrency", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> PriceBaseCurrency
		{
			get
			{
				return this._PriceBaseCurrency;
			}
			set
			{
				if ((this._PriceBaseCurrency != value))
				{
					this._PriceBaseCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdvertCreated", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateAdvertCreated
		{
			get
			{
				return this._DateAdvertCreated;
			}
			set
			{
				if ((this._DateAdvertCreated != value))
				{
					this._DateAdvertCreated = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UltimateTableUrlTag")]
	public partial class UltimateTableUrlTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UltimateTableId;
		
		private int _LanguageId;
		
		private string _UrlTag;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUltimateTableIdChanging(int value);
    partial void OnUltimateTableIdChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnUrlTagChanging(string value);
    partial void OnUrlTagChanged();
    #endregion
		
		public UltimateTableUrlTag()
		{
			this._Language = default(EntityRef<Language>);
			this._UltimateTable = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateTableId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UltimateTableId
		{
			get
			{
				return this._UltimateTableId;
			}
			set
			{
				if ((this._UltimateTableId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUltimateTableIdChanging(value);
					this.SendPropertyChanging();
					this._UltimateTableId = value;
					this.SendPropertyChanged("UltimateTableId");
					this.OnUltimateTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTag", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlTag
		{
			get
			{
				return this._UrlTag;
			}
			set
			{
				if ((this._UrlTag != value))
				{
					this.OnUrlTagChanging(value);
					this.SendPropertyChanging();
					this._UrlTag = value;
					this.SendPropertyChanged("UrlTag");
					this.OnUrlTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_UltimateTableUrlTag", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.UltimateTableUrlTags.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.UltimateTableUrlTags.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_UltimateTableUrlTag", Storage="_UltimateTable", ThisKey="UltimateTableId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.UltimateTableUrlTags.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.UltimateTableUrlTags.Add(this);
						this._UltimateTableId = value.Id;
					}
					else
					{
						this._UltimateTableId = default(int);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgencyUrlTag")]
	public partial class AgencyUrlTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UrlTag;
		
		private int _AgencyId;
		
		private EntityRef<Agency> _Agency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlTagChanging(string value);
    partial void OnUrlTagChanged();
    partial void OnAgencyIdChanging(int value);
    partial void OnAgencyIdChanged();
    #endregion
		
		public AgencyUrlTag()
		{
			this._Agency = default(EntityRef<Agency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTag", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UrlTag
		{
			get
			{
				return this._UrlTag;
			}
			set
			{
				if ((this._UrlTag != value))
				{
					this.OnUrlTagChanging(value);
					this.SendPropertyChanging();
					this._UrlTag = value;
					this.SendPropertyChanged("UrlTag");
					this.OnUrlTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int NOT NULL")]
		public int AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					if (this._Agency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_AgencyUrlTag", Storage="_Agency", ThisKey="AgencyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Agency Agency
		{
			get
			{
				return this._Agency.Entity;
			}
			set
			{
				Agency previousValue = this._Agency.Entity;
				if (((previousValue != value) 
							|| (this._Agency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agency.Entity = null;
						previousValue.AgencyUrlTags.Remove(this);
					}
					this._Agency.Entity = value;
					if ((value != null))
					{
						value.AgencyUrlTags.Add(this);
						this._AgencyId = value.Id;
					}
					else
					{
						this._AgencyId = default(int);
					}
					this.SendPropertyChanged("Agency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccommodationUrlTag")]
	public partial class AccommodationUrlTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UrlTag;
		
		private int _LanguageId;
		
		private int _AgencyId;
		
		private int _AccommodationId;
		
		private EntityRef<Agency> _Agency;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Accommodation> _Accommodation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlTagChanging(string value);
    partial void OnUrlTagChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnAgencyIdChanging(int value);
    partial void OnAgencyIdChanged();
    partial void OnAccommodationIdChanging(int value);
    partial void OnAccommodationIdChanged();
    #endregion
		
		public AccommodationUrlTag()
		{
			this._Agency = default(EntityRef<Agency>);
			this._Language = default(EntityRef<Language>);
			this._Accommodation = default(EntityRef<Accommodation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTag", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UrlTag
		{
			get
			{
				return this._UrlTag;
			}
			set
			{
				if ((this._UrlTag != value))
				{
					this.OnUrlTagChanging(value);
					this.SendPropertyChanging();
					this._UrlTag = value;
					this.SendPropertyChanged("UrlTag");
					this.OnUrlTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					if (this._Agency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int NOT NULL")]
		public int AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					if (this._Accommodation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccommodationIdChanging(value);
					this.SendPropertyChanging();
					this._AccommodationId = value;
					this.SendPropertyChanged("AccommodationId");
					this.OnAccommodationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_AccommodationUrlTag", Storage="_Agency", ThisKey="AgencyId", OtherKey="Id", IsForeignKey=true)]
		public Agency Agency
		{
			get
			{
				return this._Agency.Entity;
			}
			set
			{
				Agency previousValue = this._Agency.Entity;
				if (((previousValue != value) 
							|| (this._Agency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agency.Entity = null;
						previousValue.AccommodationUrlTags.Remove(this);
					}
					this._Agency.Entity = value;
					if ((value != null))
					{
						value.AccommodationUrlTags.Add(this);
						this._AgencyId = value.Id;
					}
					else
					{
						this._AgencyId = default(int);
					}
					this.SendPropertyChanged("Agency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_AccommodationUrlTag", Storage="_Language", ThisKey="LanguageId", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.AccommodationUrlTags.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.AccommodationUrlTags.Add(this);
						this._LanguageId = value.Id;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationUrlTag", Storage="_Accommodation", ThisKey="AccommodationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Accommodation Accommodation
		{
			get
			{
				return this._Accommodation.Entity;
			}
			set
			{
				Accommodation previousValue = this._Accommodation.Entity;
				if (((previousValue != value) 
							|| (this._Accommodation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accommodation.Entity = null;
						previousValue.AccommodationUrlTags.Remove(this);
					}
					this._Accommodation.Entity = value;
					if ((value != null))
					{
						value.AccommodationUrlTags.Add(this);
						this._AccommodationId = value.Id;
					}
					else
					{
						this._AccommodationId = default(int);
					}
					this.SendPropertyChanged("Accommodation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accommodation")]
	public partial class Accommodation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _AccommodationCityId;
		
		private bool _Active;
		
		private int _AgencyId;
		
		private int _TypeId;
		
		private System.Nullable<int> _CapacityMin;
		
		private System.Nullable<int> _CapacityMax;
		
		private bool _Pets;
		
		private bool _IsPublished;
		
		private string _PetsSpec;
		
		private string _Activities;
		
		private string _Facilities;
		
		private bool _IsDirty;
		
		private string _Address;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private EntitySet<AccommodationImage> _AccommodationImages;
		
		private EntitySet<AccommodationDescription> _AccommodationDescriptions;
		
		private EntitySet<AccommodationPrice> _AccommodationPrices;
		
		private EntitySet<Advert> _Adverts;
		
		private EntitySet<AccommodationUrlTag> _AccommodationUrlTags;
		
		private EntityRef<AccommodationCity> _AccommodationCity;
		
		private EntityRef<Agency> _Agency;
		
		private EntityRef<UltimateTable> _UltimateTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAccommodationCityIdChanging(int value);
    partial void OnAccommodationCityIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnAgencyIdChanging(int value);
    partial void OnAgencyIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnCapacityMinChanging(System.Nullable<int> value);
    partial void OnCapacityMinChanged();
    partial void OnCapacityMaxChanging(System.Nullable<int> value);
    partial void OnCapacityMaxChanged();
    partial void OnPetsChanging(bool value);
    partial void OnPetsChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    partial void OnPetsSpecChanging(string value);
    partial void OnPetsSpecChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnFacilitiesChanging(string value);
    partial void OnFacilitiesChanged();
    partial void OnIsDirtyChanging(bool value);
    partial void OnIsDirtyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    #endregion
		
		public Accommodation()
		{
			this._AccommodationImages = new EntitySet<AccommodationImage>(new Action<AccommodationImage>(this.attach_AccommodationImages), new Action<AccommodationImage>(this.detach_AccommodationImages));
			this._AccommodationDescriptions = new EntitySet<AccommodationDescription>(new Action<AccommodationDescription>(this.attach_AccommodationDescriptions), new Action<AccommodationDescription>(this.detach_AccommodationDescriptions));
			this._AccommodationPrices = new EntitySet<AccommodationPrice>(new Action<AccommodationPrice>(this.attach_AccommodationPrices), new Action<AccommodationPrice>(this.detach_AccommodationPrices));
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			this._AccommodationUrlTags = new EntitySet<AccommodationUrlTag>(new Action<AccommodationUrlTag>(this.attach_AccommodationUrlTags), new Action<AccommodationUrlTag>(this.detach_AccommodationUrlTags));
			this._AccommodationCity = default(EntityRef<AccommodationCity>);
			this._Agency = default(EntityRef<Agency>);
			this._UltimateTable = default(EntityRef<UltimateTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationCityId", DbType="Int NOT NULL")]
		public int AccommodationCityId
		{
			get
			{
				return this._AccommodationCityId;
			}
			set
			{
				if ((this._AccommodationCityId != value))
				{
					if (this._AccommodationCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccommodationCityIdChanging(value);
					this.SendPropertyChanging();
					this._AccommodationCityId = value;
					this.SendPropertyChanged("AccommodationCityId");
					this.OnAccommodationCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int NOT NULL")]
		public int AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					if (this._Agency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._UltimateTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMin", DbType="Int")]
		public System.Nullable<int> CapacityMin
		{
			get
			{
				return this._CapacityMin;
			}
			set
			{
				if ((this._CapacityMin != value))
				{
					this.OnCapacityMinChanging(value);
					this.SendPropertyChanging();
					this._CapacityMin = value;
					this.SendPropertyChanged("CapacityMin");
					this.OnCapacityMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMax", DbType="Int")]
		public System.Nullable<int> CapacityMax
		{
			get
			{
				return this._CapacityMax;
			}
			set
			{
				if ((this._CapacityMax != value))
				{
					this.OnCapacityMaxChanging(value);
					this.SendPropertyChanging();
					this._CapacityMax = value;
					this.SendPropertyChanged("CapacityMax");
					this.OnCapacityMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pets", DbType="Bit NOT NULL")]
		public bool Pets
		{
			get
			{
				return this._Pets;
			}
			set
			{
				if ((this._Pets != value))
				{
					this.OnPetsChanging(value);
					this.SendPropertyChanging();
					this._Pets = value;
					this.SendPropertyChanged("Pets");
					this.OnPetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsSpec", DbType="NVarChar(1000)")]
		public string PetsSpec
		{
			get
			{
				return this._PetsSpec;
			}
			set
			{
				if ((this._PetsSpec != value))
				{
					this.OnPetsSpecChanging(value);
					this.SendPropertyChanging();
					this._PetsSpec = value;
					this.SendPropertyChanged("PetsSpec");
					this.OnPetsSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(1000)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NVarChar(1000)")]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this.OnFacilitiesChanging(value);
					this.SendPropertyChanging();
					this._Facilities = value;
					this.SendPropertyChanged("Facilities");
					this.OnFacilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDirty", DbType="Bit NOT NULL")]
		public bool IsDirty
		{
			get
			{
				return this._IsDirty;
			}
			set
			{
				if ((this._IsDirty != value))
				{
					this.OnIsDirtyChanging(value);
					this.SendPropertyChanging();
					this._IsDirty = value;
					this.SendPropertyChanged("IsDirty");
					this.OnIsDirtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationImage", Storage="_AccommodationImages", ThisKey="Id", OtherKey="AccommodationId")]
		public EntitySet<AccommodationImage> AccommodationImages
		{
			get
			{
				return this._AccommodationImages;
			}
			set
			{
				this._AccommodationImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationDescription", Storage="_AccommodationDescriptions", ThisKey="Id", OtherKey="AccommodationId")]
		public EntitySet<AccommodationDescription> AccommodationDescriptions
		{
			get
			{
				return this._AccommodationDescriptions;
			}
			set
			{
				this._AccommodationDescriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationPrice", Storage="_AccommodationPrices", ThisKey="Id", OtherKey="AccommodationId")]
		public EntitySet<AccommodationPrice> AccommodationPrices
		{
			get
			{
				return this._AccommodationPrices;
			}
			set
			{
				this._AccommodationPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_Advert", Storage="_Adverts", ThisKey="Id", OtherKey="AccommodationId")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accommodation_AccommodationUrlTag", Storage="_AccommodationUrlTags", ThisKey="Id", OtherKey="AccommodationId")]
		public EntitySet<AccommodationUrlTag> AccommodationUrlTags
		{
			get
			{
				return this._AccommodationUrlTags;
			}
			set
			{
				this._AccommodationUrlTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccommodationCity_Accommodation", Storage="_AccommodationCity", ThisKey="AccommodationCityId", OtherKey="Id", IsForeignKey=true)]
		public AccommodationCity AccommodationCity
		{
			get
			{
				return this._AccommodationCity.Entity;
			}
			set
			{
				AccommodationCity previousValue = this._AccommodationCity.Entity;
				if (((previousValue != value) 
							|| (this._AccommodationCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccommodationCity.Entity = null;
						previousValue.Accommodations.Remove(this);
					}
					this._AccommodationCity.Entity = value;
					if ((value != null))
					{
						value.Accommodations.Add(this);
						this._AccommodationCityId = value.Id;
					}
					else
					{
						this._AccommodationCityId = default(int);
					}
					this.SendPropertyChanged("AccommodationCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agency_Accommodation", Storage="_Agency", ThisKey="AgencyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Agency Agency
		{
			get
			{
				return this._Agency.Entity;
			}
			set
			{
				Agency previousValue = this._Agency.Entity;
				if (((previousValue != value) 
							|| (this._Agency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agency.Entity = null;
						previousValue.Accommodations.Remove(this);
					}
					this._Agency.Entity = value;
					if ((value != null))
					{
						value.Accommodations.Add(this);
						this._AgencyId = value.Id;
					}
					else
					{
						this._AgencyId = default(int);
					}
					this.SendPropertyChanged("Agency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UltimateTable_Accommodation", Storage="_UltimateTable", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public UltimateTable UltimateTable
		{
			get
			{
				return this._UltimateTable.Entity;
			}
			set
			{
				UltimateTable previousValue = this._UltimateTable.Entity;
				if (((previousValue != value) 
							|| (this._UltimateTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UltimateTable.Entity = null;
						previousValue.Accommodations.Remove(this);
					}
					this._UltimateTable.Entity = value;
					if ((value != null))
					{
						value.Accommodations.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("UltimateTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccommodationImages(AccommodationImage entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = this;
		}
		
		private void detach_AccommodationImages(AccommodationImage entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = null;
		}
		
		private void attach_AccommodationDescriptions(AccommodationDescription entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = this;
		}
		
		private void detach_AccommodationDescriptions(AccommodationDescription entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = null;
		}
		
		private void attach_AccommodationPrices(AccommodationPrice entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = this;
		}
		
		private void detach_AccommodationPrices(AccommodationPrice entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = null;
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = null;
		}
		
		private void attach_AccommodationUrlTags(AccommodationUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = this;
		}
		
		private void detach_AccommodationUrlTags(AccommodationUrlTag entity)
		{
			this.SendPropertyChanging();
			entity.Accommodation = null;
		}
	}
	
	public partial class GetParentCitiesResult
	{
		
		private System.Nullable<int> _Lvl;
		
		private System.Nullable<int> _ParentId;
		
		private string _ParentTitle;
		
		private System.Nullable<int> _ChildId;
		
		private string _ChildTitle;
		
		public GetParentCitiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lvl", DbType="Int")]
		public System.Nullable<int> Lvl
		{
			get
			{
				return this._Lvl;
			}
			set
			{
				if ((this._Lvl != value))
				{
					this._Lvl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTitle", DbType="NVarChar(250)")]
		public string ParentTitle
		{
			get
			{
				return this._ParentTitle;
			}
			set
			{
				if ((this._ParentTitle != value))
				{
					this._ParentTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildId", DbType="Int")]
		public System.Nullable<int> ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					this._ChildId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildTitle", DbType="NVarChar(250)")]
		public string ChildTitle
		{
			get
			{
				return this._ChildTitle;
			}
			set
			{
				if ((this._ChildTitle != value))
				{
					this._ChildTitle = value;
				}
			}
		}
	}
	
	public partial class GetParentChildsByTypeResult
	{
		
		private System.Nullable<int> _Lvl;
		
		private System.Nullable<int> _ParentId;
		
		private string _ParentTitle;
		
		private System.Nullable<int> _ChildId;
		
		private string _ChildTitle;
		
		public GetParentChildsByTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lvl", DbType="Int")]
		public System.Nullable<int> Lvl
		{
			get
			{
				return this._Lvl;
			}
			set
			{
				if ((this._Lvl != value))
				{
					this._Lvl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTitle", DbType="NVarChar(250)")]
		public string ParentTitle
		{
			get
			{
				return this._ParentTitle;
			}
			set
			{
				if ((this._ParentTitle != value))
				{
					this._ParentTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildId", DbType="Int")]
		public System.Nullable<int> ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					this._ChildId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildTitle", DbType="NVarChar(250)")]
		public string ChildTitle
		{
			get
			{
				return this._ChildTitle;
			}
			set
			{
				if ((this._ChildTitle != value))
				{
					this._ChildTitle = value;
				}
			}
		}
	}
	
	public partial class GetAdvertResult
	{
		
		private int _AdvertID;
		
		private string _AccommodationType;
		
		private bool _PlaceberryAdvert;
		
		private System.Nullable<int> _AccommodationId;
		
		private string _AccommSubType;
		
		private string _VacationType;
		
		private System.Nullable<int> _Stars;
		
		private string _Title;
		
		private string _Beach;
		
		private string _Facilities;
		
		private string _Activities;
		
		private string _Country;
		
		private string _City;
		
		private string _Region;
		
		private string _Subregion;
		
		private string _Island;
		
		private string _PetsSpec;
		
		private string _URLLink;
		
		private string _Source;
		
		private System.Nullable<int> _PriceFromPersonDayEUR;
		
		private System.Nullable<int> _PriceOldPersonDayEUR;
		
		private System.Nullable<int> _PriceChngPerc;
		
		public GetAdvertResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertID", DbType="Int NOT NULL")]
		public int AdvertID
		{
			get
			{
				return this._AdvertID;
			}
			set
			{
				if ((this._AdvertID != value))
				{
					this._AdvertID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AccommodationType
		{
			get
			{
				return this._AccommodationType;
			}
			set
			{
				if ((this._AccommodationType != value))
				{
					this._AccommodationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceberryAdvert", DbType="Bit NOT NULL")]
		public bool PlaceberryAdvert
		{
			get
			{
				return this._PlaceberryAdvert;
			}
			set
			{
				if ((this._PlaceberryAdvert != value))
				{
					this._PlaceberryAdvert = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int")]
		public System.Nullable<int> AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					this._AccommodationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommSubType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AccommSubType
		{
			get
			{
				return this._AccommSubType;
			}
			set
			{
				if ((this._AccommSubType != value))
				{
					this._AccommSubType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacationType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string VacationType
		{
			get
			{
				return this._VacationType;
			}
			set
			{
				if ((this._VacationType != value))
				{
					this._VacationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stars", DbType="Int")]
		public System.Nullable<int> Stars
		{
			get
			{
				return this._Stars;
			}
			set
			{
				if ((this._Stars != value))
				{
					this._Stars = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beach", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Beach
		{
			get
			{
				return this._Beach;
			}
			set
			{
				if ((this._Beach != value))
				{
					this._Beach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				if ((this._Facilities != value))
				{
					this._Facilities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this._Activities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subregion", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Subregion
		{
			get
			{
				return this._Subregion;
			}
			set
			{
				if ((this._Subregion != value))
				{
					this._Subregion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this._Island = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetsSpec", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string PetsSpec
		{
			get
			{
				return this._PetsSpec;
			}
			set
			{
				if ((this._PetsSpec != value))
				{
					this._PetsSpec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLLink", DbType="NVarChar(1200)")]
		public string URLLink
		{
			get
			{
				return this._URLLink;
			}
			set
			{
				if ((this._URLLink != value))
				{
					this._URLLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFromPersonDayEUR", DbType="Int")]
		public System.Nullable<int> PriceFromPersonDayEUR
		{
			get
			{
				return this._PriceFromPersonDayEUR;
			}
			set
			{
				if ((this._PriceFromPersonDayEUR != value))
				{
					this._PriceFromPersonDayEUR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOldPersonDayEUR", DbType="Int")]
		public System.Nullable<int> PriceOldPersonDayEUR
		{
			get
			{
				return this._PriceOldPersonDayEUR;
			}
			set
			{
				if ((this._PriceOldPersonDayEUR != value))
				{
					this._PriceOldPersonDayEUR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceChngPerc", DbType="Int")]
		public System.Nullable<int> PriceChngPerc
		{
			get
			{
				return this._PriceChngPerc;
			}
			set
			{
				if ((this._PriceChngPerc != value))
				{
					this._PriceChngPerc = value;
				}
			}
		}
	}
	
	public partial class GetParsedQueryResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _ObjectTypeCode;
		
		private string _ObjectTypeGroupCode;
		
		private System.Nullable<int> _Priority;
		
		public GetParsedQueryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ObjectTypeCode
		{
			get
			{
				return this._ObjectTypeCode;
			}
			set
			{
				if ((this._ObjectTypeCode != value))
				{
					this._ObjectTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeGroupCode", DbType="NVarChar(10)")]
		public string ObjectTypeGroupCode
		{
			get
			{
				return this._ObjectTypeGroupCode;
			}
			set
			{
				if ((this._ObjectTypeGroupCode != value))
				{
					this._ObjectTypeGroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
	}
	
	public partial class ProcessAccommodationAdvertResult
	{
		
		private System.Nullable<int> _Column1;
		
		public ProcessAccommodationAdvertResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetParentsResult
	{
		
		private System.Nullable<int> _Lvl;
		
		private int _ParentId;
		
		private string _ParentTitle;
		
		private string _ObjectTypeCode;
		
		private string _ObjectTypeGroupCode;
		
		private string _UrlTag;
		
		public GetParentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lvl", DbType="Int")]
		public System.Nullable<int> Lvl
		{
			get
			{
				return this._Lvl;
			}
			set
			{
				if ((this._Lvl != value))
				{
					this._Lvl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTitle", DbType="NVarChar(250)")]
		public string ParentTitle
		{
			get
			{
				return this._ParentTitle;
			}
			set
			{
				if ((this._ParentTitle != value))
				{
					this._ParentTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ObjectTypeCode
		{
			get
			{
				return this._ObjectTypeCode;
			}
			set
			{
				if ((this._ObjectTypeCode != value))
				{
					this._ObjectTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeGroupCode", DbType="NVarChar(10)")]
		public string ObjectTypeGroupCode
		{
			get
			{
				return this._ObjectTypeGroupCode;
			}
			set
			{
				if ((this._ObjectTypeGroupCode != value))
				{
					this._ObjectTypeGroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTag", DbType="NVarChar(50)")]
		public string UrlTag
		{
			get
			{
				return this._UrlTag;
			}
			set
			{
				if ((this._UrlTag != value))
				{
					this._UrlTag = value;
				}
			}
		}
	}
	
	public partial class GetAgencyAdvertsResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _AccommType;
		
		private string _AgencyUrlTag;
		
		private string _AccommodationUrlTag;
		
		private bool _PlaceberryAdvert;
		
		private System.Nullable<int> _AgencyId;
		
		private string _AgencyName;
		
		private System.Nullable<int> _AccommodationId;
		
		private System.Nullable<int> _AdvertInfoId;
		
		private System.Nullable<int> _CapacityMin;
		
		private System.Nullable<int> _CapacityMax;
		
		private string _Description;
		
		private int _NeedsTranslation;
		
		private int _LanguageId;
		
		private string _PictureUrl;
		
		private decimal _Price;
		
		private decimal _PriceOld;
		
		private string _Country;
		
		private string _Region;
		
		private string _Island;
		
		private string _City;
		
		private System.Nullable<int> _CurrencyId;
		
		private System.Nullable<int> _AdvertRawId;
		
		private string _SourceTitle;
		
		private string _SourceUrl;
		
		private string _CurrencySymbol;
		
		private System.Nullable<decimal> _PriceBaseCurrency;
		
		private System.Nullable<System.DateTime> _DateAdvertCreated;
		
		private System.Nullable<int> _AccommDescLangId;
		
		private System.Nullable<int> _AccommTransLangId;
		
		public GetAgencyAdvertsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommType", DbType="NVarChar(250)")]
		public string AccommType
		{
			get
			{
				return this._AccommType;
			}
			set
			{
				if ((this._AccommType != value))
				{
					this._AccommType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyUrlTag", DbType="NVarChar(100)")]
		public string AgencyUrlTag
		{
			get
			{
				return this._AgencyUrlTag;
			}
			set
			{
				if ((this._AgencyUrlTag != value))
				{
					this._AgencyUrlTag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationUrlTag", DbType="NVarChar(100)")]
		public string AccommodationUrlTag
		{
			get
			{
				return this._AccommodationUrlTag;
			}
			set
			{
				if ((this._AccommodationUrlTag != value))
				{
					this._AccommodationUrlTag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceberryAdvert", DbType="Bit NOT NULL")]
		public bool PlaceberryAdvert
		{
			get
			{
				return this._PlaceberryAdvert;
			}
			set
			{
				if ((this._PlaceberryAdvert != value))
				{
					this._PlaceberryAdvert = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int")]
		public System.Nullable<int> AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					this._AgencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyName", DbType="NVarChar(250)")]
		public string AgencyName
		{
			get
			{
				return this._AgencyName;
			}
			set
			{
				if ((this._AgencyName != value))
				{
					this._AgencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationId", DbType="Int")]
		public System.Nullable<int> AccommodationId
		{
			get
			{
				return this._AccommodationId;
			}
			set
			{
				if ((this._AccommodationId != value))
				{
					this._AccommodationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertInfoId", DbType="Int")]
		public System.Nullable<int> AdvertInfoId
		{
			get
			{
				return this._AdvertInfoId;
			}
			set
			{
				if ((this._AdvertInfoId != value))
				{
					this._AdvertInfoId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMin", DbType="Int")]
		public System.Nullable<int> CapacityMin
		{
			get
			{
				return this._CapacityMin;
			}
			set
			{
				if ((this._CapacityMin != value))
				{
					this._CapacityMin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityMax", DbType="Int")]
		public System.Nullable<int> CapacityMax
		{
			get
			{
				return this._CapacityMax;
			}
			set
			{
				if ((this._CapacityMax != value))
				{
					this._CapacityMax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsTranslation", DbType="Int NOT NULL")]
		public int NeedsTranslation
		{
			get
			{
				return this._NeedsTranslation;
			}
			set
			{
				if ((this._NeedsTranslation != value))
				{
					this._NeedsTranslation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this._LanguageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(1200)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this._PictureUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(15,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOld", DbType="Decimal(15,2) NOT NULL")]
		public decimal PriceOld
		{
			get
			{
				return this._PriceOld;
			}
			set
			{
				if ((this._PriceOld != value))
				{
					this._PriceOld = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(150)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(150)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Island", DbType="NVarChar(150)")]
		public string Island
		{
			get
			{
				return this._Island;
			}
			set
			{
				if ((this._Island != value))
				{
					this._Island = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(150)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int")]
		public System.Nullable<int> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					this._CurrencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertRawId", DbType="Int")]
		public System.Nullable<int> AdvertRawId
		{
			get
			{
				return this._AdvertRawId;
			}
			set
			{
				if ((this._AdvertRawId != value))
				{
					this._AdvertRawId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SourceTitle
		{
			get
			{
				return this._SourceTitle;
			}
			set
			{
				if ((this._SourceTitle != value))
				{
					this._SourceTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceUrl", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SourceUrl
		{
			get
			{
				return this._SourceUrl;
			}
			set
			{
				if ((this._SourceUrl != value))
				{
					this._SourceUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySymbol", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string CurrencySymbol
		{
			get
			{
				return this._CurrencySymbol;
			}
			set
			{
				if ((this._CurrencySymbol != value))
				{
					this._CurrencySymbol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBaseCurrency", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> PriceBaseCurrency
		{
			get
			{
				return this._PriceBaseCurrency;
			}
			set
			{
				if ((this._PriceBaseCurrency != value))
				{
					this._PriceBaseCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdvertCreated", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateAdvertCreated
		{
			get
			{
				return this._DateAdvertCreated;
			}
			set
			{
				if ((this._DateAdvertCreated != value))
				{
					this._DateAdvertCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommDescLangId", DbType="Int")]
		public System.Nullable<int> AccommDescLangId
		{
			get
			{
				return this._AccommDescLangId;
			}
			set
			{
				if ((this._AccommDescLangId != value))
				{
					this._AccommDescLangId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommTransLangId", DbType="Int")]
		public System.Nullable<int> AccommTransLangId
		{
			get
			{
				return this._AccommTransLangId;
			}
			set
			{
				if ((this._AccommTransLangId != value))
				{
					this._AccommTransLangId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
