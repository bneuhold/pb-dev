<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Booking_confirm" xml:space="preserve">
    <value>Reservation confirmation</value>
  </data>
  <data name="Booking_success" xml:space="preserve">
    <value>You have successfully sent your reservation!</value>
  </data>
  <data name="Booking_success_msg" xml:space="preserve">
    <value>Thank you for booking Apartment Novak!
&lt;br /&gt;&lt;br /&gt;
Check your email for confirmation. Please keep in mind:
&lt;br /&gt;&lt;br /&gt;
- We need to receive the full amount or reservation deposit of 200 EUR no later than 3 days after you have made your booking. If we don't receive it, the system will cancel the reservation and you will have to book again.
&lt;br /&gt;
- The deposit is non-refundable, in case of reservation cancellation. If you paid in the full amount  and wish to cancel your reservation, only 80% of the total amount is refundable.
&lt;br /&gt;
- The price does not include sojourn tax which amounts to approximately 1 EUR per person per day (children from 12-18 years 0.5 EUR per person per day) and which is charged upon your arrival.
&lt;br /&gt;&lt;br /&gt;
In case of any problems feel free to contact us directly at vilanovak@apartmaninovak.com.
&lt;br /&gt;&lt;br /&gt;
Thank you and welcome!</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ERR_MSG_DATE_SELECT" xml:space="preserve">
    <value>Incorrectly chosen dates!</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NumOfBabies" xml:space="preserve">
    <value>Number of children under the age of 3</value>
  </data>
  <data name="NumOfPersons" xml:space="preserve">
    <value>Number of people</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PriceByDay" xml:space="preserve">
    <value>Price per day</value>
  </data>
  <data name="PriceSum" xml:space="preserve">
    <value>Total price</value>
  </data>
  <data name="PromoCode" xml:space="preserve">
    <value>Promo code</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="BookingRuleMsg" xml:space="preserve">
    <value>During the high season (July and August) it is possible to book only blocks of 7 days (arriving at Saturday and leaving on one of the next Saturdays).
&lt;br /&gt;&lt;br /&gt;
Thank you for understanding!</value>
  </data>
  <data name="DateOfArrival" xml:space="preserve">
    <value>Select date of arrival</value>
  </data>
  <data name="NumOfNights" xml:space="preserve">
    <value>Number of nights</value>
  </data>
  <data name="ErrMsgBookingNotAvailable" xml:space="preserve">
    <value>Booking not available.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="NO_PRICES" xml:space="preserve">
    <value>For chosen dates we have no defined prices. Your booking request will be sent but we will contact you directly via email and let you know the what the final price in the chosen period will be.</value>
  </data>
  <data name="RetToApartmentsList" xml:space="preserve">
    <value>Return to apartments list</value>
  </data>
  <data name="BookingCreatedSuccess" xml:space="preserve">
    <value>Booking successfully created!</value>
  </data>
  <data name="AdminAccommList" xml:space="preserve">
    <value>Accommodation list</value>
  </data>
  <data name="Apartment" xml:space="preserve">
    <value>Apartment</value>
  </data>
</root>